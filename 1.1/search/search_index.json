{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>This PHP SDK produces the SARIF output, which is a JSON file formatted in accordance with the latest specification. This implementation follows the general format rules but also specifies several custom properties written in property bags.</p> <p></p>"},{"location":"getting-started/","title":"Getting started","text":""},{"location":"getting-started/#requirements","title":"Requirements","text":"<ul> <li>PHP 7.1 or greater</li> <li>ext-json</li> <li>ext-pcre</li> <li>ext-spl</li> </ul> <p>Generated with clue/graph-composer</p>"},{"location":"getting-started/#installation","title":"Installation","text":""},{"location":"getting-started/#with-composer","title":"With Composer","text":"<p>Install the SARIF PHP SDK with Composer.</p> <pre><code>composer require bartlett/sarif-php-sdk ^1\n</code></pre>"},{"location":"getting-started/#with-git","title":"With Git","text":"<p>The SARIF PHP SDK can be directly used from GitHub by cloning the repository into a directory of your choice.</p> <pre><code>git clone -b 1.0 https://github.com/llaville/sarif-php-sdk.git\n</code></pre>"},{"location":"reference/","title":"API Reference","text":""},{"location":"reference/#address-object","title":"address object","text":"<p>See official specification</p>"},{"location":"reference/#artifact-object","title":"artifact object","text":"<p>See official specification</p>"},{"location":"reference/#artifactchange-object","title":"artifactChange object","text":"<p>See official specification</p>"},{"location":"reference/#artifactcontent-object","title":"artifactContent object","text":"<p>See official specification</p>"},{"location":"reference/#attachment-object","title":"attachment object","text":"<p>See official specification</p>"},{"location":"reference/#codeflow-object","title":"codeFlow object","text":"<p>See official specification</p>"},{"location":"reference/#configurationoverride-object","title":"configurationOverride object","text":"<p>See official specification</p>"},{"location":"reference/#conversion-object","title":"conversion object","text":"<p>See official specification</p>"},{"location":"reference/#edge-object","title":"edge object","text":"<p>See official specification</p>"},{"location":"reference/#edgetraversal-object","title":"edgeTraversal object","text":"<p>See official specification</p>"},{"location":"reference/#exception-object","title":"exception object","text":"<p>See official specification</p>"},{"location":"reference/#externalproperties-object","title":"externalProperties object","text":"<p>See official specification</p>"},{"location":"reference/#externalpropertyfilereference-object","title":"externalPropertyFileReference object","text":"<p>See official specification</p>"},{"location":"reference/#externalpropertyfilereferences-object","title":"externalPropertyFileReferences object","text":"<p>See official specification</p>"},{"location":"reference/#fix-object","title":"fix object","text":"<p>See official specification</p>"},{"location":"reference/#graph-object","title":"graph object","text":"<p>See official specification</p>"},{"location":"reference/#graphtraversal-object","title":"graphTraversal object","text":"<p>See official specification</p>"},{"location":"reference/#invocation-object","title":"invocation object","text":"<p>See official specification</p>"},{"location":"reference/#locationrelationship-object","title":"locationRelationship object","text":"<p>See official specification</p>"},{"location":"reference/#logicallocation-object","title":"logicalLocation object","text":"<p>See official specification</p>"},{"location":"reference/#message-object","title":"message object","text":"<p>See official specification</p>"},{"location":"reference/#node-object","title":"node object","text":"<p>See official specification</p>"},{"location":"reference/#notification-object","title":"notification object","text":"<p>See official specification</p>"},{"location":"reference/#physicallocation-object","title":"physicalLocation object","text":"<p>See official specification</p>"},{"location":"reference/#rectangle-object","title":"rectangle object","text":"<p>See official specification</p>"},{"location":"reference/#replacement-object","title":"replacement object","text":"<p>See official specification</p>"},{"location":"reference/#reportingconfiguration-object","title":"reportingConfiguration object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptor-object","title":"reportingDescriptor object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptorreference-object","title":"reportingDescriptorReference object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptorrelationship-object","title":"reportingDescriptorRelationship object","text":"<p>See official specification</p>"},{"location":"reference/#result-object","title":"result object","text":"<p>See official specification</p>"},{"location":"reference/#resultprovenance-object","title":"resultProvenance object","text":"<p>See official specification</p>"},{"location":"reference/#run-object","title":"run object","text":"<p>See official specification</p>"},{"location":"reference/#runautomationdetails-object","title":"runAutomationDetails object","text":"<p>See official specification</p>"},{"location":"reference/#sariflog-object","title":"sarifLog object","text":"<p>See official specification</p>"},{"location":"reference/#speciallocations-object","title":"specialLocations object","text":"<p>See official specification</p>"},{"location":"reference/#stack-object","title":"stack object","text":"<p>See official specification</p>"},{"location":"reference/#stackframe-object","title":"stackFrame object","text":"<p>See official specification</p>"},{"location":"reference/#suppression-object","title":"suppression object","text":"<p>See official specification</p>"},{"location":"reference/#threadflow-object","title":"threadFlow object","text":"<p>See official specification</p>"},{"location":"reference/#threadflowlocation-object","title":"threadFlowLocation object","text":"<p>See official specification</p>"},{"location":"reference/#tool-object","title":"tool object","text":"<p>See official specification</p>"},{"location":"reference/#toolcomponentreference-object","title":"toolComponentReference object","text":"<p>See official specification</p>"},{"location":"reference/#translationmetadata-object","title":"translationMetadata object","text":"<p>See official specification</p>"},{"location":"reference/#versioncontroldetails-object","title":"versionControlDetails object","text":"<p>See official specification</p>"},{"location":"reference/#webrequest-object","title":"webRequest object","text":"<p>See official specification</p>"},{"location":"reference/#webresponse-object","title":"webResponse object","text":"<p>See official specification</p>"},{"location":"reference/address/","title":"Address","text":""},{"location":"reference/address/#address-object","title":"address object","text":"<p>An <code>address</code> object describes a physical or virtual address, or a range of addresses, in an \u201caddressable region\u201d (memory or a binary file).</p>"},{"location":"reference/address/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"addresses\": [\n                {\n                    \"absoluteAddress\": 1024,\n                    \"kind\": \"module\",\n                    \"name\": \"Multitool.exe\"\n                },\n                {\n                    \"absoluteAddress\": 1400,\n                    \"relativeAddress\": 376,\n                    \"kind\": \"header\",\n                    \"name\": \"Sections\",\n                    \"offsetFromParent\": 376,\n                    \"parentIndex\": 0\n                },\n                {\n                    \"absoluteAddress\": 1536,\n                    \"relativeAddress\": 512,\n                    \"kind\": \"section\",\n                    \"name\": \".text\",\n                    \"offsetFromParent\": 136,\n                    \"parentIndex\": 1\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/address/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/address.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Address;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$address1 = new Address();\n$address1-&gt;setName('Multitool.exe');\n$address1-&gt;setKind('module');\n$address1-&gt;setAbsoluteAddress(1024);\n\n$address2 = new Address();\n$address2-&gt;setName('Sections');\n$address2-&gt;setKind('header');\n$address2-&gt;setParentIndex(0);\n$address2-&gt;setOffsetFromParent(376);\n$address2-&gt;setAbsoluteAddress(1400);\n$address2-&gt;setRelativeAddress(376);\n\n$address3 = new Address();\n$address3-&gt;setName('.text');\n$address3-&gt;setKind('section');\n$address3-&gt;setParentIndex(1);\n$address3-&gt;setOffsetFromParent(136);\n$address3-&gt;setAbsoluteAddress(1536);\n$address3-&gt;setRelativeAddress(512);\n\n$run = new Run($tool);\n$run-&gt;addAddresses([$address1, $address2, $address3]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/artifact/","title":"Artifact","text":""},{"location":"reference/artifact/#artifact-object","title":"artifact object","text":"<p>An <code>artifact</code> object represents a single artifact.</p>"},{"location":"reference/artifact/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"artifacts\": [\n                {\n                    \"location\": {\n                        \"uri\": \"file:\\/\\/\\/C:\\/Code\\/app.zip\"\n                    },\n                    \"mimeType\": \"application\\/zip\"\n                },\n                {\n                    \"location\": {\n                        \"uri\": \"docs\\/intro.docx\"\n                    },\n                    \"mimeType\": \"application\\/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                },\n                {\n                    \"parentIndex\": 1,\n                    \"offset\": 17522,\n                    \"length\": 4050,\n                    \"mimeType\": \"application\\/x-contoso-animation\"\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/artifact/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/artifact.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Artifact;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool($driver);\n\n$artifact1 = new Artifact();\n$artifactLocation1 = new ArtifactLocation();\n$artifactLocation1-&gt;setUri('file:///C:/Code/app.zip');\n$artifact1-&gt;setLocation($artifactLocation1);\n$artifact1-&gt;setMimeType('application/zip');\n\n$artifact2 = new Artifact();\n$artifactLocation2 = new ArtifactLocation();\n$artifactLocation2-&gt;setUri('docs/intro.docx');\n$artifact2-&gt;setLocation($artifactLocation2);\n$artifact2-&gt;setMimeType('application/vnd.openxmlformats-officedocument.wordprocessingml.document');\n$artifact2-&gt;setParentIndex(0);\n\n$artifact3 = new Artifact();\n$artifact3-&gt;setOffset(17522);\n$artifact3-&gt;setLength(4050);\n$artifact3-&gt;setMimeType('application/x-contoso-animation');\n$artifact3-&gt;setParentIndex(1);\n\n$run = new Run($tool);\n$run-&gt;addArtifacts([$artifact1, $artifact2, $artifact3]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/artifactChange/","title":"artifactChange","text":""},{"location":"reference/artifactChange/#artifactchange-object","title":"artifactChange object","text":"<p>An <code>artifactChange</code> object represents a change to a single artifact.</p>"},{"location":"reference/artifactChange/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src\\/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"\\/\\/ \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/artifactChange/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/fix.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n$replacement = new Replacement(new Region(1, 1, 1));\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n$artifactChange = new ArtifactChange($artifactLocation, [$replacement]);\n\n$fix = new Fix([$artifactChange]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n\n$log = new SarifLog([$run]);\n\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/artifactContent/","title":"artifactContent","text":""},{"location":"reference/artifactContent/#artifactcontent-object","title":"artifactContent object","text":"<p>Certain properties in this document represent the contents of portions of artifacts external to the log file, for example, artifacts that were scanned by an analysis tool. SARIF represents such content with an <code>artifactContent</code> object. Depending on the circumstances, the SARIF log file might need to represent this content as readable text, raw bytes, or both.</p>"},{"location":"reference/artifactContent/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src\\/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"\\/\\/ \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/artifactContent/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/fix.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n$replacement = new Replacement(new Region(1, 1, 1));\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n$artifactChange = new ArtifactChange($artifactLocation, [$replacement]);\n\n$fix = new Fix([$artifactChange]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n\n$log = new SarifLog([$run]);\n\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/attachment/","title":"Attachment","text":""},{"location":"reference/attachment/#attachment-object","title":"attachment object","text":"<p>An <code>attachment</code> object describes an artifact relevant to the detection of a result.</p>"},{"location":"reference/attachment/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on screen shot provided\"\n                    },\n                    \"attachments\": [\n                        {\n                            \"artifactLocation\": {\n                                \"uri\": \"file:\\/\\/\\/C:\\/ScanOutput\\/image001.png\"\n                            },\n                            \"description\": {\n                                \"text\": \"Screen shot\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/attachment/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/attachment.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$attachment = new Attachment();\n$attachment-&gt;setDescription(new Message('Screen shot'));\n$attachment-&gt;setArtifactLocation(new ArtifactLocation('file:///C:/ScanOutput/image001.png'));\n\n$result = new Result(new Message('Have a look on screen shot provided'));\n$result-&gt;addAttachments([$attachment]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/codeFlow/","title":"codeFlow","text":""},{"location":"reference/codeFlow/#codeflow-object","title":"codeFlow object","text":"<p>A <code>codeFlow</code> object describes the progress of one or more programs through one or more thread flows, which together lead to the detection of a problem in the system being analyzed.</p>"},{"location":"reference/codeFlow/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui\\/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/codeFlow/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/codeFlow.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(42));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('42'),\n    'y' =&gt; new MultiformatMessageString('54'),\n    'x+y' =&gt; new MultiformatMessageString('96'),\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$threadFlow = new ThreadFlow([$threadFlowLocation]);\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage(new Message('A threadFlow object'));\n\n$codeFlow = new CodeFlow([$threadFlow]);\n$codeFlow-&gt;setMessage(new Message('A codeFlow object'));\n\n$result = new Result(new Message('A result object'));\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/configurationOverride/","title":"configurationOverride","text":""},{"location":"reference/configurationOverride/#configurationoverride-object","title":"configurationOverride object","text":"<p>A <code>configurationOverride</code> object modifies the effective runtime configuration of a specified <code>reportingDescriptor</code> object, which we refer to as theDescriptor.</p>"},{"location":"reference/configurationOverride/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA2101\",\n                            \"defaultConfiguration\": {\n                                \"enabled\": true,\n                                \"level\": \"error\",\n                                \"rank\": -1\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"ruleConfigurationOverrides\": [\n                        {\n                            \"configuration\": {\n                                \"enabled\": true,\n                                \"level\": \"warning\",\n                                \"rank\": -1\n                            },\n                            \"descriptor\": {\n                                \"index\": 0\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/configurationOverride/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/configurationOverride.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ConfigurationOverride;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\ReportingConfiguration;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor('CA2101');\n$reportingConf = new ReportingConfiguration();\n$reportingConf-&gt;setLevel('error');\n$rule-&gt;setDefaultConfiguration($reportingConf);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool($driver);\n\n$ruleConf = new ReportingConfiguration();\n$ruleConf-&gt;setLevel('warning');\n\n$confOverrides = new ConfigurationOverride();\n$descriptor = new ReportingDescriptorReference(0);\n$confOverrides-&gt;setDescriptor($descriptor);\n$confOverrides-&gt;setConfiguration($ruleConf);\n\n$invocation = new Invocation(true);\n$invocation-&gt;addRuleConfigurationOverrides([$confOverrides]);\n\n$run = new Run($tool);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/conversion/","title":"Conversion","text":""},{"location":"reference/conversion/#conversion-object","title":"conversion object","text":"<p>A <code>conversion</code> object describes how a converter transformed the output of an analysis tool from the analysis tool\u2019s native output format into the SARIF format.</p>"},{"location":"reference/conversion/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"AndroidStudio\",\n                    \"semanticVersion\": \"1.0.0-beta.1\",\n                    \"informationUri\": \"https:\\/\\/android-studion.dev\"\n                }\n            },\n            \"conversion\": {\n                \"tool\": {\n                    \"driver\": {\n                        \"name\": \"SARIF SDK Multitool\"\n                    }\n                },\n                \"invocation\": {\n                    \"executionSuccessful\": true,\n                    \"commandLine\": \"Sarif.Multitool.exe convert -t AndroidStudio northwind.log\"\n                },\n                \"analysisToolLogFiles\": [\n                    {\n                        \"uri\": \"northwind.log\",\n                        \"uriBaseId\": \"$LOG_DIR$\"\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/conversion/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/conversion.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Conversion;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('AndroidStudio');\n$driver-&gt;setInformationUri('https://android-studion.dev');\n$driver-&gt;setSemanticVersion('1.0.0-beta.1');\n$tool = new Tool($driver);\n\n$converter = new Tool(new ToolComponent('SARIF SDK Multitool'));\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('northwind.log');\n$artifactLocation-&gt;setUriBaseId('$LOG_DIR$');\n\n$invocation = new Invocation(true);\n$invocation-&gt;setCommandLine('Sarif.Multitool.exe convert -t AndroidStudio northwind.log');\n\n$conversion = new Conversion($converter);\n$conversion-&gt;addAnalysisToolLogFiles([$artifactLocation]);\n$conversion-&gt;setInvocation($invocation);\n\n$run = new Run($tool);\n$run-&gt;setConversion($conversion);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/edge/","title":"Edge","text":""},{"location":"reference/edge/#edge-object","title":"edge object","text":"<p>A <code>edge</code> object represents a directed edge in the graph represented by theGraph.</p>"},{"location":"reference/edge/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/edge/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/graph.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Rectangle;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$nodes = [];\n$nodes[2] = new Node('n2');\n$nodes[3] = new Node('n3');\n$nodes[4] = new Node('n4');\n$nodes[1] = new Node('n1');\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge('e1', 'n3', 'n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$result = new Result(new Message('Have a look on this graph'));\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/edgeTraversal/","title":"edgeTraversal","text":""},{"location":"reference/edgeTraversal/#edgetraversal-object","title":"edgeTraversal object","text":"<p>An <code>edgeTraversal</code> object represents the traversal of a single edge during a graph traversal.</p>"},{"location":"reference/edgeTraversal/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A graph and edge traversal objects\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n1\"\n                                },\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n1\",\n                                    \"targetNodeId\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"e2\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"e3\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"graphTraversals\": [\n                        {\n                            \"resultGraphIndex\": 0,\n                            \"initialState\": {\n                                \"x\": {\n                                    \"text\": \"1\"\n                                },\n                                \"y\": {\n                                    \"text\": \"2\"\n                                },\n                                \"x+y\": {\n                                    \"text\": \"3\"\n                                }\n                            },\n                            \"edgeTraversals\": [\n                                {\n                                    \"edgeId\": \"e1\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"2\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"6\"\n                                        }\n                                    }\n                                },\n                                {\n                                    \"edgeId\": \"e3\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"7\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"11\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/edgeTraversal/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/graphTraversal.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\EdgeTraversal;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\GraphTraversal;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool($driver);\n\n$nodes = [];\n$nodes[1] = new Node('n1');\n$nodes[2] = new Node('n2');\n$nodes[3] = new Node('n3');\n$nodes[4] = new Node('n4');\n\n$edges = [];\n$edges[1] = new Edge('e1', 'n1', 'n2');\n$edges[2] = new Edge('e2', 'n2', 'n3');\n$edges[3] = new Edge('e3', 'n2', 'n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$graphTraversal = new GraphTraversal(null, 0);\n$graphTraversal-&gt;addAdditionalPropertiesInitialState([\n    'x' =&gt; new MultiformatMessageString('1'),\n    'y' =&gt; new MultiformatMessageString('2'),\n    'x+y' =&gt; new MultiformatMessageString('3'),\n]);\n\n$edgeTraversal1 = new EdgeTraversal('e1');\n$edgeTraversal1-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('4'),\n    'y' =&gt; new MultiformatMessageString('2'),\n    'x+y' =&gt; new MultiformatMessageString('6'),\n]);\n$edgeTraversal3 = new EdgeTraversal('e3');\n$edgeTraversal3-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('4'),\n    'y' =&gt; new MultiformatMessageString('7'),\n    'x+y' =&gt; new MultiformatMessageString('11'),\n]);\n$graphTraversal-&gt;addEdgeTraversals([$edgeTraversal1, $edgeTraversal3]);\n\n$result = new Result(new Message('A graph and edge traversal objects'));\n$result-&gt;addGraphs([$graph]);\n$result-&gt;addGraphTraversals([$graphTraversal]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/exception/","title":"Exception","text":""},{"location":"reference/exception/#exception-object","title":"exception object","text":"<p>An <code>exception</code> object describes a runtime exception encountered during the execution of an analysis tool. This includes signals in POSIX-conforming operating systems.</p>"},{"location":"reference/exception/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"exception\": {\n                                \"message\": \"Exception evaluating rule 'C2001'\"\n                            },\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/exception/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/exception.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Exception;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor('CTN9999');\n$ruleV1-&gt;setShortDescription(new MultiformatMessageString('First version of rule.'));\n$ruleV2 = new ReportingDescriptor('CTN9999');\n$ruleV2-&gt;setShortDescription(new MultiformatMessageString('Second version of rule.'));\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool($driver);\n\n$notification = new Notification(new Message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\"));\n$notification-&gt;setAssociatedRule(new ReportingDescriptorReference(0, 'C2001'));\n$notification-&gt;setDescriptor(new ReportingDescriptorReference(1, 'CTN9999'));\n$notification-&gt;setLevel('error');\n$exception = new Exception();\n$exception-&gt;setMessage(\"Exception evaluating rule 'C2001'\");\n$notification-&gt;setRuntimeException($exception);\n$invocation = new Invocation(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (\\Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/externalProperties/","title":"externalProperties","text":""},{"location":"reference/externalProperties/#externalproperties-object","title":"externalProperties object","text":"<p>The top-level element of an external property file SHALL be an object which we refer to as an <code>externalProperties</code> object.</p>"},{"location":"reference/externalProperties/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": []\n        }\n    ],\n    \"inlineExternalProperties\": [\n        {\n            \"schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n            \"version\": \"2.1.0\",\n            \"guid\": \"00001111-2222-1111-8888-555566667777\",\n            \"runGuid\": \"88889999-AAAA-1111-8888-DDDDEEEEFFFF\",\n            \"externalizedProperties\": {\n                \"team\": \"Security Assurance Team\"\n            },\n            \"artifacts\": [\n                {\n                    \"location\": {\n                        \"uri\": \"apple.png\"\n                    },\n                    \"mimeType\": \"image\\/png\"\n                },\n                {\n                    \"location\": {\n                        \"uri\": \"banana.png\"\n                    },\n                    \"mimeType\": \"image\\/png\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/externalProperties/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/externalProperties.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Artifact;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalProperties;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$apple = new Artifact();\n$location = new ArtifactLocation();\n$location-&gt;setUri('apple.png');\n$apple-&gt;setLocation($location);\n$apple-&gt;setMimeType('image/png');\n\n$banana = new Artifact();\n$location = new ArtifactLocation();\n$location-&gt;setUri('banana.png');\n$banana-&gt;setLocation($location);\n$banana-&gt;setMimeType('image/png');\n\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('team', 'Security Assurance Team');\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n$externalProperties = new ExternalProperties();\n$externalProperties-&gt;setGuid('00001111-2222-1111-8888-555566667777');\n$externalProperties-&gt;setRunGuid('88889999-AAAA-1111-8888-DDDDEEEEFFFF');\n$externalProperties-&gt;addArtifacts([$apple, $banana]);\n$externalProperties-&gt;setExternalizedProperties($propertyBag);\n$log-&gt;addInlineExternalProperties([$externalProperties]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/externalPropertyFileReference/","title":"externalPropertyFileReference","text":""},{"location":"reference/externalPropertyFileReference/#externalpropertyfilereference-object","title":"externalPropertyFileReference object","text":"<p>An <code>externalPropertyFileReference</code> object contains information that enables a SARIF consumer to locate the external property files that contain the values of all externalized properties associated with theRun.</p>"},{"location":"reference/externalPropertyFileReference/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"LOGSDIR\": {\n                    \"uri\": \"file:\\/\\/\\/C:\\/logs\\/\"\n                }\n            },\n            \"externalPropertyFileReferences\": {\n                \"conversion\": {\n                    \"location\": {\n                        \"uri\": \"scantool.conversion.sarif-external-properties\",\n                        \"uriBaseId\": \"LOGSDIR\"\n                    },\n                    \"guid\": \"11111111-1111-1111-8888-111111111111\"\n                },\n                \"results\": [\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-1.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"22222222-2222-1111-8888-222222222222\",\n                        \"itemCount\": 1000\n                    },\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-2.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"33333333-3333-1111-8888-333333333333\",\n                        \"itemCount\": 4277\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/externalPropertyFileReference/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/externalPropertyFileReferences.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReference;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReferences;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n$logsDir = new ArtifactLocation();\n$logsDir-&gt;setUri('file:///C:/logs/');\n$run-&gt;addAdditionalProperties([\n    'LOGSDIR' =&gt; $logsDir,\n]);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.conversion.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$conversion = new ExternalPropertyFileReference($location, '11111111-1111-1111-8888-111111111111');\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-1.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef1 = new ExternalPropertyFileReference($location, '22222222-2222-1111-8888-222222222222');\n$resultRef1-&gt;setItemCount(1000);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-2.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef2 = new ExternalPropertyFileReference($location, '33333333-3333-1111-8888-333333333333');\n$resultRef2-&gt;setItemCount(4277);\n\n$externalPropertyFileReferences = new ExternalPropertyFileReferences();\n$externalPropertyFileReferences-&gt;setConversion($conversion);\n$externalPropertyFileReferences-&gt;addResults([$resultRef1, $resultRef2]);\n$run-&gt;setExternalPropertyFileReferences($externalPropertyFileReferences);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/externalPropertyFileReferences/","title":"externalPropertyFileReferences","text":""},{"location":"reference/externalPropertyFileReferences/#externalpropertyfilereferences-object","title":"externalPropertyFileReferences object","text":"<p>An <code>externalPropertyFileReferences</code> object contains information that enables a SARIF consumer to locate the external property files that contain the values of all externalized properties associated with theRun.</p>"},{"location":"reference/externalPropertyFileReferences/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"LOGSDIR\": {\n                    \"uri\": \"file:\\/\\/\\/C:\\/logs\\/\"\n                }\n            },\n            \"externalPropertyFileReferences\": {\n                \"conversion\": {\n                    \"location\": {\n                        \"uri\": \"scantool.conversion.sarif-external-properties\",\n                        \"uriBaseId\": \"LOGSDIR\"\n                    },\n                    \"guid\": \"11111111-1111-1111-8888-111111111111\"\n                },\n                \"results\": [\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-1.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"22222222-2222-1111-8888-222222222222\",\n                        \"itemCount\": 1000\n                    },\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-2.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"33333333-3333-1111-8888-333333333333\",\n                        \"itemCount\": 4277\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/externalPropertyFileReferences/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/externalPropertyFileReferences.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReference;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReferences;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n$logsDir = new ArtifactLocation();\n$logsDir-&gt;setUri('file:///C:/logs/');\n$run-&gt;addAdditionalProperties([\n    'LOGSDIR' =&gt; $logsDir,\n]);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.conversion.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$conversion = new ExternalPropertyFileReference($location, '11111111-1111-1111-8888-111111111111');\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-1.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef1 = new ExternalPropertyFileReference($location, '22222222-2222-1111-8888-222222222222');\n$resultRef1-&gt;setItemCount(1000);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-2.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef2 = new ExternalPropertyFileReference($location, '33333333-3333-1111-8888-333333333333');\n$resultRef2-&gt;setItemCount(4277);\n\n$externalPropertyFileReferences = new ExternalPropertyFileReferences();\n$externalPropertyFileReferences-&gt;setConversion($conversion);\n$externalPropertyFileReferences-&gt;addResults([$resultRef1, $resultRef2]);\n$run-&gt;setExternalPropertyFileReferences($externalPropertyFileReferences);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/fix/","title":"Fix","text":""},{"location":"reference/fix/#fix-object","title":"fix object","text":"<p>A <code>fix</code> object represents a proposed fix for the problem indicated by theResult. It specifies a set of artifacts to modify. For each artifact, it specifies regions to remove, and provides new content to insert.</p>"},{"location":"reference/fix/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src\\/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"\\/\\/ \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/fix/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/fix.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n$replacement = new Replacement(new Region(1, 1, 1));\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n$artifactChange = new ArtifactChange($artifactLocation, [$replacement]);\n\n$fix = new Fix([$artifactChange]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n\n$log = new SarifLog([$run]);\n\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/graph/","title":"Graph","text":""},{"location":"reference/graph/#graph-object","title":"graph object","text":"<p>A <code>graph</code> object represents a directed graph, a network of nodes and directed edges that describes some aspect of the structure of the code (for example, a call graph).</p>"},{"location":"reference/graph/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/graph/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/graph.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Rectangle;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$nodes = [];\n$nodes[2] = new Node('n2');\n$nodes[3] = new Node('n3');\n$nodes[4] = new Node('n4');\n$nodes[1] = new Node('n1');\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge('e1', 'n3', 'n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$result = new Result(new Message('Have a look on this graph'));\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/graphTraversal/","title":"graphTraversal","text":""},{"location":"reference/graphTraversal/#graphtraversal-object","title":"graphTraversal object","text":"<p>A <code>graphTraversal</code> object represents a \"graph traversal\", that is, a path through a graph specified by a sequence of connected \"edge traversals\", each of which is represented by an <code>edgeTraversal</code> object.</p>"},{"location":"reference/graphTraversal/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A graph and edge traversal objects\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n1\"\n                                },\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n1\",\n                                    \"targetNodeId\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"e2\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"e3\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"graphTraversals\": [\n                        {\n                            \"resultGraphIndex\": 0,\n                            \"initialState\": {\n                                \"x\": {\n                                    \"text\": \"1\"\n                                },\n                                \"y\": {\n                                    \"text\": \"2\"\n                                },\n                                \"x+y\": {\n                                    \"text\": \"3\"\n                                }\n                            },\n                            \"edgeTraversals\": [\n                                {\n                                    \"edgeId\": \"e1\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"2\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"6\"\n                                        }\n                                    }\n                                },\n                                {\n                                    \"edgeId\": \"e3\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"7\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"11\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/graphTraversal/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/graphTraversal.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\EdgeTraversal;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\GraphTraversal;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool($driver);\n\n$nodes = [];\n$nodes[1] = new Node('n1');\n$nodes[2] = new Node('n2');\n$nodes[3] = new Node('n3');\n$nodes[4] = new Node('n4');\n\n$edges = [];\n$edges[1] = new Edge('e1', 'n1', 'n2');\n$edges[2] = new Edge('e2', 'n2', 'n3');\n$edges[3] = new Edge('e3', 'n2', 'n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$graphTraversal = new GraphTraversal(null, 0);\n$graphTraversal-&gt;addAdditionalPropertiesInitialState([\n    'x' =&gt; new MultiformatMessageString('1'),\n    'y' =&gt; new MultiformatMessageString('2'),\n    'x+y' =&gt; new MultiformatMessageString('3'),\n]);\n\n$edgeTraversal1 = new EdgeTraversal('e1');\n$edgeTraversal1-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('4'),\n    'y' =&gt; new MultiformatMessageString('2'),\n    'x+y' =&gt; new MultiformatMessageString('6'),\n]);\n$edgeTraversal3 = new EdgeTraversal('e3');\n$edgeTraversal3-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('4'),\n    'y' =&gt; new MultiformatMessageString('7'),\n    'x+y' =&gt; new MultiformatMessageString('11'),\n]);\n$graphTraversal-&gt;addEdgeTraversals([$edgeTraversal1, $edgeTraversal3]);\n\n$result = new Result(new Message('A graph and edge traversal objects'));\n$result-&gt;addGraphs([$graph]);\n$result-&gt;addGraphTraversals([$graphTraversal]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/invocation/","title":"Invocation","text":""},{"location":"reference/invocation/#invocation-object","title":"invocation object","text":"<p>An <code>invocation</code> object describes the invocation of the analysis tool that was run.</p>"},{"location":"reference/invocation/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/invocation/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptorReference.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor('CTN9999');\n$ruleV1-&gt;setShortDescription(new MultiformatMessageString('First version of rule.'));\n$ruleV2 = new ReportingDescriptor('CTN9999');\n$ruleV2-&gt;setShortDescription(new MultiformatMessageString('Second version of rule.'));\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool($driver);\n\n$notification = new Notification(new Message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\"));\n$notification-&gt;setAssociatedRule(new ReportingDescriptorReference(0, 'C2001'));\n$notification-&gt;setDescriptor(new ReportingDescriptorReference(1, 'CTN9999'));\n$notification-&gt;setLevel('error');\n$invocation = new Invocation(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/locationRelationship/","title":"locationRelationship","text":""},{"location":"reference/locationRelationship/#locationrelationship-object","title":"locationRelationship object","text":"<p>A <code>locationRelationship</code> object specifies one or more directed relationships from one location object, which we refer to as theSource, to another one, which we refer to as theTarget.</p>"},{"location":"reference/locationRelationship/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object with locationRelationship object\"\n                    },\n                    \"locations\": [\n                        {\n                            \"id\": 0,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"f.h\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 42\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 1,\n                                    \"kinds\": [\n                                        \"isIncludedBy\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    \"relatedLocations\": [\n                        {\n                            \"id\": 1,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"g.h\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 17\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 0,\n                                    \"kinds\": [\n                                        \"includes\"\n                                    ]\n                                },\n                                {\n                                    \"target\": 2,\n                                    \"kinds\": [\n                                        \"isIncludedBy\"\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            \"id\": 2,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"g.c\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 8\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 1,\n                                    \"kinds\": [\n                                        \"includes\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/locationRelationship/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/locationRelationship.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LocationRelationship;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$location = [];\n$physicalLocation = [];\n$artifactLocation = [];\n$region = [];\n$relationships = [];\n\n$location[0] = new Location();\n$location[0]-&gt;setId(0);\n$artifactLocation[0] = new ArtifactLocation();\n$artifactLocation[0]-&gt;setUri('f.h');\n$physicalLocation[0] = new PhysicalLocation($artifactLocation[0]);\n$region[0] = new Region(42);\n$physicalLocation[0]-&gt;setRegion($region[0]);\n$location[0]-&gt;setPhysicalLocation($physicalLocation[0]);\n$relationships[0] = new LocationRelationship(1);\n$relationships[0]-&gt;addKinds(['isIncludedBy']);\n$location[0]-&gt;addRelationships([$relationships[0]]);\n\n$location[1] = new Location();\n$location[1]-&gt;setId(1);\n$artifactLocation[1] = new ArtifactLocation();\n$artifactLocation[1]-&gt;setUri('g.h');\n$physicalLocation[1] = new PhysicalLocation($artifactLocation[1]);\n$region[1] = new Region(17);\n$physicalLocation[1]-&gt;setRegion($region[1]);\n$location[1]-&gt;setPhysicalLocation($physicalLocation[1]);\n$relationships[1] = new LocationRelationship(0);\n$relationships[1]-&gt;addKinds(['includes']);\n$relationships[2] = new LocationRelationship(2);\n$relationships[2]-&gt;addKinds(['isIncludedBy']);\n$location[1]-&gt;addRelationships([$relationships[1], $relationships[2]]);\n\n$location[2] = new Location();\n$location[2]-&gt;setId(2);\n$artifactLocation[2] = new ArtifactLocation();\n$artifactLocation[2]-&gt;setUri('g.c');\n$physicalLocation[2] = new PhysicalLocation($artifactLocation[2]);\n$region[2] = new Region(8);\n$physicalLocation[2]-&gt;setRegion($region[2]);\n$location[2]-&gt;setPhysicalLocation($physicalLocation[2]);\n$relationships[2] = new LocationRelationship(1);\n$relationships[2]-&gt;addKinds(['includes']);\n$location[2]-&gt;addRelationships([$relationships[2]]);\n\n$result = new Result(new Message('A result object with locationRelationship object'));\n$result-&gt;addLocations([$location[0]]);\n$result-&gt;addRelatedLocations([$location[1], $location[2]]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/logicalLocation/","title":"logicalLocation","text":""},{"location":"reference/logicalLocation/#logicallocation-object","title":"logicalLocation object","text":"<p>A <code>logicalLocation</code> object describes a logical location. A logical location is a location specified by a programmatic construct such as a namespace, a type, or a method, without regard to the physical location where the construct occurs.</p>"},{"location":"reference/logicalLocation/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https:\\/\\/psalm.de\"\n                }\n            },\n            \"logicalLocations\": [\n                {\n                    \"name\": \"Hook\",\n                    \"fullyQualifiedName\": \"Psalm\\\\Plugin\\\\Hook\",\n                    \"kind\": \"namespace\"\n                },\n                {\n                    \"name\": \"afterAnalysis\",\n                    \"fullyQualifiedName\": \"Psalm\\\\Plugin\\\\Hook\\\\AfterAnalysisInterface\\\\afterAnalysis\",\n                    \"kind\": \"function\"\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/logicalLocation/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/logicalLocation.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n$tool = new Tool($driver);\n\n$nsLocation = new LogicalLocation();\n$nsLocation-&gt;setName('Hook');\n$nsLocation-&gt;setFullyQualifiedName('Psalm\\Plugin\\Hook');\n$nsLocation-&gt;setKind('namespace');\n\n$funcLocation = new LogicalLocation();\n$funcLocation-&gt;setName('afterAnalysis');\n$funcLocation-&gt;setFullyQualifiedName('Psalm\\Plugin\\Hook\\AfterAnalysisInterface\\afterAnalysis');\n$funcLocation-&gt;setKind('function');\n\n$run = new Run($tool);\n$run-&gt;addLogicalLocations([$nsLocation, $funcLocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/message/","title":"Message","text":""},{"location":"reference/message/#message-object","title":"message object","text":"<p>Certain objects in this document define messages intended to be viewed by a user. SARIF represents such a message with a <code>message</code> object, which offers the following features:</p> <ul> <li>Message strings in plain text (\u201cplain text messages\u201d).</li> <li>Message strings that incorporate formatting information (\u201cformatted messages\u201d) in GitHub Flavored Markdown.</li> <li>Message strings with placeholders for variable information.</li> <li>Message strings with embedded links.</li> </ul>"},{"location":"reference/message/#plaintext-example","title":"PlainText Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"ESLint\",\n                    \"semanticVersion\": \"8.1.0\",\n                    \"informationUri\": \"https:\\/\\/eslint.org\",\n                    \"rules\": [\n                        {\n                            \"id\": \"no-unused-vars\",\n                            \"shortDescription\": {\n                                \"text\": \"disallow unused variables\"\n                            },\n                            \"helpUri\": \"https:\\/\\/eslint.org\\/docs\\/rules\\/no-unused-vars\",\n                            \"properties\": {\n                                \"category\": \"Variables\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"'x' is assigned a value but never used.\"\n                    },\n                    \"ruleId\": \"no-unused-vars\",\n                    \"ruleIndex\": 0,\n                    \"level\": \"error\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/message/#formatted-example","title":"Formatted Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Variable '{0}' is uninitialized.\",\n                        \"arguments\": [\n                            \"pBuffer\"\n                        ]\n                    },\n                    \"ruleId\": \"CA2101\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/message/#embedded-links-example","title":"Embedded links Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Tainted data was used. The data came from [here](3).\"\n                    },\n                    \"ruleId\": \"TNT0001\",\n                    \"relatedLocations\": [\n                        {\n                            \"id\": 3,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"file:\\/\\/\\/C:\\/code\\/input.c\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 25,\n                                    \"startColumn\": 19\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/message/#string-lookup-example","title":"String lookup Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CS0001\",\n                            \"messageStrings\": {\n                                \"default\": {\n                                    \"text\": \"This is the message text. It might be very long.\"\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"id\": \"default\"\n                    },\n                    \"ruleId\": \"CS0001\",\n                    \"ruleIndex\": 0\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/message/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/message/plainText.php</code> script.</p> <pre><code>&lt;?php\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('ESLint');\n$driver-&gt;setInformationUri('https://eslint.org');\n$driver-&gt;setSemanticVersion('8.1.0');\n\n$rule = new ReportingDescriptor('no-unused-vars');\n$rule-&gt;setShortDescription(new MultiformatMessageString('disallow unused variables'));\n$rule-&gt;setHelpUri('https://eslint.org/docs/rules/no-unused-vars');\n$properties = new PropertyBag();\n$properties-&gt;addProperty('category', 'Variables');\n$rule-&gt;setProperties($properties);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool($driver);\n\n$message = new Message(\"'x' is assigned a value but never used.\");\n$result = new Result($message);\n$result-&gt;setLevel('error');\n$result-&gt;setRuleId('no-unused-vars');\n$result-&gt;setRuleIndex(0);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre> <p>See <code>examples/message/formatted.php</code> script.</p> <pre><code>&lt;?php\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$message = new Message(\"Variable '{0}' is uninitialized.\");\n$message-&gt;addArguments(['pBuffer']);\n$result = new Result($message);\n$result-&gt;setRuleId('CA2101');\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre> <p>See <code>examples/message/embeddedLinks.php</code></p> <pre><code>&lt;?php\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$message = new Message('Tainted data was used. The data came from [here](3).');\n$result = new Result($message);\n$result-&gt;setRuleId('TNT0001');\n$location = new Location();\n$location-&gt;setId('3');\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('file:///C:/code/input.c');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(25, 19));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$result-&gt;addRelatedLocations([$location]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre> <p>See <code>examples/message/stringLookup.php</code></p> <pre><code>&lt;?php\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor('no-unused-vars');\n$rule-&gt;setId('CS0001');\n$rule-&gt;addMessageStrings([\n    'default' =&gt; new MultiformatMessageString('This is the message text. It might be very long.'),\n]);\n$driver-&gt;addRules([$rule]);\n$tool = new Tool($driver);\n\n$message = new Message(\n    'A message object can directly contain message strings in its text and markdown properties.'\n    . ' It can also indirectly refer to message strings through its id property.'\n);\n$result = new Result($message);\n$result-&gt;setRuleId('CS0001');\n$result-&gt;setRuleIndex(0);\n$result-&gt;setMessage(new Message('', 'default'));\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/node/","title":"Node","text":""},{"location":"reference/node/#node-object","title":"node object","text":"<p>A <code>node</code> object represents a node in the graph represented by the containing graph object, which we refer to as theGraph.</p>"},{"location":"reference/node/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/node/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/graph.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Rectangle;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$nodes = [];\n$nodes[2] = new Node('n2');\n$nodes[3] = new Node('n3');\n$nodes[4] = new Node('n4');\n$nodes[1] = new Node('n1');\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge('e1', 'n3', 'n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$result = new Result(new Message('Have a look on this graph'));\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/notification/","title":"Notification","text":""},{"location":"reference/notification/#notification-object","title":"notification object","text":"<p>A <code>notification</code> object describes a condition encountered during the execution of an analysis tool which is relevant to the operation of the tool itself, as opposed to being relevant to an artifact being analyzed by the tool. Conditions relevant to artifacts being analyzed by a tool are represented by <code>result</code> objects.</p>"},{"location":"reference/notification/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/notification/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptorReference.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor('CTN9999');\n$ruleV1-&gt;setShortDescription(new MultiformatMessageString('First version of rule.'));\n$ruleV2 = new ReportingDescriptor('CTN9999');\n$ruleV2-&gt;setShortDescription(new MultiformatMessageString('Second version of rule.'));\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool($driver);\n\n$notification = new Notification(new Message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\"));\n$notification-&gt;setAssociatedRule(new ReportingDescriptorReference(0, 'C2001'));\n$notification-&gt;setDescriptor(new ReportingDescriptorReference(1, 'CTN9999'));\n$notification-&gt;setLevel('error');\n$invocation = new Invocation(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/physicalLocation/","title":"physicalLocation","text":""},{"location":"reference/physicalLocation/#physicallocation-object","title":"physicalLocation object","text":"<p>A <code>physicalLocation</code> object represents the physical location where a result was detected. A physical location specifies a reference to an artifact together with a region within that artifact.</p>"},{"location":"reference/physicalLocation/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Identify a physical location where a result was detected.\"\n                    },\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"ui\\/window.c\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 42\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/physicalLocation/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/physicalLocation.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n\n$result = new Result(new Message('Identify a physical location where a result was detected.'));\n$location = new Location();\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(42));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$result-&gt;addLocations([$location]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/rectangle/","title":"Rectangle","text":""},{"location":"reference/rectangle/#rectangle-object","title":"rectangle object","text":"<p>A <code>rectangle</code> object specifies a rectangular area within an image. When a SARIF viewer displays an image, it MAY indicate the presence of these areas, for example, by highlighting them or surrounding them with a border.</p>"},{"location":"reference/rectangle/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on screen shot provided\"\n                    },\n                    \"attachments\": [\n                        {\n                            \"artifactLocation\": {\n                                \"uri\": \"file:\\/\\/\\/C:\\/ScanOutput\\/image001.png\"\n                            },\n                            \"description\": {\n                                \"text\": \"Screen shot\"\n                            },\n                            \"rectangles\": [\n                                {\n                                    \"top\": 80,\n                                    \"left\": 10,\n                                    \"bottom\": 5,\n                                    \"right\": 90\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/rectangle/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/rectangle.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Rectangle;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$attachment = new Attachment();\n$attachment-&gt;setDescription(new Message('Screen shot'));\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('file:///C:/ScanOutput/image001.png');\n$attachment-&gt;setArtifactLocation($artifactLocation);\n$rectangle = new Rectangle();\n$rectangle-&gt;setTop(80);\n$rectangle-&gt;setLeft(10);\n$rectangle-&gt;setBottom(5);\n$rectangle-&gt;setRight(90);\n$attachment-&gt;addRectangles([$rectangle]);\n\n$result = new Result(new Message('Have a look on screen shot provided'));\n$result-&gt;addAttachments([$attachment]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/replacement/","title":"Replacement","text":""},{"location":"reference/replacement/#replacement-object","title":"replacement object","text":"<p>A <code>replacement</code> object represents the replacement of a single region of an artifact.</p>"},{"location":"reference/replacement/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src\\/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"\\/\\/ \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/replacement/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/fix.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n$replacement = new Replacement(new Region(1, 1, 1));\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n$artifactChange = new ArtifactChange($artifactLocation, [$replacement]);\n\n$fix = new Fix([$artifactChange]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n\n$log = new SarifLog([$run]);\n\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/reportingConfiguration/","title":"reportingConfiguration","text":""},{"location":"reference/reportingConfiguration/#reportingconfiguration-object","title":"reportingConfiguration object","text":"<p>A <code>reportingConfiguration</code> object contains the information in a <code>reportingDescriptor</code> that a SARIF producer can modify at runtime, before executing its scan.</p>"},{"location":"reference/reportingConfiguration/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"SA2707\",\n                            \"name\": \"LimitSourceLineLength\",\n                            \"shortDescription\": {\n                                \"text\": \"Limit source line length for readability.\"\n                            },\n                            \"defaultConfiguration\": {\n                                \"enabled\": true,\n                                \"level\": \"warning\",\n                                \"rank\": -1,\n                                \"parameters\": {\n                                    \"maxLength\": 120\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/reportingConfiguration/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingConfiguration.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\ReportingConfiguration;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor('SA2707');\n$rule-&gt;setName('LimitSourceLineLength');\n$rule-&gt;setShortDescription(new MultiformatMessageString('Limit source line length for readability.'));\n$reportingConf = new ReportingConfiguration();\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('maxLength', 120);\n$reportingConf-&gt;setParameters($propertyBag);\n$rule-&gt;setDefaultConfiguration($reportingConf);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/reportingDescriptor/","title":"reportingDescriptor","text":""},{"location":"reference/reportingDescriptor/#reportingdescriptor-object","title":"reportingDescriptor object","text":"<p>A <code>reportingDescriptor</code> object contains information that describes a \"reporting item\" generated by a tool.</p>"},{"location":"reference/reportingDescriptor/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1001\",\n                            \"deprecatedIds\": [\n                                \"CA1000\"\n                            ]\n                        },\n                        {\n                            \"id\": \"CA1002\",\n                            \"deprecatedIds\": [\n                                \"CA1000\"\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\"\n                        }\n                    ],\n                    \"baselineState\": \"unchanged\"\n                },\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1002\",\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\"\n                        }\n                    ],\n                    \"baselineState\": \"updated\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/reportingDescriptor/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptor.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Suppression;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule1 = new ReportingDescriptor('CA1001');\n$rule1-&gt;addDeprecatedIds(['CA1000']);\n$rule2 = new ReportingDescriptor('CA1002');\n$rule2-&gt;addDeprecatedIds(['CA1000']);\n$driver-&gt;addRules([$rule1, $rule2]);\n\n$tool = new Tool($driver);\n\n$results = [];\n$results[0] = new Result(new Message('...'));\n$results[0]-&gt;setRuleId('CA1001');\n$results[0]-&gt;setBaselineState('unchanged');\n$suppression = new Suppression('inSource');\n$results[0]-&gt;addSuppressions([$suppression]);\n\n$results[1] = new Result(new Message('...'));\n$results[1]-&gt;setRuleId('CA1002');\n$results[1]-&gt;setBaselineState('updated');\n$suppression = new Suppression('inSource');\n$results[1]-&gt;addSuppressions([$suppression]);\n\n$run = new Run($tool);\n$run-&gt;addResults($results);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/reportingDescriptorReference/","title":"reportingDescriptorReference","text":""},{"location":"reference/reportingDescriptorReference/#reportingdescriptorreference-object","title":"reportingDescriptorReference object","text":"<p>A <code>reportingDescriptorReference</code> object identifies a particular <code>reportingDescriptor</code> object, which we refer to as theDescriptor, among all <code>reportingDescriptor</code> objects defined by theTool, including those defined by theTool.driver and theTool.extensions.</p>"},{"location":"reference/reportingDescriptorReference/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/reportingDescriptorReference/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptorReference.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor('CTN9999');\n$ruleV1-&gt;setShortDescription(new MultiformatMessageString('First version of rule.'));\n$ruleV2 = new ReportingDescriptor('CTN9999');\n$ruleV2-&gt;setShortDescription(new MultiformatMessageString('Second version of rule.'));\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool($driver);\n\n$notification = new Notification(new Message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\"));\n$notification-&gt;setAssociatedRule(new ReportingDescriptorReference(0, 'C2001'));\n$notification-&gt;setDescriptor(new ReportingDescriptorReference(1, 'CTN9999'));\n$notification-&gt;setLevel('error');\n$invocation = new Invocation(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$result = new Result(new Message('...'));\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/reportingDescriptorRelationship/","title":"reportingDescriptorRelationship","text":""},{"location":"reference/reportingDescriptorRelationship/#reportingdescriptorrelationship-object","title":"reportingDescriptorRelationship object","text":"<p>A <code>reportingDescriptorRelationship</code> object specifies one or more directed relationships from one <code>reportingDescriptor</code> object, which we refer to as theSource, to another one, which we refer to as theTarget.</p>"},{"location":"reference/reportingDescriptorRelationship/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1000\",\n                            \"relationships\": [\n                                {\n                                    \"target\": {\n                                        \"index\": 0,\n                                        \"id\": \"327\",\n                                        \"guid\": \"33333333-0000-1111-8888-111111111111\",\n                                        \"toolComponent\": {\n                                            \"name\": \"CWE\",\n                                            \"guid\": \"33333333-0000-1111-8888-000000000000\"\n                                        }\n                                    },\n                                    \"kinds\": [\n                                        \"superset\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/reportingDescriptorRelationship/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptorRelationship.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorRelationship;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\ToolComponentReference;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor('CA1000');\n\n$target = new ReportingDescriptorReference(0, '327', '33333333-0000-1111-8888-111111111111');\n$toolComponent = new ToolComponentReference();\n$toolComponent-&gt;setName('CWE');\n$toolComponent-&gt;setGuid('33333333-0000-1111-8888-000000000000');\n$target-&gt;setToolComponent($toolComponent);\n\n$relationship = new ReportingDescriptorRelationship($target);\n$relationship-&gt;addKinds(['superset']);\n$rule-&gt;addRelationships([$relationship]);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/result/","title":"Result","text":""},{"location":"reference/result/#result-object","title":"result object","text":"<p>A <code>result</code> object describes a single result detected by an analysis tool.</p>"},{"location":"reference/result/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA2101\",\n                            \"shortDescription\": {\n                                \"text\": \"Specify marshaling for P\\/Invoke string arguments.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CA5350\",\n                            \"shortDescription\": {\n                                \"text\": \"Do not use weak cryptographic algorithms.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Result on rule 0\"\n                    },\n                    \"ruleId\": \"CA2101\",\n                    \"ruleIndex\": 0\n                },\n                {\n                    \"message\": {\n                        \"text\": \"Result on rule 1\"\n                    },\n                    \"ruleId\": \"CA5350\\/md5\",\n                    \"ruleIndex\": 1\n                },\n                {\n                    \"message\": {\n                        \"text\": \"Another result on rule 1\"\n                    },\n                    \"ruleId\": \"CA5350\\/sha-1\",\n                    \"ruleIndex\": 1\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/result/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/result.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule1 = new ReportingDescriptor('CA2101');\n$rule1-&gt;setShortDescription(\n    new MultiformatMessageString('Specify marshaling for P/Invoke string arguments.')\n);\n$rule2 = new ReportingDescriptor('CA5350');\n$rule2-&gt;setShortDescription(\n    new MultiformatMessageString('Do not use weak cryptographic algorithms.')\n);\n$driver-&gt;addRules([$rule1, $rule2]);\n\n$tool = new Tool($driver);\n\n$result1 = new Result(new Message('Result on rule 0'));\n$result1-&gt;setRuleId('CA2101');\n$result1-&gt;setRuleIndex(0);\n\n$result2 = new Result(new Message('Result on rule 1'));\n$result2-&gt;setRuleId('CA5350/md5');\n$result2-&gt;setRuleIndex(1);\n\n$result3 = new Result(new Message('Another result on rule 1'));\n$result3-&gt;setRuleId('CA5350/sha-1');\n$result3-&gt;setRuleIndex(1);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result1, $result2, $result3]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/resultProvenance/","title":"resultProvenance","text":""},{"location":"reference/resultProvenance/#resultprovenance-object","title":"resultProvenance object","text":"<p>A <code>resultProvenance</code> object contains information about the how and when theResult was detected.</p>"},{"location":"reference/resultProvenance/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https:\\/\\/github.com\\/microsoft\\/sarif-tutorials\\/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Assertions are unreliable.\"\n                    },\n                    \"ruleId\": \"Assertions\",\n                    \"provenance\": {\n                        \"conversionSources\": [\n                            {\n                                \"artifactLocation\": {\n                                    \"uri\": \"CodeScanner.log\",\n                                    \"uriBaseId\": \"LOGSROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 3,\n                                    \"startColumn\": 3,\n                                    \"endLine\": 12,\n                                    \"endColumn\": 13,\n                                    \"snippet\": {\n                                        \"text\": \"&lt;problem&gt;...&lt;\\/problem&gt;\"\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/resultProvenance/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/resultProvenance.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\ResultProvenance;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool($driver);\n\n$provenance = new ResultProvenance();\n$fromSources = [];\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('CodeScanner.log');\n$artifactLocation-&gt;setUriBaseId('LOGSROOT');\n$fromSources[0] = new PhysicalLocation($artifactLocation);\n$region = new Region(3, 3, 12, 13);\n$snippet = new ArtifactContent();\n$snippet-&gt;setText('&lt;problem&gt;...&lt;/problem&gt;');\n$region-&gt;setSnippet($snippet);\n$fromSources[0]-&gt;setRegion($region);\n\n$provenance-&gt;addConversionSources($fromSources);\n\n$result = new Result(new Message('Assertions are unreliable.'));\n$result-&gt;setRuleId('Assertions');\n$result-&gt;setProvenance($provenance);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/run/","title":"Run","text":""},{"location":"reference/run/#run-object","title":"run object","text":"<p>An sarifLog object specifies the version of the file format and contains the output from one or more runs.</p>"},{"location":"reference/run/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https:\\/\\/psalm.de\"\n                }\n            },\n            \"properties\": {\n                \"stableId\": \"Nightly static analysis run\"\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/run/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/run.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n$tool = new Tool($driver);\n\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('stableId', 'Nightly static analysis run');\n\n$run = new Run($tool);\n$run-&gt;setProperties($propertyBag);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/runAutomationDetails/","title":"runAutomationDetails","text":""},{"location":"reference/runAutomationDetails/#runautomationdetails-object","title":"runAutomationDetails object","text":"<p>A <code>runAutomationDetails</code> object contains information that specifies theRun\u2019s identity and role within an engineering system.</p>"},{"location":"reference/runAutomationDetails/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"automationDetails\": {\n                \"description\": {\n                    \"text\": \"This is the {0} nightly run of the Credential Scanner tool on all product binaries in the '{1}' branch of the '{2}' repo. The scanned binaries are architecture '{3}' and build type '{4}'.\",\n                    \"arguments\": [\n                        \"October 10, 2018\",\n                        \"master\",\n                        \"sarif-sdk\",\n                        \"x86\",\n                        \"debug\"\n                    ]\n                },\n                \"id\": \"Nightly CredScan run for sarif-sdk\\/master\\/x86\\/debug\\/2018-10-05\",\n                \"guid\": \"11111111-1111-1111-8888-111111111111\",\n                \"correlationGuid\": \"22222222-2222-1111-8888-222222222222\"\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/runAutomationDetails/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/runAutomationDetails.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\RunAutomationDetails;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool($driver);\n\n$automationDetails = new RunAutomationDetails();\n\n$text = \"This is the {0} nightly run of the Credential Scanner tool on\" .\n    \" all product binaries in the '{1}' branch of the '{2}' repo.\".\n    \" The scanned binaries are architecture '{3}' and build type '{4}'.\";\n$description = new Message($text);\n$description-&gt;addArguments([\n    \"October 10, 2018\",\n    \"master\",\n    \"sarif-sdk\",\n    \"x86\",\n    \"debug\",\n]);\n$automationDetails-&gt;setDescription($description);\n$automationDetails-&gt;setId('Nightly CredScan run for sarif-sdk/master/x86/debug/2018-10-05');\n$automationDetails-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n$automationDetails-&gt;setCorrelationGuid('22222222-2222-1111-8888-222222222222');\n\n$run = new Run($tool);\n$run-&gt;setAutomationDetails($automationDetails);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/sarifLog/","title":"sarifLog","text":""},{"location":"reference/sarifLog/#sariflog-object","title":"sarifLog object","text":"<p>An sarifLog object specifies the version of the file format and contains the output from one or more runs.</p>"},{"location":"reference/sarifLog/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\"\n                }\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/sarifLog/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/sarifLog.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('Psalm');\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/specialLocations/","title":"specialLocations","text":""},{"location":"reference/specialLocations/#speciallocations-object","title":"specialLocations object","text":"<p>A <code>specialLocations</code> object defines locations of special significance to SARIF consumers.</p>"},{"location":"reference/specialLocations/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"WEBHOST\": {\n                    \"uri\": \"http:\\/\\/www.example.com\\/\"\n                },\n                \"ROOT\": {\n                    \"uri\": \"file:\\/\\/\\/\"\n                },\n                \"HOME\": {\n                    \"uri\": \"home\\/user\\/\",\n                    \"uriBaseId\": \"ROOT\"\n                },\n                \"PACKAGE\": {\n                    \"uri\": \"mySoftware\\/\",\n                    \"uriBaseId\": \"HOME\"\n                },\n                \"SRC\": {\n                    \"uri\": \"src\\/\",\n                    \"uriBaseId\": \"PACKAGE\"\n                }\n            },\n            \"specialLocations\": {\n                \"displayBase\": {\n                    \"uriBaseId\": \"PACKAGE\"\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/specialLocations/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/specialLocations.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\SpecialLocations;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool($driver);\n\n$webHost = new ArtifactLocation();\n$webHost-&gt;setUri('http://www.example.com/');\n\n$root = new ArtifactLocation();\n$root-&gt;setUri('file:///');\n\n$home = new ArtifactLocation();\n$home-&gt;setUri('home/user/');\n$home-&gt;setUriBaseId('ROOT');\n\n$package = new ArtifactLocation();\n$package-&gt;setUri('mySoftware/');\n$package-&gt;setUriBaseId('HOME');\n\n$src = new ArtifactLocation();\n$src-&gt;setUri('src/');\n$src-&gt;setUriBaseId('PACKAGE');\n\n$run = new Run($tool);\n$run-&gt;addAdditionalProperties([\n    'WEBHOST' =&gt; $webHost,\n    'ROOT' =&gt; $root,\n    'HOME' =&gt; $home,\n    'PACKAGE' =&gt; $package,\n    'SRC' =&gt; $src,\n]);\n\n$specialLocations = new SpecialLocations();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('');\n$artifactLocation-&gt;setUriBaseId('PACKAGE');\n$specialLocations-&gt;setDisplayBase($artifactLocation);\n\n$run-&gt;setSpecialLocations($specialLocations);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/stack/","title":"Stack","text":""},{"location":"reference/stack/#stack-object","title":"stack object","text":"<p>A <code>stack</code> object describes a single call stack. A call stack is a sequence of nested function calls, each of which is referred to as a stack frame.</p>"},{"location":"reference/stack/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https:\\/\\/github.com\\/microsoft\\/sarif-tutorials\\/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Uninitialized variable.\"\n                    },\n                    \"ruleId\": \"TUT1001\",\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"collections\\/list.h\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 15\n                                }\n                            },\n                            \"logicalLocations\": [\n                                {\n                                    \"fullyQualifiedName\": \"collections::list::add\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"stacks\": [\n                        {\n                            \"frames\": [\n                                {\n                                    \"location\": {\n                                        \"physicalLocation\": {\n                                            \"artifactLocation\": {\n                                                \"uri\": \"collections\\/list.h\",\n                                                \"uriBaseId\": \"SRCROOT\"\n                                            },\n                                            \"region\": {\n                                                \"startLine\": 110,\n                                                \"startColumn\": 15\n                                            }\n                                        },\n                                        \"logicalLocations\": [\n                                            {\n                                                \"fullyQualifiedName\": \"collections::list::add_core\"\n                                            }\n                                        ]\n                                    },\n                                    \"module\": \"platform\",\n                                    \"threadId\": 52,\n                                    \"parameters\": [\n                                        \"null\",\n                                        \"0\",\n                                        \"14\"\n                                    ]\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"Call stack resulting from usage of uninitialized variable.\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/stack/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/stack.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Stack;\nuse Bartlett\\Sarif\\Definition\\StackFrame;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool($driver);\n\n$frame = new StackFrame();\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(110, 15));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add_core');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$frame-&gt;setLocation($location);\n$frame-&gt;setModule('platform');\n$frame-&gt;setThreadId(52);\n$frame-&gt;addParameters(['null', '0', '14']);\n\n$stack = new Stack([$frame]);\n$stack-&gt;setMessage(new Message('Call stack resulting from usage of uninitialized variable.'));\n\n$result = new Result(new Message('Uninitialized variable.'));\n$result-&gt;addStacks([$stack]);\n$result-&gt;setRuleId('TUT1001');\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(15));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$result-&gt;addLocations([$location]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/stackFrame/","title":"stackFrame","text":""},{"location":"reference/stackFrame/#stackframe-object","title":"stackFrame object","text":"<p>A <code>stackFrame</code> object describes a single stack frame within a call stack.</p>"},{"location":"reference/stackFrame/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https:\\/\\/github.com\\/microsoft\\/sarif-tutorials\\/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Uninitialized variable.\"\n                    },\n                    \"ruleId\": \"TUT1001\",\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"collections\\/list.h\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 15\n                                }\n                            },\n                            \"logicalLocations\": [\n                                {\n                                    \"fullyQualifiedName\": \"collections::list::add\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"stacks\": [\n                        {\n                            \"frames\": [\n                                {\n                                    \"location\": {\n                                        \"physicalLocation\": {\n                                            \"artifactLocation\": {\n                                                \"uri\": \"collections\\/list.h\",\n                                                \"uriBaseId\": \"SRCROOT\"\n                                            },\n                                            \"region\": {\n                                                \"startLine\": 110,\n                                                \"startColumn\": 15\n                                            }\n                                        },\n                                        \"logicalLocations\": [\n                                            {\n                                                \"fullyQualifiedName\": \"collections::list::add_core\"\n                                            }\n                                        ]\n                                    },\n                                    \"module\": \"platform\",\n                                    \"threadId\": 52,\n                                    \"parameters\": [\n                                        \"null\",\n                                        \"0\",\n                                        \"14\"\n                                    ]\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"Call stack resulting from usage of uninitialized variable.\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/stackFrame/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/stack.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Stack;\nuse Bartlett\\Sarif\\Definition\\StackFrame;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool($driver);\n\n$frame = new StackFrame();\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(110, 15));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add_core');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$frame-&gt;setLocation($location);\n$frame-&gt;setModule('platform');\n$frame-&gt;setThreadId(52);\n$frame-&gt;addParameters(['null', '0', '14']);\n\n$stack = new Stack([$frame]);\n$stack-&gt;setMessage(new Message('Call stack resulting from usage of uninitialized variable.'));\n\n$result = new Result(new Message('Uninitialized variable.'));\n$result-&gt;addStacks([$stack]);\n$result-&gt;setRuleId('TUT1001');\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(15));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$result-&gt;addLocations([$location]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/suppression/","title":"Suppression","text":""},{"location":"reference/suppression/#suppression-object","title":"suppression object","text":"<p>A <code>suppression</code> object describes a request to suppress a result.</p>"},{"location":"reference/suppression/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https:\\/\\/psalm.de\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Request to suppress a result\"\n                    },\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\",\n                            \"guid\": \"11111111-1111-1111-8888-111111111111\",\n                            \"status\": \"underReview\",\n                            \"justification\": \"result outdated\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/suppression/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/suppression.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Suppression;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n$tool = new Tool($driver);\n\n$suppression = new Suppression('inSource');\n$suppression-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n$suppression-&gt;setStatus('underReview');\n$suppression-&gt;setJustification('result outdated');\n\n$result = new Result(new Message('Request to suppress a result'));\n$result-&gt;addSuppressions([$suppression]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/threadFlow/","title":"threadFlow","text":""},{"location":"reference/threadFlow/#threadflow-object","title":"threadFlow object","text":"<p>A <code>threadFlow</code> object is a sequence of code locations that specify a possible path through a single thread of execution such as an operating system thread or a fiber.</p>"},{"location":"reference/threadFlow/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui\\/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/threadFlow/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/codeFlow.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(42));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('42'),\n    'y' =&gt; new MultiformatMessageString('54'),\n    'x+y' =&gt; new MultiformatMessageString('96'),\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$threadFlow = new ThreadFlow([$threadFlowLocation]);\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage(new Message('A threadFlow object'));\n\n$codeFlow = new CodeFlow([$threadFlow]);\n$codeFlow-&gt;setMessage(new Message('A codeFlow object'));\n\n$result = new Result(new Message('A result object'));\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/threadFlowLocation/","title":"threadFlowLocation","text":""},{"location":"reference/threadFlowLocation/#threadflowlocation-object","title":"threadFlowLocation object","text":"<p>A <code>threadFlowLocation</code> object represents a location visited by an analysis tool in the course of simulating or monitoring the execution of a program.</p>"},{"location":"reference/threadFlowLocation/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui\\/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/threadFlowLocation/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/codeFlow.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation($artifactLocation);\n$physicalLocation-&gt;setRegion(new Region(42));\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; new MultiformatMessageString('42'),\n    'y' =&gt; new MultiformatMessageString('54'),\n    'x+y' =&gt; new MultiformatMessageString('96'),\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$threadFlow = new ThreadFlow([$threadFlowLocation]);\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage(new Message('A threadFlow object'));\n\n$codeFlow = new CodeFlow([$threadFlow]);\n$codeFlow-&gt;setMessage(new Message('A codeFlow object'));\n\n$result = new Result(new Message('A result object'));\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/tool/","title":"Tool","text":""},{"location":"reference/tool/#tool-object","title":"tool object","text":"<p>A <code>tool</code> object describes the analysis tool or converter that was run.</p>"},{"location":"reference/tool/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                },\n                \"extensions\": [\n                    {\n                        \"name\": \"CodeScanner Security Rules\",\n                        \"version\": \"3.1\"\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/tool/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/tool.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$extension = new ToolComponent('CodeScanner Security Rules');\n$extension-&gt;setVersion('3.1');\n\n$tool = new Tool($driver);\n$tool-&gt;addExtensions([$extension]);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/toolComponentReference/","title":"toolComponentReference","text":""},{"location":"reference/toolComponentReference/#toolcomponentreference-object","title":"toolComponentReference object","text":"<p>A <code>toolComponentReference</code> object identifies a particular <code>toolComponent</code> object, either theTool.driver or an element of theTool.extensions. We refer to the identified toolComponent object as theComponent.</p>"},{"location":"reference/toolComponentReference/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1000\",\n                            \"relationships\": [\n                                {\n                                    \"target\": {\n                                        \"index\": 0,\n                                        \"id\": \"327\",\n                                        \"guid\": \"33333333-0000-1111-8888-111111111111\",\n                                        \"toolComponent\": {\n                                            \"name\": \"CWE\",\n                                            \"guid\": \"33333333-0000-1111-8888-000000000000\"\n                                        }\n                                    },\n                                    \"kinds\": [\n                                        \"superset\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/toolComponentReference/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/reportingDescriptorRelationship.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorRelationship;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\ToolComponentReference;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor('CA1000');\n\n$target = new ReportingDescriptorReference(0, '327', '33333333-0000-1111-8888-111111111111');\n$toolComponent = new ToolComponentReference();\n$toolComponent-&gt;setName('CWE');\n$toolComponent-&gt;setGuid('33333333-0000-1111-8888-000000000000');\n$target-&gt;setToolComponent($toolComponent);\n\n$relationship = new ReportingDescriptorRelationship($target);\n$relationship-&gt;addKinds(['superset']);\n$rule-&gt;addRelationships([$relationship]);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/translationMetadata/","title":"translationMetadata","text":""},{"location":"reference/translationMetadata/#translationmetadata-object","title":"translationMetadata object","text":"<p>A <code>translationMetadata</code> object defines locations of special significance to SARIF consumers.</p>"},{"location":"reference/translationMetadata/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"(fr-FR translation)\",\n                    \"fullName\": \"(fr-FR translation of translated component\\u2019s full name)\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\",\n                    \"language\": \"fr-FR\",\n                    \"translationMetadata\": {\n                        \"name\": \"CodeScanner translation for fr-FR\",\n                        \"fullName\": \"CodeScanner translation for fr-FR by Example Corp.\",\n                        \"shortDescription\": {\n                            \"text\": \"A good translation\"\n                        },\n                        \"fullDescription\": {\n                            \"text\": \"A good translation performed by native en-US speakers.\"\n                        }\n                    }\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/translationMetadata/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/translationMetadata.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\TranslationMetadata;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setLanguage('fr-FR');\n\n$translationMetadata = new TranslationMetadata('CodeScanner translation for fr-FR');\n$translationMetadata-&gt;setFullName('CodeScanner translation for fr-FR by Example Corp.');\n$translationMetadata-&gt;setShortDescription(\n    new MultiformatMessageString('A good translation')\n);\n$translationMetadata-&gt;setFullDescription(\n    new MultiformatMessageString('A good translation performed by native en-US speakers.')\n);\n$driver-&gt;setTranslationMetadata($translationMetadata);\n\n$driver-&gt;setName('(fr-FR translation)');\n$driver-&gt;setFullName('(fr-FR translation of translated component\u2019s full name)');\n\n$tool = new Tool($driver);\n\n$run = new Run($tool);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/versionControlDetails/","title":"versionControlDetails","text":""},{"location":"reference/versionControlDetails/#versioncontroldetails-object","title":"versionControlDetails object","text":"<p>A <code>versionControlDetails</code> object specifies the information necessary to retrieve from a version control system (VCS) the correct revision of the files that were scanned during the run.</p>"},{"location":"reference/versionControlDetails/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"AndroidStudio\",\n                    \"semanticVersion\": \"1.0.0-beta.1\",\n                    \"informationUri\": \"https:\\/\\/android-studion.dev\"\n                }\n            },\n            \"versionControlProvenance\": [\n                {\n                    \"repositoryUri\": \"https:\\/\\/github.com\\/example-corp\\/package\",\n                    \"revisionId\": \"b87c4e9\",\n                    \"mappedTo\": {\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                },\n                {\n                    \"repositoryUri\": \"https:\\/\\/github.com\\/example-corp\\/plugin1\",\n                    \"revisionId\": \"cafdac7\",\n                    \"mappedTo\": {\n                        \"uri\": \"plugin1\",\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                },\n                {\n                    \"repositoryUri\": \"https:\\/\\/github.com\\/example-corp\\/plugin2\",\n                    \"revisionId\": \"d0dc2c0\",\n                    \"mappedTo\": {\n                        \"uri\": \"plugin2\",\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/versionControlDetails/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/versionControlDetails.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Conversion;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\VersionControlDetails;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('AndroidStudio');\n$driver-&gt;setInformationUri('https://android-studion.dev');\n$driver-&gt;setSemanticVersion('1.0.0-beta.1');\n$tool = new Tool($driver);\n\n$package = new VersionControlDetails('https://github.com/example-corp/package');\n$package-&gt;setRevisionId('b87c4e9');\n$packageMappedTo = new ArtifactLocation();\n$packageMappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$package-&gt;setMappedTo($packageMappedTo);\n\n$plugin1 = new VersionControlDetails('https://github.com/example-corp/plugin1');\n$plugin1-&gt;setRevisionId('cafdac7');\n$plugin1MappedTo = new ArtifactLocation();\n$plugin1MappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$plugin1MappedTo-&gt;setUri('plugin1');\n$plugin1-&gt;setMappedTo($plugin1MappedTo);\n\n$plugin2 = new VersionControlDetails('https://github.com/example-corp/plugin2');\n$plugin2-&gt;setRevisionId('d0dc2c0');\n$plugin2MappedTo = new ArtifactLocation();\n$plugin2MappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$plugin2MappedTo-&gt;setUri('plugin2');\n$plugin2-&gt;setMappedTo($plugin2MappedTo);\n\n$run = new Run($tool);\n$run-&gt;addVersionControlDetails([$package, $plugin1, $plugin2]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/webRequest/","title":"webRequest","text":""},{"location":"reference/webRequest/#webrequest-object","title":"webRequest object","text":"<p>A <code>webRequest</code> object describes an HTTP request (RFC7230).</p>"},{"location":"reference/webRequest/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"webRequests\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"target\": \"httpbin.org\\/bearer\",\n                    \"method\": \"GET\",\n                    \"headers\": {\n                        \"accept\": \"application\\/json\",\n                        \"Authorization\": \"none\"\n                    }\n                }\n            ],\n            \"webResponses\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"statusCode\": 401,\n                    \"reasonPhrase\": \"Error: UNAUTHORIZED\",\n                    \"headers\": {\n                        \"access-control-allow-credentials\": \"true\",\n                        \"access-control-allow-origin\": \"*\",\n                        \"connection\": \"keep-alive\",\n                        \"content-length\": \"0\",\n                        \"content-type\": \"text\\/html; charset=utf-8\",\n                        \"date\": \"Sun, 07 Nov 2021 08:59:53 GMT\",\n                        \"server\": \"gunicorn\\/19.9.0\",\n                        \"www-authenticate\": \"Bearer\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/webRequest/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/webRequest.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\WebRequest;\nuse Bartlett\\Sarif\\Definition\\WebResponse;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$webRequest = new WebRequest();\n$webRequest-&gt;setProtocol('http');\n$webRequest-&gt;setVersion('1.1');\n$webRequest-&gt;setMethod('GET');\n$webRequest-&gt;setTarget('httpbin.org/bearer');\n$webRequest-&gt;addAdditionalPropertiesHeaders([\n    'accept' =&gt; 'application/json',\n    'Authorization' =&gt; 'none',\n]);\n\n$webResponse = new WebResponse();\n$webResponse-&gt;setProtocol('http');\n$webResponse-&gt;setVersion('1.1');\n$webResponse-&gt;setStatusCode(401);\n$webResponse-&gt;setReasonPhrase('Error: UNAUTHORIZED');\n$webResponse-&gt;addAdditionalProperties([\n    'access-control-allow-credentials' =&gt; 'true',\n    'access-control-allow-origin' =&gt; '*',\n    'connection' =&gt; 'keep-alive',\n    'content-length' =&gt; '0',\n    'content-type' =&gt; 'text/html; charset=utf-8',\n    'date' =&gt; 'Sun, 07 Nov 2021 08:59:53 GMT',\n    'server' =&gt; 'gunicorn/19.9.0',\n    'www-authenticate' =&gt; 'Bearer',\n]);\n\n$run = new Run($tool);\n$run-&gt;addWebRequests([$webRequest]);\n$run-&gt;addWebResponses([$webResponse]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"},{"location":"reference/webResponse/","title":"webResponse","text":""},{"location":"reference/webResponse/#webresponse-object","title":"webResponse object","text":"<p>A <code>webResponse</code> object describes the response to an HTTP request (RFC7230)</p>"},{"location":"reference/webResponse/#example","title":"Example","text":"<pre><code>{\n    \"$schema\": \"https:\\/\\/json.schemastore.org\\/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https:\\/\\/codeScanner.dev\"\n                }\n            },\n            \"webRequests\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"target\": \"httpbin.org\\/bearer\",\n                    \"method\": \"GET\",\n                    \"headers\": {\n                        \"accept\": \"application\\/json\",\n                        \"Authorization\": \"none\"\n                    }\n                }\n            ],\n            \"webResponses\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"statusCode\": 401,\n                    \"reasonPhrase\": \"Error: UNAUTHORIZED\",\n                    \"headers\": {\n                        \"access-control-allow-credentials\": \"true\",\n                        \"access-control-allow-origin\": \"*\",\n                        \"connection\": \"keep-alive\",\n                        \"content-length\": \"0\",\n                        \"content-type\": \"text\\/html; charset=utf-8\",\n                        \"date\": \"Sun, 07 Nov 2021 08:59:53 GMT\",\n                        \"server\": \"gunicorn\\/19.9.0\",\n                        \"www-authenticate\": \"Bearer\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre>"},{"location":"reference/webResponse/#how-to-generate","title":"How to generate","text":"<p>See <code>examples/webRequest.php</code> script.</p> <pre><code>&lt;?php declare(strict_types=1);\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\WebRequest;\nuse Bartlett\\Sarif\\Definition\\WebResponse;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$tool = new Tool($driver);\n\n$webRequest = new WebRequest();\n$webRequest-&gt;setProtocol('http');\n$webRequest-&gt;setVersion('1.1');\n$webRequest-&gt;setMethod('GET');\n$webRequest-&gt;setTarget('httpbin.org/bearer');\n$webRequest-&gt;addAdditionalPropertiesHeaders([\n    'accept' =&gt; 'application/json',\n    'Authorization' =&gt; 'none',\n]);\n\n$webResponse = new WebResponse();\n$webResponse-&gt;setProtocol('http');\n$webResponse-&gt;setVersion('1.1');\n$webResponse-&gt;setStatusCode(401);\n$webResponse-&gt;setReasonPhrase('Error: UNAUTHORIZED');\n$webResponse-&gt;addAdditionalProperties([\n    'access-control-allow-credentials' =&gt; 'true',\n    'access-control-allow-origin' =&gt; '*',\n    'connection' =&gt; 'keep-alive',\n    'content-length' =&gt; '0',\n    'content-type' =&gt; 'text/html; charset=utf-8',\n    'date' =&gt; 'Sun, 07 Nov 2021 08:59:53 GMT',\n    'server' =&gt; 'gunicorn/19.9.0',\n    'www-authenticate' =&gt; 'Bearer',\n]);\n\n$run = new Run($tool);\n$run-&gt;addWebRequests([$webRequest]);\n$run-&gt;addWebResponses([$webResponse]);\n\n$log = new SarifLog([$run]);\n\ntry {\n    echo $log, PHP_EOL;\n} catch (Exception $e) {\n    echo \"Unable to produce SARIF report due to following error: \" . $e-&gt;getMessage(), PHP_EOL;\n}\n</code></pre>"}]}