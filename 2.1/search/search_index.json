{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about","title":"About","text":"<p>This PHP SDK produces the SARIF output, which is a JSON file formatted in accordance with the latest specification. This implementation follows the general format rules but also specifies several custom properties written in property bags.</p> <p></p>"},{"location":"#installation","title":"Installation","text":"<p>Learn how to install this library in different way.</p> <p>See Installation Guide</p>"},{"location":"#api-reference","title":"API Reference","text":"<p>Discover all API objects with each one at least an example of how to generate a SARIF report.</p> <p>See Reference Guide</p>"},{"location":"#api-builders","title":"API Builders","text":"<p>Discover all fluent builders with each one at least an example of how to generate a SARIF report.</p> <p>See Builder Guide</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installation","title":"Installation","text":"<ol> <li>Requirements</li> <li>PHAR</li> <li>Phive</li> <li>Composer</li> <li>Git</li> </ol>"},{"location":"installation/#requirements","title":"Requirements","text":"<ul> <li>PHP 8.1 or greater</li> <li>ext-json</li> <li>ext-pcre</li> <li>ext-spl</li> </ul>"},{"location":"installation/#phar","title":"PHAR","text":"<p>The preferred method of installation is to use the PHAR version which can be downloaded from the most recent Github Release. This method ensures you will not have any dependency conflict issue.</p> <p>Tip</p> <p>When you want to use, load autoloader as follows :</p> <pre><code>require_once 'phar://' . '/absolute/path/to' . '/sarif-php-sdk.phar/vendor/autoload.php';\n</code></pre>"},{"location":"installation/#phive","title":"Phive","text":"<p>You can install application globally with Phive</p> <pre><code>phive install llaville/sarif-php-sdk --force-accept-unsigned\n</code></pre> <p>To upgrade global installation of the application use the following command:</p> <pre><code>phive update llaville/sarif-php-sdk --force-accept-unsigned\n</code></pre> <p>You can also install application locally to your project with Phive and configuration file <code>.phive/phars.xml</code></p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;phive xmlns=\"https://phar.io/phive\"&gt;\n    &lt;phar name=\"llaville/sarif-php-sdk\" version=\"^2.1\" copy=\"false\" /&gt;\n&lt;/phive&gt;\n</code></pre> <pre><code>phive install --force-accept-unsigned\n</code></pre>"},{"location":"installation/#composer","title":"Composer","text":"<p>The recommended way to install this library is through composer. If you don't know yet what is composer, have a look on introduction.</p> <pre><code>composer require bartlett/sarif-php-sdk ^2.1\n</code></pre> <p>If you cannot install it because of a dependency conflict, or you prefer to install it for your project, we recommend you to take a look at bamarni/composer-bin-plugin. Example:</p> <pre><code>composer require --dev bamarni/composer-bin-plugin\ncomposer bin sarif-php-sdk require --dev bartlett/sarif-php-sdk\n</code></pre>"},{"location":"installation/#git","title":"Git","text":"<p>The SARIF PHP SDK can be directly used from GitHub by cloning the repository into a directory of your choice.</p> <pre><code>git clone -b 2.1 https://github.com/llaville/sarif-php-sdk.git\n</code></pre>"},{"location":"builder/","title":"Index","text":""},{"location":"builder/#builders","title":"Builders","text":"<p>When SARIF PHP SDK is used to generate reports the standard API reclaims to declare each object and know how to link them. It can often be tedious to manually construct objects.</p> <p>Since release 1.5.0, the project provides a number of utilities to simplify the construction of sarif objects with their properties.</p> <p></p>"},{"location":"builder/#fluent-builders","title":"Fluent builders","text":"<p>The library comes with a number of builders, which allow creating sarif objects using a fluent interface. Builders are created using the <code>Bartlett\\Sarif\\Factory\\BuilderFactory</code> and the final constructed object is accessed through <code>build()</code>.</p> <p>Here is an example:</p> <pre><code>&lt;?php\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('Psalm')\n                            -&gt;version('4.x-dev')\n                            -&gt;informationUri('https://psalm.de')\n                    )\n            )\n            -&gt;setProperties([\n                'stableId' =&gt; 'Nightly static analysis run',\n            ])\n    )\n;\n\n$sarifLogObject = $spec-&gt;build();\n</code></pre>"},{"location":"reference/","title":"API Reference","text":""},{"location":"reference/#address-object","title":"address object","text":"<p>See official specification</p>"},{"location":"reference/#artifact-object","title":"artifact object","text":"<p>See official specification</p>"},{"location":"reference/#artifactchange-object","title":"artifactChange object","text":"<p>See official specification</p>"},{"location":"reference/#artifactcontent-object","title":"artifactContent object","text":"<p>See official specification</p>"},{"location":"reference/#attachment-object","title":"attachment object","text":"<p>See official specification</p>"},{"location":"reference/#codeflow-object","title":"codeFlow object","text":"<p>See official specification</p>"},{"location":"reference/#configurationoverride-object","title":"configurationOverride object","text":"<p>See official specification</p>"},{"location":"reference/#conversion-object","title":"conversion object","text":"<p>See official specification</p>"},{"location":"reference/#edge-object","title":"edge object","text":"<p>See official specification</p>"},{"location":"reference/#edgetraversal-object","title":"edgeTraversal object","text":"<p>See official specification</p>"},{"location":"reference/#exception-object","title":"exception object","text":"<p>See official specification</p>"},{"location":"reference/#externalproperties-object","title":"externalProperties object","text":"<p>See official specification</p>"},{"location":"reference/#externalpropertyfilereference-object","title":"externalPropertyFileReference object","text":"<p>See official specification</p>"},{"location":"reference/#externalpropertyfilereferences-object","title":"externalPropertyFileReferences object","text":"<p>See official specification</p>"},{"location":"reference/#fix-object","title":"fix object","text":"<p>See official specification</p>"},{"location":"reference/#graph-object","title":"graph object","text":"<p>See official specification</p>"},{"location":"reference/#graphtraversal-object","title":"graphTraversal object","text":"<p>See official specification</p>"},{"location":"reference/#invocation-object","title":"invocation object","text":"<p>See official specification</p>"},{"location":"reference/#locationrelationship-object","title":"locationRelationship object","text":"<p>See official specification</p>"},{"location":"reference/#logicallocation-object","title":"logicalLocation object","text":"<p>See official specification</p>"},{"location":"reference/#message-object","title":"message object","text":"<p>See official specification</p>"},{"location":"reference/#node-object","title":"node object","text":"<p>See official specification</p>"},{"location":"reference/#notification-object","title":"notification object","text":"<p>See official specification</p>"},{"location":"reference/#physicallocation-object","title":"physicalLocation object","text":"<p>See official specification</p>"},{"location":"reference/#rectangle-object","title":"rectangle object","text":"<p>See official specification</p>"},{"location":"reference/#replacement-object","title":"replacement object","text":"<p>See official specification</p>"},{"location":"reference/#reportingconfiguration-object","title":"reportingConfiguration object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptor-object","title":"reportingDescriptor object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptorreference-object","title":"reportingDescriptorReference object","text":"<p>See official specification</p>"},{"location":"reference/#reportingdescriptorrelationship-object","title":"reportingDescriptorRelationship object","text":"<p>See official specification</p>"},{"location":"reference/#result-object","title":"result object","text":"<p>See official specification</p>"},{"location":"reference/#resultprovenance-object","title":"resultProvenance object","text":"<p>See official specification</p>"},{"location":"reference/#run-object","title":"run object","text":"<p>See official specification</p>"},{"location":"reference/#runautomationdetails-object","title":"runAutomationDetails object","text":"<p>See official specification</p>"},{"location":"reference/#sariflog-object","title":"sarifLog object","text":"<p>See official specification</p>"},{"location":"reference/#speciallocations-object","title":"specialLocations object","text":"<p>See official specification</p>"},{"location":"reference/#stack-object","title":"stack object","text":"<p>See official specification</p>"},{"location":"reference/#stackframe-object","title":"stackFrame object","text":"<p>See official specification</p>"},{"location":"reference/#suppression-object","title":"suppression object","text":"<p>See official specification</p>"},{"location":"reference/#threadflow-object","title":"threadFlow object","text":"<p>See official specification</p>"},{"location":"reference/#threadflowlocation-object","title":"threadFlowLocation object","text":"<p>See official specification</p>"},{"location":"reference/#tool-object","title":"tool object","text":"<p>See official specification</p>"},{"location":"reference/#toolcomponentreference-object","title":"toolComponentReference object","text":"<p>See official specification</p>"},{"location":"reference/#translationmetadata-object","title":"translationMetadata object","text":"<p>See official specification</p>"},{"location":"reference/#versioncontroldetails-object","title":"versionControlDetails object","text":"<p>See official specification</p>"},{"location":"reference/#webrequest-object","title":"webRequest object","text":"<p>See official specification</p>"},{"location":"reference/#webresponse-object","title":"webResponse object","text":"<p>See official specification</p>"},{"location":"reference/address/","title":"Address","text":""},{"location":"reference/address/#address-object","title":"address object","text":"<p>An <code>address</code> object describes a physical or virtual address, or a range of addresses, in an \u201caddressable region\u201d (memory or a binary file).</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php address docs/assets/sarif 192</code></p> docs/assets/sarif/address.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"addresses\": [\n                {\n                    \"absoluteAddress\": 1024,\n                    \"kind\": \"module\",\n                    \"name\": \"Multitool.exe\"\n                },\n                {\n                    \"absoluteAddress\": 1400,\n                    \"relativeAddress\": 376,\n                    \"kind\": \"header\",\n                    \"name\": \"Sections\",\n                    \"offsetFromParent\": 376,\n                    \"parentIndex\": 0\n                },\n                {\n                    \"absoluteAddress\": 1536,\n                    \"relativeAddress\": 512,\n                    \"kind\": \"section\",\n                    \"name\": \".text\",\n                    \"offsetFromParent\": 136,\n                    \"parentIndex\": 1\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/address.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Address;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$address1 = new Address();\n$address1-&gt;setName('Multitool.exe');\n$address1-&gt;setKind('module');\n$address1-&gt;setAbsoluteAddress(1024);\n\n$address2 = new Address();\n$address2-&gt;setName('Sections');\n$address2-&gt;setKind('header');\n$address2-&gt;setParentIndex(0);\n$address2-&gt;setOffsetFromParent(376);\n$address2-&gt;setAbsoluteAddress(1400);\n$address2-&gt;setRelativeAddress(376);\n\n$address3 = new Address();\n$address3-&gt;setName('.text');\n$address3-&gt;setKind('section');\n$address3-&gt;setParentIndex(1);\n$address3-&gt;setOffsetFromParent(136);\n$address3-&gt;setAbsoluteAddress(1536);\n$address3-&gt;setRelativeAddress(512);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addAddresses([$address1, $address2, $address3]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/address.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/address.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addAddress(\n                $factory-&gt;address()\n                    -&gt;name('Multitool.exe')\n                    -&gt;kind('module')\n                    -&gt;absoluteAddress(1024)\n            )\n            -&gt;addAddress(\n                $factory-&gt;address()\n                    -&gt;name('Sections')\n                    -&gt;kind('header')\n                    -&gt;parentIndex(0)\n                    -&gt;offsetFromParent(376)\n                    -&gt;absoluteAddress(1400)\n                    -&gt;relativeAddress(376)\n            )\n            -&gt;addAddress(\n                $factory-&gt;address()\n                    -&gt;name('.text')\n                    -&gt;kind('section')\n                    -&gt;parentIndex(1)\n                    -&gt;offsetFromParent(136)\n                    -&gt;absoluteAddress(1536)\n                    -&gt;relativeAddress(512)\n            )\n    )\n;\n</code></pre>"},{"location":"reference/artifact/","title":"Artifact","text":""},{"location":"reference/artifact/#artifact-object","title":"artifact object","text":"<p>An <code>artifact</code> object represents a single artifact.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php artifact docs/assets/sarif 192</code></p> docs/assets/sarif/artifact.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"artifacts\": [\n                {\n                    \"location\": {\n                        \"uri\": \"file:///C:/Code/app.zip\"\n                    },\n                    \"mimeType\": \"application/zip\"\n                },\n                {\n                    \"location\": {\n                        \"uri\": \"docs/intro.docx\"\n                    },\n                    \"parentIndex\": 0,\n                    \"mimeType\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n                },\n                {\n                    \"parentIndex\": 1,\n                    \"offset\": 17522,\n                    \"length\": 4050,\n                    \"mimeType\": \"application/x-contoso-animation\"\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/artifact.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Artifact;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifact1 = new Artifact();\n$artifactLocation1 = new ArtifactLocation();\n$artifactLocation1-&gt;setUri('file:///C:/Code/app.zip');\n$artifact1-&gt;setLocation($artifactLocation1);\n$artifact1-&gt;setMimeType('application/zip');\n\n$artifact2 = new Artifact();\n$artifactLocation2 = new ArtifactLocation();\n$artifactLocation2-&gt;setUri('docs/intro.docx');\n$artifact2-&gt;setLocation($artifactLocation2);\n$artifact2-&gt;setMimeType('application/vnd.openxmlformats-officedocument.wordprocessingml.document');\n$artifact2-&gt;setParentIndex(0);\n\n$artifact3 = new Artifact();\n$artifact3-&gt;setOffset(17522);\n$artifact3-&gt;setLength(4050);\n$artifact3-&gt;setMimeType('application/x-contoso-animation');\n$artifact3-&gt;setParentIndex(1);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addArtifacts([$artifact1, $artifact2, $artifact3]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/artifact.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/artifact.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addArtifact(\n                $factory-&gt;artifact()\n                    -&gt;location(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('file:///C:/Code/app.zip')\n                    )\n                    -&gt;mimeType('application/zip')\n            )\n            -&gt;addArtifact(\n                $factory-&gt;artifact()\n                    -&gt;location(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('docs/intro.docx')\n                    )\n                    -&gt;parentIndex(0)\n                    -&gt;mimeType('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n            )\n            -&gt;addArtifact(\n                $factory-&gt;artifact()\n                    -&gt;offset(17522)\n                    -&gt;length(4050)\n                    -&gt;parentIndex(1)\n                    -&gt;mimeType('application/x-contoso-animation')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/artifactChange/","title":"artifactChange","text":""},{"location":"reference/artifactChange/#artifactchange-object","title":"artifactChange object","text":"<p>An <code>artifactChange</code> object represents a change to a single artifact.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php fix docs/assets/sarif 192</code></p> docs/assets/sarif/fix.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"// \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n\n$replacement = new Replacement();\n$region = new Region();\n$region-&gt;setStartLine(1);\n$region-&gt;setEndLine(1);\n$region-&gt;setStartColumn(1);\n$replacement-&gt;setDeletedRegion($region);\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n\n$artifactChange = new ArtifactChange();\n$artifactChange-&gt;setArtifactLocation($artifactLocation);\n$artifactChange-&gt;addReplacements([$replacement]);\n\n$fix = new Fix();\n$fix-&gt;addArtifactChanges([$artifactChange]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1001')\n                    -&gt;addFix(\n                        $factory-&gt;fix()\n                            -&gt;addArtifactChange(\n                                $factory-&gt;artifactChange()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('src/a.c')\n                                    )\n                                    -&gt;addReplacement(\n                                        $factory-&gt;replacement()\n                                            -&gt;deletedRegion(\n                                                $factory-&gt;region()\n                                                    -&gt;startLine(1)\n                                                    -&gt;startColumn(1)\n                                                    -&gt;endLine(1)\n                                            )\n                                            -&gt;insertedContent(\n                                                $factory-&gt;artifactContent()\n                                                    -&gt;text('// ')\n                                            )\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/artifactContent/","title":"artifactContent","text":""},{"location":"reference/artifactContent/#artifactcontent-object","title":"artifactContent object","text":"<p>Certain properties in this document represent the contents of portions of artifacts external to the log file, for example, artifacts that were scanned by an analysis tool. SARIF represents such content with an <code>artifactContent</code> object. Depending on the circumstances, the SARIF log file might need to represent this content as readable text, raw bytes, or both.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php fix docs/assets/sarif 192</code></p> docs/assets/sarif/fix.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"// \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n\n$replacement = new Replacement();\n$region = new Region();\n$region-&gt;setStartLine(1);\n$region-&gt;setEndLine(1);\n$region-&gt;setStartColumn(1);\n$replacement-&gt;setDeletedRegion($region);\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n\n$artifactChange = new ArtifactChange();\n$artifactChange-&gt;setArtifactLocation($artifactLocation);\n$artifactChange-&gt;addReplacements([$replacement]);\n\n$fix = new Fix();\n$fix-&gt;addArtifactChanges([$artifactChange]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1001')\n                    -&gt;addFix(\n                        $factory-&gt;fix()\n                            -&gt;addArtifactChange(\n                                $factory-&gt;artifactChange()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('src/a.c')\n                                    )\n                                    -&gt;addReplacement(\n                                        $factory-&gt;replacement()\n                                            -&gt;deletedRegion(\n                                                $factory-&gt;region()\n                                                    -&gt;startLine(1)\n                                                    -&gt;startColumn(1)\n                                                    -&gt;endLine(1)\n                                            )\n                                            -&gt;insertedContent(\n                                                $factory-&gt;artifactContent()\n                                                    -&gt;text('// ')\n                                            )\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/attachment/","title":"Attachment","text":""},{"location":"reference/attachment/#attachment-object","title":"attachment object","text":"<p>An <code>attachment</code> object describes an artifact relevant to the detection of a result.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php attachment docs/assets/sarif 192</code></p> docs/assets/sarif/attachment.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on screen shot provided\"\n                    },\n                    \"attachments\": [\n                        {\n                            \"artifactLocation\": {\n                                \"uri\": \"file:///C:/ScanOutput/image001.png\"\n                            },\n                            \"description\": {\n                                \"text\": \"Screen shot\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/attachment.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$desc = new Message();\n$desc-&gt;setText('Screen shot');\n\n$attachment = new Attachment();\n$attachment-&gt;setDescription($desc);\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('file:///C:/ScanOutput/image001.png');\n$attachment-&gt;setArtifactLocation($artifactLocation);\n\n$message = new Message();\n$message-&gt;setText('Have a look on screen shot provided');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addAttachments([$attachment]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/attachment.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/attachment.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Have a look on screen shot provided')\n                    )\n                    -&gt;addAttachment(\n                        $factory-&gt;attachment()\n                            -&gt;artifactLocation(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('file:///C:/ScanOutput/image001.png')\n                            )\n                            -&gt;description('Screen shot')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/codeFlow/","title":"codeFlow","text":""},{"location":"reference/codeFlow/#codeflow-object","title":"codeFlow object","text":"<p>A <code>codeFlow</code> object describes the progress of one or more programs through one or more thread flows, which together lead to the detection of a problem in the system being analyzed.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php codeFlow docs/assets/sarif 192</code></p> docs/assets/sarif/codeFlow.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(42);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('42');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('54');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('96');\n\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$message = new Message();\n$message-&gt;setText('A threadFlow object');\n\n$threadFlow = new ThreadFlow();\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage($message);\n$threadFlow-&gt;addLocations([$threadFlowLocation]);\n\n$message = new Message();\n$message-&gt;setText('A codeFlow object');\n\n$codeFlow = new CodeFlow();\n$codeFlow-&gt;setMessage($message);\n$codeFlow-&gt;addThreadFlows([$threadFlow]);\n\n$message = new Message();\n$message-&gt;setText('A result object');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/codeFlow.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A result object')\n                    )\n                    -&gt;addCodeFlow(\n                        $factory-&gt;codeFlow()\n                            -&gt;threadFlow(\n                                $factory-&gt;threadFlow()\n                                    -&gt;addLocation(\n                                        $factory-&gt;threadFlowLocation()\n                                            -&gt;location(\n                                                $factory-&gt;location()\n                                                    -&gt;physicalLocation(\n                                                        $factory-&gt;physicalLocation()\n                                                            -&gt;artifactLocation(\n                                                                $factory-&gt;artifactLocation()\n                                                                    -&gt;uri('ui/window.c')\n                                                                    -&gt;uriBaseId('SRCROOT')\n                                                            )\n                                                            -&gt;region(\n                                                                $factory-&gt;region()\n                                                                    -&gt;startLine(42)\n                                                            )\n                                                    )\n                                            )\n                                            -&gt;nestingLevel(0)\n                                            -&gt;executionOrder(2)\n                                            -&gt;addAdditionalProperty('x', '42')\n                                            -&gt;addAdditionalProperty('y', '54')\n                                            -&gt;addAdditionalProperty('x+y', '96')\n                                    )\n                                    -&gt;id('thread-123')\n                                    -&gt;message('A threadFlow object')\n                            )\n                            -&gt;message('A codeFlow object')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/configurationOverride/","title":"configurationOverride","text":""},{"location":"reference/configurationOverride/#configurationoverride-object","title":"configurationOverride object","text":"<p>A <code>configurationOverride</code> object modifies the effective runtime configuration of a specified <code>reportingDescriptor</code> object, which we refer to as theDescriptor.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php configurationOverride docs/assets/sarif 192</code></p> docs/assets/sarif/configurationOverride.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA2101\",\n                            \"defaultConfiguration\": {\n                                \"enabled\": true,\n                                \"level\": \"error\",\n                                \"rank\": -1\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"ruleConfigurationOverrides\": [\n                        {\n                            \"configuration\": {\n                                \"enabled\": true,\n                                \"level\": \"warning\",\n                                \"rank\": -1\n                            },\n                            \"descriptor\": {\n                                \"index\": 0\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/configurationOverride.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ConfigurationOverride;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\ReportingConfiguration;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('CA2101');\n$reportingConf = new ReportingConfiguration();\n$reportingConf-&gt;setLevel('error');\n$rule-&gt;setDefaultConfiguration($reportingConf);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$ruleConf = new ReportingConfiguration();\n$ruleConf-&gt;setLevel('warning');\n\n$confOverrides = new ConfigurationOverride();\n$descriptor = new ReportingDescriptorReference();\n$descriptor-&gt;setIndex(0);\n$confOverrides-&gt;setDescriptor($descriptor);\n$confOverrides-&gt;setConfiguration($ruleConf);\n\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;addRuleConfigurationOverrides([$confOverrides]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/configurationOverride.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/configurationOverride.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA2101')\n                                    -&gt;defaultConfiguration(\n                                        $factory-&gt;configuration()\n                                            -&gt;enabled(true)\n                                            -&gt;level('error')\n                                            -&gt;rank(-1)\n                                    )\n                            )\n                    )\n            )\n            -&gt;addInvocation(\n                $factory-&gt;invocation()\n                    -&gt;executionSuccessful(true)\n                    -&gt;addRuleConfigurationOverride(\n                        $factory-&gt;configurationOverride()\n                            -&gt;configuration(\n                                $factory-&gt;configuration()\n                                    -&gt;enabled(true)\n                                    -&gt;level('warning')\n                                    -&gt;rank(-1)\n                            )\n                            -&gt;descriptor(\n                                $factory-&gt;descriptor()\n                                    -&gt;index(0)\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/conversion/","title":"Conversion","text":""},{"location":"reference/conversion/#conversion-object","title":"conversion object","text":"<p>A <code>conversion</code> object describes how a converter transformed the output of an analysis tool from the analysis tool\u2019s native output format into the SARIF format.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php conversion docs/assets/sarif 192</code></p> docs/assets/sarif/conversion.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"AndroidStudio\",\n                    \"semanticVersion\": \"1.0.0-beta.1\",\n                    \"informationUri\": \"https://android-studion.dev\"\n                }\n            },\n            \"conversion\": {\n                \"tool\": {\n                    \"driver\": {\n                        \"name\": \"SARIF SDK Multitool\"\n                    }\n                },\n                \"invocation\": {\n                    \"executionSuccessful\": true,\n                    \"commandLine\": \"Sarif.Multitool.exe convert -t AndroidStudio northwind.log\"\n                },\n                \"analysisToolLogFiles\": [\n                    {\n                        \"uri\": \"northwind.log\",\n                        \"uriBaseId\": \"$LOG_DIR$\"\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/conversion.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Conversion;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('AndroidStudio');\n$driver-&gt;setInformationUri('https://android-studion.dev');\n$driver-&gt;setSemanticVersion('1.0.0-beta.1');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$converter = new Tool();\n$sdk = new ToolComponent();\n$sdk-&gt;setName('SARIF SDK Multitool');\n$converter-&gt;setDriver($sdk);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('northwind.log');\n$artifactLocation-&gt;setUriBaseId('$LOG_DIR$');\n\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;setCommandLine('Sarif.Multitool.exe convert -t AndroidStudio northwind.log');\n\n$conversion = new Conversion();\n$conversion-&gt;setTool($converter);\n$conversion-&gt;addAnalysisToolLogFiles([$artifactLocation]);\n$conversion-&gt;setInvocation($invocation);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;setConversion($conversion);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/conversion.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/conversion.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('AndroidStudio')\n                            -&gt;semanticVersion('1.0.0-beta.1')\n                            -&gt;informationUri('https://android-studion.dev')\n                    )\n            )\n            -&gt;conversion(\n                $factory-&gt;conversion()\n                    -&gt;tool(\n                        $factory-&gt;tool()\n                            -&gt;driver(\n                                $factory-&gt;driver()\n                                    -&gt;name('SARIF SDK Multitool')\n                            )\n                    )\n                    -&gt;invocation(\n                        $factory-&gt;invocation()\n                            -&gt;executionSuccessful(true)\n                            -&gt;commandLine('Sarif.Multitool.exe convert -t AndroidStudio northwind.log')\n                    )\n                    -&gt;addAnalysisToolLogFile(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('northwind.log')\n                            -&gt;uriBaseId('$LOG_DIR$')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/edge/","title":"Edge","text":""},{"location":"reference/edge/#edge-object","title":"edge object","text":"<p>A <code>edge</code> object represents a directed edge in the graph represented by theGraph.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php graph docs/assets/sarif 192</code></p> docs/assets/sarif/graph.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nodes = [];\nforeach ([2 =&gt; 'n2', 3 =&gt; 'n3', 4 =&gt; 'n4', 1 =&gt; 'n1'] as $idx =&gt; $nodeId) {\n    $node = new Node();\n    $node-&gt;setId($nodeId);\n    $nodes[$idx] = $node;\n}\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge();\n$edges[1]-&gt;setId('e1');\n$edges[1]-&gt;setSourceNodeId('n3');\n$edges[1]-&gt;setTargetNodeId('n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$message = new Message();\n$message-&gt;setText('Have a look on this graph');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/graph.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Have a look on this graph')\n                    )\n                    -&gt;addGraph(\n                        $factory-&gt;graph()\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n2')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n3')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n4')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n1')\n                                    -&gt;addChildren(\n                                        $factory-&gt;node()\n                                            -&gt;id('n3')\n                                    )\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e1')\n                                    -&gt;sourceNodeId('n3')\n                                    -&gt;targetNodeId('n4')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/edgeTraversal/","title":"edgeTraversal","text":""},{"location":"reference/edgeTraversal/#edgetraversal-object","title":"edgeTraversal object","text":"<p>An <code>edgeTraversal</code> object represents the traversal of a single edge during a graph traversal.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php graphTraversal docs/assets/sarif 192</code></p> docs/assets/sarif/graphTraversal.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A graph and edge traversal objects\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n1\"\n                                },\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n1\",\n                                    \"targetNodeId\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"e2\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"e3\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"graphTraversals\": [\n                        {\n                            \"resultGraphIndex\": 0,\n                            \"initialState\": {\n                                \"x\": {\n                                    \"text\": \"1\"\n                                },\n                                \"y\": {\n                                    \"text\": \"2\"\n                                },\n                                \"x+y\": {\n                                    \"text\": \"3\"\n                                }\n                            },\n                            \"edgeTraversals\": [\n                                {\n                                    \"edgeId\": \"e1\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"2\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"6\"\n                                        }\n                                    }\n                                },\n                                {\n                                    \"edgeId\": \"e3\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"7\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"11\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/graphTraversal.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\EdgeTraversal;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\GraphTraversal;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nodes = [];\nforeach ([1 =&gt; 'n1', 2 =&gt; 'n2', 3 =&gt; 'n3', 4 =&gt; 'n4'] as $idx =&gt; $nodeId) {\n    $node = new Node();\n    $node-&gt;setId($nodeId);\n    $nodes[$idx] = $node;\n}\n\n$edges = [];\n\n$edges[1] = new Edge();\n$edges[1]-&gt;setId('e1');\n$edges[1]-&gt;setSourceNodeId('n1');\n$edges[1]-&gt;setTargetNodeId('n2');\n\n$edges[2] = new Edge();\n$edges[2]-&gt;setId('e2');\n$edges[2]-&gt;setSourceNodeId('n2');\n$edges[2]-&gt;setTargetNodeId('n3');\n\n$edges[3] = new Edge();\n$edges[3]-&gt;setId('e3');\n$edges[3]-&gt;setSourceNodeId('n2');\n$edges[3]-&gt;setTargetNodeId('n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$graphTraversal = new GraphTraversal();\n$graphTraversal-&gt;setResultGraphIndex(0);\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('1');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('2');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('3');\n\n$graphTraversal-&gt;addAdditionalPropertiesInitialState([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n\n$edgeTraversal1 = new EdgeTraversal();\n$edgeTraversal1-&gt;setEdgeId('e1');\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('4');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('2');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('6');\n\n$edgeTraversal1-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$edgeTraversal3 = new EdgeTraversal();\n$edgeTraversal3-&gt;setEdgeId('e3');\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('4');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('7');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('11');\n\n$edgeTraversal3-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$graphTraversal-&gt;addEdgeTraversals([$edgeTraversal1, $edgeTraversal3]);\n\n$message = new Message();\n$message-&gt;setText('A graph and edge traversal objects');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addGraphs([$graph]);\n$result-&gt;addGraphTraversals([$graphTraversal]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/graphTraversal.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/graphTraversal.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A graph and edge traversal objects')\n                    )\n                    -&gt;addGraph(\n                        $factory-&gt;graph()\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n1')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n2')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n3')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n4')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e1')\n                                    -&gt;sourceNodeId('n1')\n                                    -&gt;targetNodeId('n2')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e2')\n                                    -&gt;sourceNodeId('n2')\n                                    -&gt;targetNodeId('n3')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e3')\n                                    -&gt;sourceNodeId('n2')\n                                    -&gt;targetNodeId('n4')\n                            )\n                    )\n                    -&gt;addGraphTraversal(\n                        $factory-&gt;graphTraversal()\n                            -&gt;resultGraphIndex(0)\n                            -&gt;addInitialState('x', '1')\n                            -&gt;addInitialState('y', '2')\n                            -&gt;addInitialState('x+y', '3')\n                            -&gt;addEdgeTraversal(\n                                $factory-&gt;edgeTraversal()\n                                    -&gt;edgeId('e1')\n                                    -&gt;addFinalState('x', '4')\n                                    -&gt;addFinalState('y', '2')\n                                    -&gt;addFinalState('x+y', '6')\n                            )\n                            -&gt;addEdgeTraversal(\n                                $factory-&gt;edgeTraversal()\n                                    -&gt;edgeId('e3')\n                                    -&gt;addFinalState('x', '4')\n                                    -&gt;addFinalState('y', '7')\n                                    -&gt;addFinalState('x+y', '11')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/exception/","title":"Exception","text":""},{"location":"reference/exception/#exception-object","title":"exception object","text":"<p>An <code>exception</code> object describes a runtime exception encountered during the execution of an analysis tool. This includes signals in POSIX-conforming operating systems.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php exception docs/assets/sarif 192</code></p> docs/assets/sarif/exception.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"exception\": {\n                                \"message\": \"Exception evaluating rule 'C2001'\"\n                            },\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/exception.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Exception;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor();\n$ruleV1-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('First version of rule.');\n$ruleV1-&gt;setShortDescription($desc);\n\n$ruleV2 = new ReportingDescriptor();\n$ruleV2-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Second version of rule.');\n$ruleV2-&gt;setShortDescription($desc);\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\");\n\n$notification = new Notification();\n$notification-&gt;setMessage($message);\n$associatedRule = new ReportingDescriptorReference();\n$associatedRule-&gt;setIndex(0);\n$associatedRule-&gt;setId('C2001');\n$notification-&gt;setAssociatedRule($associatedRule);\n$descriptor = new ReportingDescriptorReference();\n$descriptor-&gt;setIndex(1);\n$descriptor-&gt;setId('CTN9999');\n$notification-&gt;setDescriptor($descriptor);\n$notification-&gt;setLevel('error');\n$exception = new Exception();\n$exception-&gt;setMessage(\"Exception evaluating rule 'C2001'\");\n$notification-&gt;setException($exception);\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/exception.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/conversion.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('First version of rule.')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('Second version of rule.')\n                            )\n                    )\n            )\n            -&gt;addInvocation(\n                $factory-&gt;invocation()\n                    -&gt;executionSuccessful(true)\n                    -&gt;addToolExecutionNotification(\n                        $factory-&gt;notification()\n                            -&gt;message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\")\n                            -&gt;level('error')\n                            -&gt;descriptor(\n                                $factory-&gt;descriptor()\n                                    -&gt;id('CTN9999')\n                                    -&gt;index(1)\n                            )\n                            -&gt;exception(\n                                $factory-&gt;exception()\n                                    -&gt;message(\"Exception evaluating rule 'C2001'\")\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CTN9999')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/externalProperties/","title":"externalProperties","text":""},{"location":"reference/externalProperties/#externalproperties-object","title":"externalProperties object","text":"<p>The top-level element of an external property file SHALL be an object which we refer to as an <code>externalProperties</code> object.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php externalProperties docs/assets/sarif 192</code></p> docs/assets/sarif/externalProperties.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": []\n        }\n    ],\n    \"inlineExternalProperties\": [\n        {\n            \"schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n            \"version\": \"2.1.0\",\n            \"guid\": \"00001111-2222-1111-8888-555566667777\",\n            \"runGuid\": \"88889999-AAAA-1111-8888-DDDDEEEEFFFF\",\n            \"externalizedProperties\": {\n                \"team\": \"Security Assurance Team\"\n            },\n            \"artifacts\": [\n                {\n                    \"location\": {\n                        \"uri\": \"apple.png\"\n                    },\n                    \"mimeType\": \"image/png\"\n                },\n                {\n                    \"location\": {\n                        \"uri\": \"banana.png\"\n                    },\n                    \"mimeType\": \"image/png\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/externalProperties.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Artifact;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalProperties;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$apple = new Artifact();\n$location = new ArtifactLocation();\n$location-&gt;setUri('apple.png');\n$apple-&gt;setLocation($location);\n$apple-&gt;setMimeType('image/png');\n\n$banana = new Artifact();\n$location = new ArtifactLocation();\n$location-&gt;setUri('banana.png');\n$banana-&gt;setLocation($location);\n$banana-&gt;setMimeType('image/png');\n\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('team', 'Security Assurance Team');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n$externalProperties = new ExternalProperties();\n$externalProperties-&gt;setGuid('00001111-2222-1111-8888-555566667777');\n$externalProperties-&gt;setRunGuid('88889999-AAAA-1111-8888-DDDDEEEEFFFF');\n$externalProperties-&gt;addArtifacts([$apple, $banana]);\n$externalProperties-&gt;setExternalizedProperties($propertyBag);\n$log-&gt;addInlineExternalProperties([$externalProperties]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/externalProperties.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n    )\n    -&gt;addInlineExternalProperties(\n        $factory-&gt;externalProperties()\n            -&gt;guid('00001111-2222-1111-8888-555566667777')\n            -&gt;runGuid('88889999-AAAA-1111-8888-DDDDEEEEFFFF')\n            -&gt;addArtifact(\n                $factory-&gt;artifact()\n                    -&gt;location(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('apple.png')\n                    )\n                    -&gt;mimeType('image/png')\n            )\n            -&gt;addArtifact(\n                $factory-&gt;artifact()\n                    -&gt;location(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('banana.png')\n                    )\n                    -&gt;mimeType('image/png')\n            )\n            -&gt;externalizedProperties(\n                $factory-&gt;propertyBag()\n                    -&gt;addProperty('team', 'Security Assurance Team')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/externalPropertyFileReference/","title":"externalPropertyFileReference","text":""},{"location":"reference/externalPropertyFileReference/#externalpropertyfilereference-object","title":"externalPropertyFileReference object","text":"<p>An <code>externalPropertyFileReference</code> object contains information that enables a SARIF consumer to locate the external property files that contain the values of all externalized properties associated with theRun.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php externalPropertyFileReferences docs/assets/sarif 192</code></p> docs/assets/sarif/externalPropertyFileReferences.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"LOGSDIR\": {\n                    \"uri\": \"file:///C:/logs/\"\n                }\n            },\n            \"externalPropertyFileReferences\": {\n                \"conversion\": {\n                    \"location\": {\n                        \"uri\": \"scantool.conversion.sarif-external-properties\",\n                        \"uriBaseId\": \"LOGSDIR\"\n                    },\n                    \"guid\": \"11111111-1111-1111-8888-111111111111\"\n                },\n                \"results\": [\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-1.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"22222222-2222-1111-8888-222222222222\",\n                        \"itemCount\": 1000\n                    },\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-2.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"33333333-3333-1111-8888-333333333333\",\n                        \"itemCount\": 4277\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/externalPropertyFileReferences.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReference;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReferences;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$logsDir = new ArtifactLocation();\n$logsDir-&gt;setUri('file:///C:/logs/');\n$run-&gt;addAdditionalProperties([\n    'LOGSDIR' =&gt; $logsDir,\n]);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.conversion.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$conversion = new ExternalPropertyFileReference();\n$conversion-&gt;setLocation($location);\n$conversion-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-1.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef1 = new ExternalPropertyFileReference();\n$resultRef1-&gt;setLocation($location);\n$resultRef1-&gt;setGuid('22222222-2222-1111-8888-222222222222');\n$resultRef1-&gt;setItemCount(1000);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-2.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef2 = new ExternalPropertyFileReference();\n$resultRef2-&gt;setLocation($location);\n$resultRef2-&gt;setGuid('33333333-3333-1111-8888-333333333333');\n$resultRef2-&gt;setItemCount(4277);\n\n$externalPropertyFileReferences = new ExternalPropertyFileReferences();\n$externalPropertyFileReferences-&gt;setConversion($conversion);\n$externalPropertyFileReferences-&gt;addResults([$resultRef1, $resultRef2]);\n$run-&gt;setExternalPropertyFileReferences($externalPropertyFileReferences);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/externalPropertyFileReferences.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addOriginalUriBaseId(\n                'LOGSDIR',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('file:///C:/logs/')\n            )\n            -&gt;externalPropertyFileReferences(\n                $factory-&gt;externalPropertyFileReferences()\n                    -&gt;conversion(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.conversion.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('11111111-1111-1111-8888-111111111111')\n                    )\n                    -&gt;addResult(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.results-1.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('22222222-2222-1111-8888-222222222222')\n                            -&gt;itemCount(1000)\n                    )\n                    -&gt;addResult(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.results-2.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('33333333-3333-1111-8888-333333333333')\n                            -&gt;itemCount(4277)\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/externalPropertyFileReferences/","title":"externalPropertyFileReferences","text":""},{"location":"reference/externalPropertyFileReferences/#externalpropertyfilereferences-object","title":"externalPropertyFileReferences object","text":"<p>An <code>externalPropertyFileReferences</code> object contains information that enables a SARIF consumer to locate the external property files that contain the values of all externalized properties associated with theRun.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php externalPropertyFileReferences docs/assets/sarif 192</code></p> docs/assets/sarif/externalPropertyFileReferences.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"LOGSDIR\": {\n                    \"uri\": \"file:///C:/logs/\"\n                }\n            },\n            \"externalPropertyFileReferences\": {\n                \"conversion\": {\n                    \"location\": {\n                        \"uri\": \"scantool.conversion.sarif-external-properties\",\n                        \"uriBaseId\": \"LOGSDIR\"\n                    },\n                    \"guid\": \"11111111-1111-1111-8888-111111111111\"\n                },\n                \"results\": [\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-1.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"22222222-2222-1111-8888-222222222222\",\n                        \"itemCount\": 1000\n                    },\n                    {\n                        \"location\": {\n                            \"uri\": \"scantool.results-2.sarif-external-properties\",\n                            \"uriBaseId\": \"LOGSDIR\"\n                        },\n                        \"guid\": \"33333333-3333-1111-8888-333333333333\",\n                        \"itemCount\": 4277\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/externalPropertyFileReferences.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReference;\nuse Bartlett\\Sarif\\Definition\\ExternalPropertyFileReferences;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$logsDir = new ArtifactLocation();\n$logsDir-&gt;setUri('file:///C:/logs/');\n$run-&gt;addAdditionalProperties([\n    'LOGSDIR' =&gt; $logsDir,\n]);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.conversion.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$conversion = new ExternalPropertyFileReference();\n$conversion-&gt;setLocation($location);\n$conversion-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-1.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef1 = new ExternalPropertyFileReference();\n$resultRef1-&gt;setLocation($location);\n$resultRef1-&gt;setGuid('22222222-2222-1111-8888-222222222222');\n$resultRef1-&gt;setItemCount(1000);\n\n$location = new ArtifactLocation();\n$location-&gt;setUri('scantool.results-2.sarif-external-properties');\n$location-&gt;setUriBaseId('LOGSDIR');\n$resultRef2 = new ExternalPropertyFileReference();\n$resultRef2-&gt;setLocation($location);\n$resultRef2-&gt;setGuid('33333333-3333-1111-8888-333333333333');\n$resultRef2-&gt;setItemCount(4277);\n\n$externalPropertyFileReferences = new ExternalPropertyFileReferences();\n$externalPropertyFileReferences-&gt;setConversion($conversion);\n$externalPropertyFileReferences-&gt;addResults([$resultRef1, $resultRef2]);\n$run-&gt;setExternalPropertyFileReferences($externalPropertyFileReferences);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/externalPropertyFileReferences.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addOriginalUriBaseId(\n                'LOGSDIR',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('file:///C:/logs/')\n            )\n            -&gt;externalPropertyFileReferences(\n                $factory-&gt;externalPropertyFileReferences()\n                    -&gt;conversion(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.conversion.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('11111111-1111-1111-8888-111111111111')\n                    )\n                    -&gt;addResult(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.results-1.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('22222222-2222-1111-8888-222222222222')\n                            -&gt;itemCount(1000)\n                    )\n                    -&gt;addResult(\n                        $factory-&gt;externalPropertyFileReference()\n                            -&gt;location(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('scantool.results-2.sarif-external-properties')\n                                    -&gt;uriBaseId('LOGSDIR')\n                            )\n                            -&gt;guid('33333333-3333-1111-8888-333333333333')\n                            -&gt;itemCount(4277)\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/fix/","title":"Fix","text":""},{"location":"reference/fix/#fix-object","title":"fix object","text":"<p>A <code>fix</code> object represents a proposed fix for the problem indicated by theResult. It specifies a set of artifacts to modify. For each artifact, it specifies regions to remove, and provides new content to insert.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php fix docs/assets/sarif 192</code></p> docs/assets/sarif/fix.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"// \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n\n$replacement = new Replacement();\n$region = new Region();\n$region-&gt;setStartLine(1);\n$region-&gt;setEndLine(1);\n$region-&gt;setStartColumn(1);\n$replacement-&gt;setDeletedRegion($region);\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n\n$artifactChange = new ArtifactChange();\n$artifactChange-&gt;setArtifactLocation($artifactLocation);\n$artifactChange-&gt;addReplacements([$replacement]);\n\n$fix = new Fix();\n$fix-&gt;addArtifactChanges([$artifactChange]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1001')\n                    -&gt;addFix(\n                        $factory-&gt;fix()\n                            -&gt;addArtifactChange(\n                                $factory-&gt;artifactChange()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('src/a.c')\n                                    )\n                                    -&gt;addReplacement(\n                                        $factory-&gt;replacement()\n                                            -&gt;deletedRegion(\n                                                $factory-&gt;region()\n                                                    -&gt;startLine(1)\n                                                    -&gt;startColumn(1)\n                                                    -&gt;endLine(1)\n                                            )\n                                            -&gt;insertedContent(\n                                                $factory-&gt;artifactContent()\n                                                    -&gt;text('// ')\n                                            )\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/graph/","title":"Graph","text":""},{"location":"reference/graph/#graph-object","title":"graph object","text":"<p>A <code>graph</code> object represents a directed graph, a network of nodes and directed edges that describes some aspect of the structure of the code (for example, a call graph).</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php graph docs/assets/sarif 192</code></p> docs/assets/sarif/graph.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nodes = [];\nforeach ([2 =&gt; 'n2', 3 =&gt; 'n3', 4 =&gt; 'n4', 1 =&gt; 'n1'] as $idx =&gt; $nodeId) {\n    $node = new Node();\n    $node-&gt;setId($nodeId);\n    $nodes[$idx] = $node;\n}\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge();\n$edges[1]-&gt;setId('e1');\n$edges[1]-&gt;setSourceNodeId('n3');\n$edges[1]-&gt;setTargetNodeId('n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$message = new Message();\n$message-&gt;setText('Have a look on this graph');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/graph.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Have a look on this graph')\n                    )\n                    -&gt;addGraph(\n                        $factory-&gt;graph()\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n2')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n3')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n4')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n1')\n                                    -&gt;addChildren(\n                                        $factory-&gt;node()\n                                            -&gt;id('n3')\n                                    )\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e1')\n                                    -&gt;sourceNodeId('n3')\n                                    -&gt;targetNodeId('n4')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/graphTraversal/","title":"graphTraversal","text":""},{"location":"reference/graphTraversal/#graphtraversal-object","title":"graphTraversal object","text":"<p>A <code>graphTraversal</code> object represents a \"graph traversal\", that is, a path through a graph specified by a sequence of connected \"edge traversals\", each of which is represented by an <code>edgeTraversal</code> object.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php graphTraversal docs/assets/sarif 192</code></p> docs/assets/sarif/graphTraversal.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A graph and edge traversal objects\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n1\"\n                                },\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n1\",\n                                    \"targetNodeId\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"e2\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"e3\",\n                                    \"sourceNodeId\": \"n2\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"graphTraversals\": [\n                        {\n                            \"resultGraphIndex\": 0,\n                            \"initialState\": {\n                                \"x\": {\n                                    \"text\": \"1\"\n                                },\n                                \"y\": {\n                                    \"text\": \"2\"\n                                },\n                                \"x+y\": {\n                                    \"text\": \"3\"\n                                }\n                            },\n                            \"edgeTraversals\": [\n                                {\n                                    \"edgeId\": \"e1\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"2\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"6\"\n                                        }\n                                    }\n                                },\n                                {\n                                    \"edgeId\": \"e3\",\n                                    \"finalState\": {\n                                        \"x\": {\n                                            \"text\": \"4\"\n                                        },\n                                        \"y\": {\n                                            \"text\": \"7\"\n                                        },\n                                        \"x+y\": {\n                                            \"text\": \"11\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/graphTraversal.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\EdgeTraversal;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\GraphTraversal;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nodes = [];\nforeach ([1 =&gt; 'n1', 2 =&gt; 'n2', 3 =&gt; 'n3', 4 =&gt; 'n4'] as $idx =&gt; $nodeId) {\n    $node = new Node();\n    $node-&gt;setId($nodeId);\n    $nodes[$idx] = $node;\n}\n\n$edges = [];\n\n$edges[1] = new Edge();\n$edges[1]-&gt;setId('e1');\n$edges[1]-&gt;setSourceNodeId('n1');\n$edges[1]-&gt;setTargetNodeId('n2');\n\n$edges[2] = new Edge();\n$edges[2]-&gt;setId('e2');\n$edges[2]-&gt;setSourceNodeId('n2');\n$edges[2]-&gt;setTargetNodeId('n3');\n\n$edges[3] = new Edge();\n$edges[3]-&gt;setId('e3');\n$edges[3]-&gt;setSourceNodeId('n2');\n$edges[3]-&gt;setTargetNodeId('n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$graphTraversal = new GraphTraversal();\n$graphTraversal-&gt;setResultGraphIndex(0);\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('1');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('2');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('3');\n\n$graphTraversal-&gt;addAdditionalPropertiesInitialState([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n\n$edgeTraversal1 = new EdgeTraversal();\n$edgeTraversal1-&gt;setEdgeId('e1');\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('4');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('2');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('6');\n\n$edgeTraversal1-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$edgeTraversal3 = new EdgeTraversal();\n$edgeTraversal3-&gt;setEdgeId('e3');\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('4');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('7');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('11');\n\n$edgeTraversal3-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$graphTraversal-&gt;addEdgeTraversals([$edgeTraversal1, $edgeTraversal3]);\n\n$message = new Message();\n$message-&gt;setText('A graph and edge traversal objects');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addGraphs([$graph]);\n$result-&gt;addGraphTraversals([$graphTraversal]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/graphTraversal.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/graphTraversal.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A graph and edge traversal objects')\n                    )\n                    -&gt;addGraph(\n                        $factory-&gt;graph()\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n1')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n2')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n3')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n4')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e1')\n                                    -&gt;sourceNodeId('n1')\n                                    -&gt;targetNodeId('n2')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e2')\n                                    -&gt;sourceNodeId('n2')\n                                    -&gt;targetNodeId('n3')\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e3')\n                                    -&gt;sourceNodeId('n2')\n                                    -&gt;targetNodeId('n4')\n                            )\n                    )\n                    -&gt;addGraphTraversal(\n                        $factory-&gt;graphTraversal()\n                            -&gt;resultGraphIndex(0)\n                            -&gt;addInitialState('x', '1')\n                            -&gt;addInitialState('y', '2')\n                            -&gt;addInitialState('x+y', '3')\n                            -&gt;addEdgeTraversal(\n                                $factory-&gt;edgeTraversal()\n                                    -&gt;edgeId('e1')\n                                    -&gt;addFinalState('x', '4')\n                                    -&gt;addFinalState('y', '2')\n                                    -&gt;addFinalState('x+y', '6')\n                            )\n                            -&gt;addEdgeTraversal(\n                                $factory-&gt;edgeTraversal()\n                                    -&gt;edgeId('e3')\n                                    -&gt;addFinalState('x', '4')\n                                    -&gt;addFinalState('y', '7')\n                                    -&gt;addFinalState('x+y', '11')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/invocation/","title":"Invocation","text":""},{"location":"reference/invocation/#invocation-object","title":"invocation object","text":"<p>An <code>invocation</code> object describes the invocation of the analysis tool that was run.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptorReference docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptorReference.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor();\n$ruleV1-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('First version of rule.');\n$ruleV1-&gt;setShortDescription($desc);\n\n$ruleV2 = new ReportingDescriptor();\n$ruleV2-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Second version of rule.');\n$ruleV2-&gt;setShortDescription($desc);\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\");\n\n$notification = new Notification();\n$notification-&gt;setMessage($message);\n$associatedRule = new ReportingDescriptorReference();\n$associatedRule-&gt;setIndex(0);\n$associatedRule-&gt;setId('C2001');\n$notification-&gt;setAssociatedRule($associatedRule);\n$descriptor = new ReportingDescriptorReference();\n$descriptor-&gt;setIndex(1);\n$descriptor-&gt;setId('CTN9999');\n$notification-&gt;setDescriptor($descriptor);\n$notification-&gt;setLevel('error');\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptorReference.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('First version of rule.')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('Second version of rule.')\n                            )\n                    )\n            )\n            -&gt;addInvocation(\n                $factory-&gt;invocation()\n                    -&gt;executionSuccessful(true)\n                    -&gt;addToolExecutionNotification(\n                        $factory-&gt;notification()\n                            -&gt;message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\")\n                            -&gt;level('error')\n                            -&gt;descriptor(\n                                $factory-&gt;descriptor()\n                                    -&gt;index(1)\n                                    -&gt;id('CTN9999')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CTN9999')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/locationRelationship/","title":"locationRelationship","text":""},{"location":"reference/locationRelationship/#locationrelationship-object","title":"locationRelationship object","text":"<p>A <code>locationRelationship</code> object specifies one or more directed relationships from one location object, which we refer to as theSource, to another one, which we refer to as theTarget.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php locationRelationship docs/assets/sarif 192</code></p> docs/assets/sarif/locationRelationship.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object with locationRelationship object\"\n                    },\n                    \"locations\": [\n                        {\n                            \"id\": 0,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"f.h\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 42\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 1,\n                                    \"kinds\": [\n                                        \"isIncludedBy\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ],\n                    \"relatedLocations\": [\n                        {\n                            \"id\": 1,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"g.h\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 17\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 0,\n                                    \"kinds\": [\n                                        \"includes\"\n                                    ]\n                                },\n                                {\n                                    \"target\": 2,\n                                    \"kinds\": [\n                                        \"isIncludedBy\"\n                                    ]\n                                }\n                            ]\n                        },\n                        {\n                            \"id\": 2,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"g.c\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 8\n                                }\n                            },\n                            \"relationships\": [\n                                {\n                                    \"target\": 1,\n                                    \"kinds\": [\n                                        \"includes\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/locationRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LocationRelationship;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$location = [];\n$physicalLocation = [];\n$artifactLocation = [];\n$region = [];\n$relationships = [];\n\n$location[0] = new Location();\n$location[0]-&gt;setId(0);\n$artifactLocation[0] = new ArtifactLocation();\n$artifactLocation[0]-&gt;setUri('f.h');\n$physicalLocation[0] = new PhysicalLocation();\n$physicalLocation[0]-&gt;setArtifactLocation($artifactLocation[0]);\n$region[0] = new Region();\n$region[0]-&gt;setStartLine(42);\n$physicalLocation[0]-&gt;setRegion($region[0]);\n$location[0]-&gt;setPhysicalLocation($physicalLocation[0]);\n$relationships[0] = new LocationRelationship();\n$relationships[0]-&gt;setTarget(1);\n$relationships[0]-&gt;addKinds(['isIncludedBy']);\n$location[0]-&gt;addRelationships([$relationships[0]]);\n\n$location[1] = new Location();\n$location[1]-&gt;setId(1);\n$artifactLocation[1] = new ArtifactLocation();\n$artifactLocation[1]-&gt;setUri('g.h');\n$physicalLocation[1] = new PhysicalLocation();\n$physicalLocation[1]-&gt;setArtifactLocation($artifactLocation[1]);\n$region[1] = new Region();\n$region[1]-&gt;setStartLine(17);\n$physicalLocation[1]-&gt;setRegion($region[1]);\n$location[1]-&gt;setPhysicalLocation($physicalLocation[1]);\n$relationships[1] = new LocationRelationship();\n$relationships[1]-&gt;setTarget(0);\n$relationships[1]-&gt;addKinds(['includes']);\n$relationships[2] = new LocationRelationship();\n$relationships[2]-&gt;setTarget(2);\n$relationships[2]-&gt;addKinds(['isIncludedBy']);\n$location[1]-&gt;addRelationships([$relationships[1], $relationships[2]]);\n\n$location[2] = new Location();\n$location[2]-&gt;setId(2);\n$artifactLocation[2] = new ArtifactLocation();\n$artifactLocation[2]-&gt;setUri('g.c');\n$physicalLocation[2] = new PhysicalLocation();\n$physicalLocation[2]-&gt;setArtifactLocation($artifactLocation[2]);\n$region[2] = new Region();\n$region[2]-&gt;setStartLine(8);\n$physicalLocation[2]-&gt;setRegion($region[2]);\n$location[2]-&gt;setPhysicalLocation($physicalLocation[2]);\n$relationships[2] = new LocationRelationship();\n$relationships[2]-&gt;setTarget(1);\n$relationships[2]-&gt;addKinds(['includes']);\n$location[2]-&gt;addRelationships([$relationships[2]]);\n\n$message = new Message();\n$message-&gt;setText('A result object with locationRelationship object');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addLocations([$location[0]]);\n$result-&gt;addRelatedLocations([$location[1], $location[2]]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/locationRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/locationRelationship.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A result object with locationRelationship object')\n                    )\n                    -&gt;addLocation(\n                        $factory-&gt;location()\n                            -&gt;id(0)\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('f.h')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(42)\n                                    )\n                            )\n                            -&gt;addRelationship(\n                                $factory-&gt;locationRelationship()\n                                    -&gt;target(1)\n                                    -&gt;addKind('isIncludedBy')\n                            )\n                    )\n                    -&gt;addRelatedLocation(\n                        $factory-&gt;location()\n                            -&gt;id(1)\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('g.h')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(17)\n                                    )\n                            )\n                            -&gt;addRelationship(\n                                $factory-&gt;locationRelationship()\n                                    -&gt;target(0)\n                                    -&gt;addKind('includes')\n                            )\n                            -&gt;addRelationship(\n                                $factory-&gt;locationRelationship()\n                                    -&gt;target(2)\n                                    -&gt;addKind('isIncludedBy')\n                            )\n                    )\n                    -&gt;addRelatedLocation(\n                        $factory-&gt;location()\n                            -&gt;id(2)\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('g.c')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(8)\n                                    )\n                            )\n                            -&gt;addRelationship(\n                                $factory-&gt;locationRelationship()\n                                    -&gt;target(1)\n                                    -&gt;addKind('includes')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/logicalLocation/","title":"logicalLocation","text":""},{"location":"reference/logicalLocation/#logicallocation-object","title":"logicalLocation object","text":"<p>A <code>logicalLocation</code> object describes a logical location. A logical location is a location specified by a programmatic construct such as a namespace, a type, or a method, without regard to the physical location where the construct occurs.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php logicalLocation docs/assets/sarif 192</code></p> docs/assets/sarif/logicalLocation.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https://psalm.de\"\n                }\n            },\n            \"logicalLocations\": [\n                {\n                    \"name\": \"Hook\",\n                    \"fullyQualifiedName\": \"Psalm\\\\Plugin\\\\Hook\",\n                    \"kind\": \"namespace\"\n                },\n                {\n                    \"name\": \"afterAnalysis\",\n                    \"fullyQualifiedName\": \"Psalm\\\\Plugin\\\\Hook\\\\AfterAnalysisInterface\\\\afterAnalysis\",\n                    \"kind\": \"function\"\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/logicalLocation.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nsLocation = new LogicalLocation();\n$nsLocation-&gt;setName('Hook');\n$nsLocation-&gt;setFullyQualifiedName('Psalm\\Plugin\\Hook');\n$nsLocation-&gt;setKind('namespace');\n\n$funcLocation = new LogicalLocation();\n$funcLocation-&gt;setName('afterAnalysis');\n$funcLocation-&gt;setFullyQualifiedName('Psalm\\Plugin\\Hook\\AfterAnalysisInterface\\afterAnalysis');\n$funcLocation-&gt;setKind('function');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addLogicalLocations([$nsLocation, $funcLocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/logicalLocation.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/logicalLocation.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('Psalm')\n                            -&gt;version('4.x-dev')\n                            -&gt;informationUri('https://psalm.de')\n                    )\n            )\n            -&gt;addLogicalLocation(\n                $factory-&gt;logicalLocation()\n                    -&gt;name('Hook')\n                    -&gt;fullyQualifiedName('Psalm\\Plugin\\Hook')\n                    -&gt;kind('namespace')\n            )\n            -&gt;addLogicalLocation(\n                $factory-&gt;logicalLocation()\n                    -&gt;name('afterAnalysis')\n                    -&gt;fullyQualifiedName('Psalm\\Plugin\\Hook\\AfterAnalysisInterface\\afterAnalysis')\n                    -&gt;kind('function')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/message/","title":"Message","text":""},{"location":"reference/message/#message-object","title":"message object","text":"<p>Certain objects in this document define messages intended to be viewed by a user. SARIF represents such a message with a <code>message</code> object, which offers the following features:</p> <ul> <li>Message strings in plain text (\u201cplain text messages\u201d).</li> <li>Message strings that incorporate formatting information (\u201cformatted messages\u201d) in GitHub Flavored Markdown.</li> <li>Message strings with placeholders for variable information.</li> <li>Message strings with embedded links.</li> </ul> <p></p>"},{"location":"reference/message/#plaintext-example","title":"PlainText Example","text":"sarif.json Simple API Fluent Builder API <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php message/plainText docs/assets/sarif 192</code></p> docs/assets/sarif/message/plainText.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"ESLint\",\n                    \"semanticVersion\": \"8.1.0\",\n                    \"informationUri\": \"https://eslint.org\",\n                    \"rules\": [\n                        {\n                            \"id\": \"no-unused-vars\",\n                            \"shortDescription\": {\n                                \"text\": \"disallow unused variables\"\n                            },\n                            \"helpUri\": \"https://eslint.org/docs/rules/no-unused-vars\",\n                            \"properties\": {\n                                \"category\": \"Variables\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"'x' is assigned a value but never used.\"\n                    },\n                    \"ruleId\": \"no-unused-vars\",\n                    \"ruleIndex\": 0,\n                    \"level\": \"error\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/message/plainText.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('ESLint');\n$driver-&gt;setInformationUri('https://eslint.org');\n$driver-&gt;setSemanticVersion('8.1.0');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('no-unused-vars');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('disallow unused variables');\n$rule-&gt;setShortDescription($desc);\n$rule-&gt;setHelpUri('https://eslint.org/docs/rules/no-unused-vars');\n$properties = new PropertyBag();\n$properties-&gt;addProperty('category', 'Variables');\n$rule-&gt;setProperties($properties);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"'x' is assigned a value but never used.\");\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setLevel('error');\n$result-&gt;setRuleId('no-unused-vars');\n$result-&gt;setRuleIndex(0);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/message/plainText.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 3) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/message.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('ESLint')\n                            -&gt;semanticVersion('8.1.0')\n                            -&gt;informationUri('https://eslint.org')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('no-unused-vars')\n                                    -&gt;shortDescription('disallow unused variables')\n                                    -&gt;helpUri('https://eslint.org/docs/rules/no-unused-vars')\n                                    -&gt;setProperties([\n                                        'category' =&gt; 'Variables',\n                                    ])\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text(\"'x' is assigned a value but never used.\")\n                    )\n                    -&gt;ruleId('no-unused-vars')\n                    -&gt;ruleIndex(0)\n                    -&gt;level('error')\n            )\n            -&gt;setProperties([])\n    )\n;\n</code></pre>"},{"location":"reference/message/#formatted-example","title":"Formatted Example","text":"sarif.json Simple API Fluent Builder API <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php message/formatted docs/assets/sarif 192</code></p> docs/assets/sarif/message/formatted.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Variable '{0}' is uninitialized.\",\n                        \"arguments\": [\n                            \"pBuffer\"\n                        ]\n                    },\n                    \"ruleId\": \"CA2101\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/message/formatted.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"Variable '{0}' is uninitialized.\");\n$message-&gt;addArguments(['pBuffer']);\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CA2101');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/message/formatted.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 3) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/message.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text(\"Variable '{0}' is uninitialized.\")\n                            -&gt;addArgument('pBuffer')\n                    )\n                    -&gt;ruleId('CA2101')\n            )\n            -&gt;setProperties([])\n    )\n;\n</code></pre>"},{"location":"reference/message/#embedded-links-example","title":"Embedded links Example","text":"sarif.json Simple API Fluent Builder API <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php message/embeddedLinks docs/assets/sarif 192</code></p> docs/assets/sarif/message/embeddedLinks.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Tainted data was used. The data came from [here](3).\"\n                    },\n                    \"ruleId\": \"TNT0001\",\n                    \"relatedLocations\": [\n                        {\n                            \"id\": 3,\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"file:///C:/code/input.c\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 25,\n                                    \"startColumn\": 19\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/message/embeddedLinks.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText('Tainted data was used. The data came from [here](3).');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('TNT0001');\n$location = new Location();\n$location-&gt;setId(3);\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('file:///C:/code/input.c');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(25);\n$region-&gt;setStartColumn(19);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$result-&gt;addRelatedLocations([$location]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/message/embeddedLinks.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 3) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/message.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Tainted data was used. The data came from [here](3).')\n                    )\n                    -&gt;ruleId('TNT0001')\n                    -&gt;addRelatedLocation(\n                        $factory-&gt;location()\n                            -&gt;id(3)\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('file:///C:/code/input.c')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(25)\n                                            -&gt;startColumn(19)\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/message/#string-lookup-example","title":"String lookup Example","text":"sarif.json Simple API Fluent Builder API <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php message/stringLookup docs/assets/sarif 192</code></p> docs/assets/sarif/message/stringLookup.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CS0001\",\n                            \"messageStrings\": {\n                                \"default\": {\n                                    \"text\": \"This is the message text. It might be very long.\"\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"id\": \"default\"\n                    },\n                    \"ruleId\": \"CS0001\",\n                    \"ruleIndex\": 0\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/message/stringLookup.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('CS0001');\n$default = new MultiformatMessageString();\n$default-&gt;setText('This is the message text. It might be very long.');\n$rule-&gt;addMessageStrings([\n    'default' =&gt; $default,\n]);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\n    'A message object can directly contain message strings in its text and markdown properties.'\n    . ' It can also indirectly refer to message strings through its id property.'\n);\n\n$result = new Result();\n$result-&gt;setRuleId('CS0001');\n$result-&gt;setRuleIndex(0);\n$message = new Message();\n$message-&gt;setId('default');\n$result-&gt;setMessage($message);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/message/stringLookup.php<pre><code>&lt;?php\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 3) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/message.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CS0001')\n                                    -&gt;addMessageString('default', 'This is the message text. It might be very long.')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;id('default')\n                    )\n                    -&gt;ruleId('CS0001')\n                    -&gt;ruleIndex(0)\n            )\n    )\n;\n</code></pre>"},{"location":"reference/node/","title":"Node","text":""},{"location":"reference/node/#node-object","title":"node object","text":"<p>A <code>node</code> object represents a node in the graph represented by the containing graph object, which we refer to as theGraph.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php graph docs/assets/sarif 192</code></p> docs/assets/sarif/graph.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on this graph\"\n                    },\n                    \"graphs\": [\n                        {\n                            \"nodes\": [\n                                {\n                                    \"id\": \"n2\"\n                                },\n                                {\n                                    \"id\": \"n3\"\n                                },\n                                {\n                                    \"id\": \"n4\"\n                                },\n                                {\n                                    \"id\": \"n1\",\n                                    \"children\": [\n                                        {\n                                            \"id\": \"n3\"\n                                        }\n                                    ]\n                                }\n                            ],\n                            \"edges\": [\n                                {\n                                    \"id\": \"e1\",\n                                    \"sourceNodeId\": \"n3\",\n                                    \"targetNodeId\": \"n4\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Edge;\nuse Bartlett\\Sarif\\Definition\\Graph;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Node;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$nodes = [];\nforeach ([2 =&gt; 'n2', 3 =&gt; 'n3', 4 =&gt; 'n4', 1 =&gt; 'n1'] as $idx =&gt; $nodeId) {\n    $node = new Node();\n    $node-&gt;setId($nodeId);\n    $nodes[$idx] = $node;\n}\n$nodes[1]-&gt;addChildren([$nodes[3]]);\n\n$edges = [];\n$edges[1] = new Edge();\n$edges[1]-&gt;setId('e1');\n$edges[1]-&gt;setSourceNodeId('n3');\n$edges[1]-&gt;setTargetNodeId('n4');\n\n$graph = new Graph();\n$graph-&gt;addNodes($nodes);\n$graph-&gt;addEdges($edges);\n\n$message = new Message();\n$message-&gt;setText('Have a look on this graph');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addGraphs([$graph]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/graph.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/graph.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Have a look on this graph')\n                    )\n                    -&gt;addGraph(\n                        $factory-&gt;graph()\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n2')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n3')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n4')\n                            )\n                            -&gt;addNode(\n                                $factory-&gt;node()\n                                    -&gt;id('n1')\n                                    -&gt;addChildren(\n                                        $factory-&gt;node()\n                                            -&gt;id('n3')\n                                    )\n                            )\n                            -&gt;addEdge(\n                                $factory-&gt;edge()\n                                    -&gt;id('e1')\n                                    -&gt;sourceNodeId('n3')\n                                    -&gt;targetNodeId('n4')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/notification/","title":"Notification","text":""},{"location":"reference/notification/#notification-object","title":"notification object","text":"<p>A <code>notification</code> object describes a condition encountered during the execution of an analysis tool which is relevant to the operation of the tool itself, as opposed to being relevant to an artifact being analyzed by the tool. Conditions relevant to artifacts being analyzed by a tool are represented by <code>result</code> objects.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptorReference docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptorReference.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor();\n$ruleV1-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('First version of rule.');\n$ruleV1-&gt;setShortDescription($desc);\n\n$ruleV2 = new ReportingDescriptor();\n$ruleV2-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Second version of rule.');\n$ruleV2-&gt;setShortDescription($desc);\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\");\n\n$notification = new Notification();\n$notification-&gt;setMessage($message);\n$associatedRule = new ReportingDescriptorReference();\n$associatedRule-&gt;setIndex(0);\n$associatedRule-&gt;setId('C2001');\n$notification-&gt;setAssociatedRule($associatedRule);\n$descriptor = new ReportingDescriptorReference();\n$descriptor-&gt;setIndex(1);\n$descriptor-&gt;setId('CTN9999');\n$notification-&gt;setDescriptor($descriptor);\n$notification-&gt;setLevel('error');\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptorReference.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('First version of rule.')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('Second version of rule.')\n                            )\n                    )\n            )\n            -&gt;addInvocation(\n                $factory-&gt;invocation()\n                    -&gt;executionSuccessful(true)\n                    -&gt;addToolExecutionNotification(\n                        $factory-&gt;notification()\n                            -&gt;message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\")\n                            -&gt;level('error')\n                            -&gt;descriptor(\n                                $factory-&gt;descriptor()\n                                    -&gt;index(1)\n                                    -&gt;id('CTN9999')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CTN9999')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/physicalLocation/","title":"physicalLocation","text":""},{"location":"reference/physicalLocation/#physicallocation-object","title":"physicalLocation object","text":"<p>A <code>physicalLocation</code> object represents the physical location where a result was detected. A physical location specifies a reference to an artifact together with a region within that artifact.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php physicalLocation docs/assets/sarif 192</code></p> docs/assets/sarif/physicalLocation.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Identify a physical location where a result was detected.\"\n                    },\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"ui/window.c\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 42\n                                }\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/physicalLocation.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n\n$message = new Message();\n$message-&gt;setText('Identify a physical location where a result was detected.');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$location = new Location();\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(42);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$result-&gt;addLocations([$location]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/physicalLocation.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/physicalLocation.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Identify a physical location where a result was detected.')\n                    )\n                    -&gt;addLocation(\n                        $factory-&gt;location()\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('ui/window.c')\n                                            -&gt;uriBaseId('SRCROOT')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(42)\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/rectangle/","title":"Rectangle","text":""},{"location":"reference/rectangle/#rectangle-object","title":"rectangle object","text":"<p>A <code>rectangle</code> object specifies a rectangular area within an image. When a SARIF viewer displays an image, it MAY indicate the presence of these areas, for example, by highlighting them or surrounding them with a border.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php rectangle docs/assets/sarif 192</code></p> docs/assets/sarif/rectangle.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Have a look on screen shot provided\"\n                    },\n                    \"attachments\": [\n                        {\n                            \"artifactLocation\": {\n                                \"uri\": \"file:///C:/ScanOutput/image001.png\"\n                            },\n                            \"description\": {\n                                \"text\": \"Screen shot\"\n                            },\n                            \"rectangles\": [\n                                {\n                                    \"top\": 80,\n                                    \"left\": 10,\n                                    \"bottom\": 5,\n                                    \"right\": 90\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/rectangle.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Attachment;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Rectangle;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$desc = new Message();\n$desc-&gt;setText('Screen shot');\n\n$attachment = new Attachment();\n$attachment-&gt;setDescription($desc);\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('file:///C:/ScanOutput/image001.png');\n$attachment-&gt;setArtifactLocation($artifactLocation);\n$rectangle = new Rectangle();\n$rectangle-&gt;setTop(80);\n$rectangle-&gt;setLeft(10);\n$rectangle-&gt;setBottom(5);\n$rectangle-&gt;setRight(90);\n$attachment-&gt;addRectangles([$rectangle]);\n\n$message = new Message();\n$message-&gt;setText('Have a look on screen shot provided');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addAttachments([$attachment]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/rectangle.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/rectangle.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Have a look on screen shot provided')\n                    )\n                    -&gt;addAttachment(\n                        $factory-&gt;attachment()\n                            -&gt;artifactLocation(\n                                $factory-&gt;artifactLocation()\n                                    -&gt;uri('file:///C:/ScanOutput/image001.png')\n                            )\n                            -&gt;description('Screen shot')\n                            -&gt;addRectangle(\n                                $factory-&gt;rectangle()\n                                    -&gt;top(80)\n                                    -&gt;left(10)\n                                    -&gt;bottom(5)\n                                    -&gt;right(90)\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/replacement/","title":"Replacement","text":""},{"location":"reference/replacement/#replacement-object","title":"replacement object","text":"<p>A <code>replacement</code> object represents the replacement of a single region of an artifact.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php fix docs/assets/sarif 192</code></p> docs/assets/sarif/fix.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"fixes\": [\n                        {\n                            \"artifactChanges\": [\n                                {\n                                    \"artifactLocation\": {\n                                        \"uri\": \"src/a.c\"\n                                    },\n                                    \"replacements\": [\n                                        {\n                                            \"deletedRegion\": {\n                                                \"startLine\": 1,\n                                                \"startColumn\": 1,\n                                                \"endLine\": 1\n                                            },\n                                            \"insertedContent\": {\n                                                \"text\": \"// \"\n                                            }\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactChange;\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Fix;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Replacement;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('src/a.c');\n\n$replacement = new Replacement();\n$region = new Region();\n$region-&gt;setStartLine(1);\n$region-&gt;setEndLine(1);\n$region-&gt;setStartColumn(1);\n$replacement-&gt;setDeletedRegion($region);\n$insertedContent = new ArtifactContent();\n$insertedContent-&gt;setText('// ');\n$replacement-&gt;setInsertedContent($insertedContent);\n\n$artifactChange = new ArtifactChange();\n$artifactChange-&gt;setArtifactLocation($artifactLocation);\n$artifactChange-&gt;addReplacements([$replacement]);\n\n$fix = new Fix();\n$fix-&gt;addArtifactChanges([$artifactChange]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CA1001');\n$result-&gt;addFixes([$fix]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/fix.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1001')\n                    -&gt;addFix(\n                        $factory-&gt;fix()\n                            -&gt;addArtifactChange(\n                                $factory-&gt;artifactChange()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('src/a.c')\n                                    )\n                                    -&gt;addReplacement(\n                                        $factory-&gt;replacement()\n                                            -&gt;deletedRegion(\n                                                $factory-&gt;region()\n                                                    -&gt;startLine(1)\n                                                    -&gt;startColumn(1)\n                                                    -&gt;endLine(1)\n                                            )\n                                            -&gt;insertedContent(\n                                                $factory-&gt;artifactContent()\n                                                    -&gt;text('// ')\n                                            )\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/reportingConfiguration/","title":"reportingConfiguration","text":""},{"location":"reference/reportingConfiguration/#reportingconfiguration-object","title":"reportingConfiguration object","text":"<p>A <code>reportingConfiguration</code> object contains the information in a <code>reportingDescriptor</code> that a SARIF producer can modify at runtime, before executing its scan.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingConfiguration docs/assets/sarif 192</code></p> docs/assets/sarif/reportingConfiguration.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"SA2707\",\n                            \"name\": \"LimitSourceLineLength\",\n                            \"shortDescription\": {\n                                \"text\": \"Limit source line length for readability.\"\n                            },\n                            \"defaultConfiguration\": {\n                                \"enabled\": true,\n                                \"level\": \"warning\",\n                                \"rank\": -1,\n                                \"parameters\": {\n                                    \"maxLength\": 120\n                                }\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/reportingConfiguration.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\ReportingConfiguration;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('SA2707');\n$rule-&gt;setName('LimitSourceLineLength');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Limit source line length for readability.');\n$rule-&gt;setShortDescription($desc);\n$reportingConf = new ReportingConfiguration();\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('maxLength', 120);\n$reportingConf-&gt;setParameters($propertyBag);\n$rule-&gt;setDefaultConfiguration($reportingConf);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingConfiguration.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingConfiguration.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('SA2707')\n                                    -&gt;name('LimitSourceLineLength')\n                                    -&gt;shortDescription('Limit source line length for readability.')\n                                    -&gt;defaultConfiguration(\n                                        $factory-&gt;configuration()\n                                            -&gt;enabled(true)\n                                            -&gt;level('warning')\n                                            -&gt;rank(-1)\n                                            -&gt;parameters([\n                                                'maxLength' =&gt; 120,\n                                            ])\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/reportingDescriptor/","title":"reportingDescriptor","text":""},{"location":"reference/reportingDescriptor/#reportingdescriptor-object","title":"reportingDescriptor object","text":"<p>A <code>reportingDescriptor</code> object contains information that describes a \"reporting item\" generated by a tool.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptor docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptor.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1001\",\n                            \"deprecatedIds\": [\n                                \"CA1000\"\n                            ]\n                        },\n                        {\n                            \"id\": \"CA1002\",\n                            \"deprecatedIds\": [\n                                \"CA1000\"\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1001\",\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\"\n                        }\n                    ],\n                    \"baselineState\": \"unchanged\"\n                },\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CA1002\",\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\"\n                        }\n                    ],\n                    \"baselineState\": \"updated\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptor.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Suppression;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule1 = new ReportingDescriptor();\n$rule1-&gt;setId('CA1001');\n$rule1-&gt;addDeprecatedIds(['CA1000']);\n$rule2 = new ReportingDescriptor();\n$rule2-&gt;setId('CA1002');\n$rule2-&gt;addDeprecatedIds(['CA1000']);\n$driver-&gt;addRules([$rule1, $rule2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$results = [];\n$results[0] = new Result();\n$results[0]-&gt;setMessage($message);\n$results[0]-&gt;setRuleId('CA1001');\n$results[0]-&gt;setBaselineState('unchanged');\n$suppression = new Suppression();\n$suppression-&gt;setKind('inSource');\n$results[0]-&gt;addSuppressions([$suppression]);\n\n$results[1] = new Result();\n$results[1]-&gt;setMessage($message);\n$results[1]-&gt;setRuleId('CA1002');\n$results[1]-&gt;setBaselineState('updated');\n$suppression = new Suppression();\n$suppression-&gt;setKind('inSource');\n$results[1]-&gt;addSuppressions([$suppression]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults($results);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptor.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptor.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA1001')\n                                    -&gt;deprecatedIds('CA1000')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA1002')\n                                    -&gt;deprecatedIds('CA1000')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1001')\n                    -&gt;addSuppression(\n                        $factory-&gt;suppression()\n                            -&gt;kind('inSource')\n                    )\n                    -&gt;baselineState('unchanged')\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CA1002')\n                    -&gt;addSuppression(\n                        $factory-&gt;suppression()\n                            -&gt;kind('inSource')\n                    )\n                    -&gt;baselineState('updated')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/reportingDescriptorReference/","title":"reportingDescriptorReference","text":""},{"location":"reference/reportingDescriptorReference/#reportingdescriptorreference-object","title":"reportingDescriptorReference object","text":"<p>A <code>reportingDescriptorReference</code> object identifies a particular <code>reportingDescriptor</code> object, which we refer to as theDescriptor, among all <code>reportingDescriptor</code> objects defined by theTool, including those defined by theTool.driver and theTool.extensions.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptorReference docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptorReference.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"First version of rule.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CTN9999\",\n                            \"shortDescription\": {\n                                \"text\": \"Second version of rule.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"invocations\": [\n                {\n                    \"executionSuccessful\": true,\n                    \"toolExecutionNotifications\": [\n                        {\n                            \"message\": {\n                                \"text\": \"Exception evaluating rule 'C2001'. Rule configuration is missing.\"\n                            },\n                            \"level\": \"error\",\n                            \"descriptor\": {\n                                \"index\": 1,\n                                \"id\": \"CTN9999\"\n                            }\n                        }\n                    ]\n                }\n            ],\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"...\"\n                    },\n                    \"ruleId\": \"CTN9999\"\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Notification;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$ruleV1 = new ReportingDescriptor();\n$ruleV1-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('First version of rule.');\n$ruleV1-&gt;setShortDescription($desc);\n\n$ruleV2 = new ReportingDescriptor();\n$ruleV2-&gt;setId('CTN9999');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Second version of rule.');\n$ruleV2-&gt;setShortDescription($desc);\n\n$driver-&gt;addRules([$ruleV1, $ruleV2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\");\n\n$notification = new Notification();\n$notification-&gt;setMessage($message);\n$associatedRule = new ReportingDescriptorReference();\n$associatedRule-&gt;setIndex(0);\n$associatedRule-&gt;setId('C2001');\n$notification-&gt;setAssociatedRule($associatedRule);\n$descriptor = new ReportingDescriptorReference();\n$descriptor-&gt;setIndex(1);\n$descriptor-&gt;setId('CTN9999');\n$notification-&gt;setDescriptor($descriptor);\n$notification-&gt;setLevel('error');\n$invocation = new Invocation();\n$invocation-&gt;setExecutionSuccessful(true);\n$invocation-&gt;addToolExecutionNotifications([$notification]);\n\n$message = new Message();\n$message-&gt;setText('...');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('CTN9999');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n$run-&gt;addInvocations([$invocation]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptorReference.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptorReference.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('First version of rule.')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CTN9999')\n                                    -&gt;shortDescription('Second version of rule.')\n                            )\n                    )\n            )\n            -&gt;addInvocation(\n                $factory-&gt;invocation()\n                    -&gt;executionSuccessful(true)\n                    -&gt;addToolExecutionNotification(\n                        $factory-&gt;notification()\n                            -&gt;message(\"Exception evaluating rule 'C2001'. Rule configuration is missing.\")\n                            -&gt;level('error')\n                            -&gt;descriptor(\n                                $factory-&gt;descriptor()\n                                    -&gt;index(1)\n                                    -&gt;id('CTN9999')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('...')\n                    )\n                    -&gt;ruleId('CTN9999')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/reportingDescriptorRelationship/","title":"reportingDescriptorRelationship","text":""},{"location":"reference/reportingDescriptorRelationship/#reportingdescriptorrelationship-object","title":"reportingDescriptorRelationship object","text":"<p>A <code>reportingDescriptorRelationship</code> object specifies one or more directed relationships from one <code>reportingDescriptor</code> object, which we refer to as theSource, to another one, which we refer to as theTarget.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptorRelationship docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptorRelationship.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1000\",\n                            \"relationships\": [\n                                {\n                                    \"target\": {\n                                        \"index\": 0,\n                                        \"id\": \"327\",\n                                        \"guid\": \"33333333-0000-1111-8888-111111111111\",\n                                        \"toolComponent\": {\n                                            \"name\": \"CWE\",\n                                            \"guid\": \"33333333-0000-1111-8888-000000000000\"\n                                        }\n                                    },\n                                    \"kinds\": [\n                                        \"superset\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptorRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorRelationship;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\ToolComponentReference;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('CA1000');\n\n$target = new ReportingDescriptorReference();\n$target-&gt;setIndex(0);\n$target-&gt;setId('327');\n$target-&gt;setGuid('33333333-0000-1111-8888-111111111111');\n$toolComponent = new ToolComponentReference();\n$toolComponent-&gt;setName('CWE');\n$toolComponent-&gt;setGuid('33333333-0000-1111-8888-000000000000');\n$target-&gt;setToolComponent($toolComponent);\n\n$relationship = new ReportingDescriptorRelationship();\n$relationship-&gt;setTarget($target);\n$relationship-&gt;addKinds(['superset']);\n$rule-&gt;addRelationships([$relationship]);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptorRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptorRelationship.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA1000')\n                                    -&gt;addRelationship(\n                                        $factory-&gt;relationship()\n                                            -&gt;target(\n                                                $factory-&gt;descriptorReference()\n                                                    -&gt;index(0)\n                                                    -&gt;id('327')\n                                                    -&gt;guid('33333333-0000-1111-8888-111111111111')\n                                                    -&gt;toolComponent(\n                                                        $factory-&gt;toolComponent()\n                                                            -&gt;name('CWE')\n                                                            -&gt;guid('33333333-0000-1111-8888-000000000000')\n                                                    )\n                                            )\n                                            -&gt;addKind('superset')\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/result/","title":"Result","text":""},{"location":"reference/result/#result-object","title":"result object","text":"<p>A <code>result</code> object describes a single result detected by an analysis tool.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php result docs/assets/sarif 192</code></p> docs/assets/sarif/result.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA2101\",\n                            \"shortDescription\": {\n                                \"text\": \"Specify marshaling for P/Invoke string arguments.\"\n                            }\n                        },\n                        {\n                            \"id\": \"CA5350\",\n                            \"shortDescription\": {\n                                \"text\": \"Do not use weak cryptographic algorithms.\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Result on rule 0\"\n                    },\n                    \"ruleId\": \"CA2101\",\n                    \"ruleIndex\": 0\n                },\n                {\n                    \"message\": {\n                        \"text\": \"Result on rule 1\"\n                    },\n                    \"ruleId\": \"CA5350/md5\",\n                    \"ruleIndex\": 1\n                },\n                {\n                    \"message\": {\n                        \"text\": \"Another result on rule 1\"\n                    },\n                    \"ruleId\": \"CA5350/sha-1\",\n                    \"ruleIndex\": 1\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/result.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule1 = new ReportingDescriptor();\n$rule1-&gt;setId('CA2101');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Specify marshaling for P/Invoke string arguments.');\n$rule1-&gt;setShortDescription($desc);\n\n$rule2 = new ReportingDescriptor();\n$rule2-&gt;setId('CA5350');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('Do not use weak cryptographic algorithms.');\n$rule2-&gt;setShortDescription($desc);\n\n$driver-&gt;addRules([$rule1, $rule2]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$message = new Message();\n$message-&gt;setText('Result on rule 0');\n\n$result1 = new Result();\n$result1-&gt;setMessage($message);\n$result1-&gt;setRuleId('CA2101');\n$result1-&gt;setRuleIndex(0);\n\n$message = new Message();\n$message-&gt;setText('Result on rule 1');\n\n$result2 = new Result();\n$result2-&gt;setMessage($message);\n$result2-&gt;setRuleId('CA5350/md5');\n$result2-&gt;setRuleIndex(1);\n\n$message = new Message();\n$message-&gt;setText('Another result on rule 1');\n\n$result3 = new Result();\n$result3-&gt;setMessage($message);\n$result3-&gt;setRuleId('CA5350/sha-1');\n$result3-&gt;setRuleIndex(1);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result1, $result2, $result3]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/result.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA2101')\n                                    -&gt;shortDescription('Specify marshaling for P/Invoke string arguments.')\n                            )\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA5350')\n                                    -&gt;shortDescription('Do not use weak cryptographic algorithms.')\n                            )\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Result on rule 0')\n                    )\n                    -&gt;ruleId('CA2101')\n                    -&gt;ruleIndex(0)\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Result on rule 1')\n                    )\n                    -&gt;ruleId('CA5350/md5')\n                    -&gt;ruleIndex(1)\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Another result on rule 1')\n                    )\n                    -&gt;ruleId('CA5350/sha-1')\n                    -&gt;ruleIndex(1)\n            )\n    )\n;\n</code></pre>"},{"location":"reference/resultProvenance/","title":"resultProvenance","text":""},{"location":"reference/resultProvenance/#resultprovenance-object","title":"resultProvenance object","text":"<p>A <code>resultProvenance</code> object contains information about the how and when theResult was detected.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php resultProvenance docs/assets/sarif 192</code></p> docs/assets/sarif/resultProvenance.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https://github.com/microsoft/sarif-tutorials/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Assertions are unreliable.\"\n                    },\n                    \"ruleId\": \"Assertions\",\n                    \"provenance\": {\n                        \"conversionSources\": [\n                            {\n                                \"artifactLocation\": {\n                                    \"uri\": \"CodeScanner.log\",\n                                    \"uriBaseId\": \"LOGSROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 3,\n                                    \"startColumn\": 3,\n                                    \"endLine\": 12,\n                                    \"endColumn\": 13,\n                                    \"snippet\": {\n                                        \"text\": \"&lt;problem&gt;...&lt;/problem&gt;\"\n                                    }\n                                }\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/resultProvenance.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactContent;\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\ResultProvenance;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$provenance = new ResultProvenance();\n$fromSources = [];\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('CodeScanner.log');\n$artifactLocation-&gt;setUriBaseId('LOGSROOT');\n$fromSources[0] = new PhysicalLocation();\n$fromSources[0]-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(3);\n$region-&gt;setEndLine(12);\n$region-&gt;setStartColumn(3);\n$region-&gt;setEndColumn(13);\n$snippet = new ArtifactContent();\n$snippet-&gt;setText('&lt;problem&gt;...&lt;/problem&gt;');\n$region-&gt;setSnippet($snippet);\n$fromSources[0]-&gt;setRegion($region);\n\n$provenance-&gt;addConversionSources($fromSources);\n\n$message = new Message();\n$message-&gt;setText('Assertions are unreliable.');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;setRuleId('Assertions');\n$result-&gt;setProvenance($provenance);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/resultProvenance.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/resultProvenance.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('SarifSamples')\n                            -&gt;version('1.0')\n                            -&gt;informationUri('https://github.com/microsoft/sarif-tutorials/')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Assertions are unreliable.')\n                    )\n                    -&gt;ruleId('Assertions')\n                    -&gt;provenance(\n                        $factory-&gt;resultProvenance()\n                            -&gt;addConversionSource(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('CodeScanner.log')\n                                            -&gt;uriBaseId('LOGSROOT')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(3)\n                                            -&gt;startColumn(3)\n                                            -&gt;endLine(12)\n                                            -&gt;endColumn(13)\n                                            -&gt;snippet(\n                                                $factory-&gt;artifactContent()\n                                                    -&gt;text('&lt;problem&gt;...&lt;/problem&gt;')\n                                            )\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/run/","title":"Run","text":""},{"location":"reference/run/#run-object","title":"run object","text":"<p>A <code>run</code> object describes a single run of an analysis tool and contains the output of that run.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php run docs/assets/sarif 192</code></p> docs/assets/sarif/run.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https://psalm.de\"\n                }\n            },\n            \"properties\": {\n                \"stableId\": \"Nightly static analysis run\"\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/run.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\PropertyBag;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$propertyBag = new PropertyBag();\n$propertyBag-&gt;addProperty('stableId', 'Nightly static analysis run');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;setProperties($propertyBag);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/run.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/run.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('Psalm')\n                            -&gt;version('4.x-dev')\n                            -&gt;informationUri('https://psalm.de')\n                    )\n            )\n            -&gt;setProperties([\n                'stableId' =&gt; 'Nightly static analysis run',\n            ])\n    )\n;\n</code></pre>"},{"location":"reference/runAutomationDetails/","title":"runAutomationDetails","text":""},{"location":"reference/runAutomationDetails/#runautomationdetails-object","title":"runAutomationDetails object","text":"<p>A <code>runAutomationDetails</code> object contains information that specifies theRun\u2019s identity and role within an engineering system.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php runAutomationDetails docs/assets/sarif 192</code></p> docs/assets/sarif/runAutomationDetails.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"automationDetails\": {\n                \"description\": {\n                    \"text\": \"This is the {0} nightly run of the Credential Scanner tool on all product binaries in the '{1}' branch of the '{2}' repo. The scanned binaries are architecture '{3}' and build type '{4}'.\",\n                    \"arguments\": [\n                        \"October 10, 2018\",\n                        \"master\",\n                        \"sarif-sdk\",\n                        \"x86\",\n                        \"debug\"\n                    ]\n                },\n                \"id\": \"Nightly CredScan run for sarif-sdk/master/x86/debug/2018-10-05\",\n                \"guid\": \"11111111-1111-1111-8888-111111111111\",\n                \"correlationGuid\": \"22222222-2222-1111-8888-222222222222\"\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/runAutomationDetails.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\RunAutomationDetails;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$automationDetails = new RunAutomationDetails();\n\n$text = \"This is the {0} nightly run of the Credential Scanner tool on\" .\n    \" all product binaries in the '{1}' branch of the '{2}' repo.\" .\n    \" The scanned binaries are architecture '{3}' and build type '{4}'.\";\n$description = new Message();\n$description-&gt;setText($text);\n$description-&gt;addArguments([\n    \"October 10, 2018\",\n    \"master\",\n    \"sarif-sdk\",\n    \"x86\",\n    \"debug\",\n]);\n$automationDetails-&gt;setDescription($description);\n$automationDetails-&gt;setId('Nightly CredScan run for sarif-sdk/master/x86/debug/2018-10-05');\n$automationDetails-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n$automationDetails-&gt;setCorrelationGuid('22222222-2222-1111-8888-222222222222');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;setAutomationDetails($automationDetails);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/runAutomationDetails.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/runAutomationDetails.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;automationDetails(\n                $factory-&gt;automationDetails()\n                    -&gt;description(\n                        \"This is the {0} nightly run of the Credential Scanner tool\" .\n                        \" on all product binaries in the '{1}' branch of the '{2}' repo.\" .\n                        \" The scanned binaries are architecture '{3}' and build type '{4}'.\",\n                        '',\n                        [\n                            \"October 10, 2018\",\n                            \"master\",\n                            \"sarif-sdk\",\n                            \"x86\",\n                            \"debug\",\n                        ]\n                    )\n                    -&gt;id('Nightly CredScan run for sarif-sdk/master/x86/debug/2018-10-05')\n                    -&gt;guid('11111111-1111-1111-8888-111111111111')\n                    -&gt;correlationGuid('22222222-2222-1111-8888-222222222222')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/sarifLog/","title":"sarifLog","text":""},{"location":"reference/sarifLog/#sariflog-object","title":"sarifLog object","text":"<p>A <code>sarifLog</code> object specifies the version of the file format and contains the output from one or more runs.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php sarifLog docs/assets/sarif 192</code></p> docs/assets/sarif/sarifLog.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": []\n}\n</code></pre> examples/sarifLog.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$log = new SarifLog();\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/sarifLog.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/result.md\n$spec = $factory-&gt;specification('2.1.0');\n</code></pre>"},{"location":"reference/specialLocations/","title":"specialLocations","text":""},{"location":"reference/specialLocations/#speciallocations-object","title":"specialLocations object","text":"<p>A <code>specialLocations</code> object defines locations of special significance to SARIF consumers.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php specialLocations docs/assets/sarif 192</code></p> docs/assets/sarif/specialLocations.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"originalUriBaseIds\": {\n                \"WEBHOST\": {\n                    \"uri\": \"http://www.example.com/\"\n                },\n                \"ROOT\": {\n                    \"uri\": \"file:///\"\n                },\n                \"HOME\": {\n                    \"uri\": \"home/user/\",\n                    \"uriBaseId\": \"ROOT\"\n                },\n                \"PACKAGE\": {\n                    \"uri\": \"mySoftware/\",\n                    \"uriBaseId\": \"HOME\"\n                },\n                \"SRC\": {\n                    \"uri\": \"src/\",\n                    \"uriBaseId\": \"PACKAGE\"\n                }\n            },\n            \"specialLocations\": {\n                \"displayBase\": {\n                    \"uriBaseId\": \"PACKAGE\"\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/specialLocations.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\SpecialLocations;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$webHost = new ArtifactLocation();\n$webHost-&gt;setUri('http://www.example.com/');\n\n$root = new ArtifactLocation();\n$root-&gt;setUri('file:///');\n\n$home = new ArtifactLocation();\n$home-&gt;setUri('home/user/');\n$home-&gt;setUriBaseId('ROOT');\n\n$package = new ArtifactLocation();\n$package-&gt;setUri('mySoftware/');\n$package-&gt;setUriBaseId('HOME');\n\n$src = new ArtifactLocation();\n$src-&gt;setUri('src/');\n$src-&gt;setUriBaseId('PACKAGE');\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addAdditionalProperties([\n    'WEBHOST' =&gt; $webHost,\n    'ROOT' =&gt; $root,\n    'HOME' =&gt; $home,\n    'PACKAGE' =&gt; $package,\n    'SRC' =&gt; $src,\n]);\n\n$specialLocations = new SpecialLocations();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('');\n$artifactLocation-&gt;setUriBaseId('PACKAGE');\n$specialLocations-&gt;setDisplayBase($artifactLocation);\n\n$run-&gt;setSpecialLocations($specialLocations);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/specialLocations.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/specialLocations.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addOriginalUriBaseId(\n                'WEBHOST',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('http://www.example.com/')\n            )\n            -&gt;addOriginalUriBaseId(\n                'ROOT',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('file:///')\n            )\n            -&gt;addOriginalUriBaseId(\n                'HOME',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('home/user/')\n                    -&gt;uriBaseId('ROOT')\n            )\n            -&gt;addOriginalUriBaseId(\n                'PACKAGE',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('mySoftware/')\n                    -&gt;uriBaseId('HOME')\n            )\n            -&gt;addOriginalUriBaseId(\n                'SRC',\n                $factory-&gt;artifactLocation()\n                    -&gt;uri('src/')\n                    -&gt;uriBaseId('PACKAGE')\n            )\n            -&gt;specialLocations(\n                $factory-&gt;specialLocations()\n                    -&gt;displayBase(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uriBaseId('PACKAGE')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/stack/","title":"Stack","text":""},{"location":"reference/stack/#stack-object","title":"stack object","text":"<p>A <code>stack</code> object describes a single call stack. A call stack is a sequence of nested function calls, each of which is referred to as a stack frame.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php stack docs/assets/sarif 192</code></p> docs/assets/sarif/stack.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https://github.com/microsoft/sarif-tutorials/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Uninitialized variable.\"\n                    },\n                    \"ruleId\": \"TUT1001\",\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"collections/list.h\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 15\n                                }\n                            },\n                            \"logicalLocations\": [\n                                {\n                                    \"fullyQualifiedName\": \"collections::list::add\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"stacks\": [\n                        {\n                            \"frames\": [\n                                {\n                                    \"location\": {\n                                        \"physicalLocation\": {\n                                            \"artifactLocation\": {\n                                                \"uri\": \"collections/list.h\",\n                                                \"uriBaseId\": \"SRCROOT\"\n                                            },\n                                            \"region\": {\n                                                \"startLine\": 110,\n                                                \"startColumn\": 15\n                                            }\n                                        },\n                                        \"logicalLocations\": [\n                                            {\n                                                \"fullyQualifiedName\": \"collections::list::add_core\"\n                                            }\n                                        ]\n                                    },\n                                    \"module\": \"platform\",\n                                    \"threadId\": 52,\n                                    \"parameters\": [\n                                        \"null\",\n                                        \"0\",\n                                        \"14\"\n                                    ]\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"Call stack resulting from usage of uninitialized variable.\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/stack.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Stack;\nuse Bartlett\\Sarif\\Definition\\StackFrame;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$frame = new StackFrame();\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(110);\n$region-&gt;setStartColumn(15);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add_core');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n\n$frame-&gt;setLocation($location);\n$frame-&gt;setModule('platform');\n$frame-&gt;setThreadId(52);\n$frame-&gt;addParameters(['null', '0', '14']);\n\n$message = new Message();\n$message-&gt;setText('Call stack resulting from usage of uninitialized variable.');\n\n$stack = new Stack();\n$stack-&gt;setMessage($message);\n$stack-&gt;addFrames([$frame]);\n\n$message = new Message();\n$message-&gt;setText('Uninitialized variable.');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addStacks([$stack]);\n$result-&gt;setRuleId('TUT1001');\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(15);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$result-&gt;addLocations([$location]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/stack.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/stack.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('SarifSamples')\n                            -&gt;version('1.0')\n                            -&gt;informationUri('https://github.com/microsoft/sarif-tutorials/')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Uninitialized variable.')\n                    )\n                    -&gt;ruleId('TUT1001')\n                    -&gt;addLocation(\n                        $factory-&gt;location()\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('collections/list.h')\n                                            -&gt;uriBaseId('SRCROOT')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(15)\n                                    )\n                            )\n                            -&gt;addLogicalLocation(\n                                $factory-&gt;logicalLocation()\n                                    -&gt;fullyQualifiedName('collections::list::add')\n                            )\n                    )\n                    -&gt;addStack(\n                        $factory-&gt;stack()\n                            -&gt;addFrame(\n                                $factory-&gt;stackFrame()\n                                    -&gt;location(\n                                        $factory-&gt;location()\n                                            -&gt;physicalLocation(\n                                                $factory-&gt;physicalLocation()\n                                                    -&gt;artifactLocation(\n                                                        $factory-&gt;artifactLocation()\n                                                            -&gt;uri('collections/list.h')\n                                                            -&gt;uriBaseId('SRCROOT')\n                                                    )\n                                                    -&gt;region(\n                                                        $factory-&gt;region()\n                                                            -&gt;startLine(110)\n                                                            -&gt;startColumn(15)\n                                                    )\n                                            )\n                                            -&gt;addLogicalLocation(\n                                                $factory-&gt;logicalLocation()\n                                                    -&gt;fullyQualifiedName('collections::list::add_core')\n                                            )\n                                    )\n                                    -&gt;module('platform')\n                                    -&gt;threadId(52)\n                                    -&gt;addParameter('null')\n                                    -&gt;addParameter('0')\n                                    -&gt;addParameter('14')\n                            )\n                            -&gt;message('Call stack resulting from usage of uninitialized variable.')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/stackFrame/","title":"stackFrame","text":""},{"location":"reference/stackFrame/#stackframe-object","title":"stackFrame object","text":"<p>A <code>stackFrame</code> object describes a single stack frame within a call stack.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php stack docs/assets/sarif 192</code></p> docs/assets/sarif/stack.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"SarifSamples\",\n                    \"version\": \"1.0\",\n                    \"informationUri\": \"https://github.com/microsoft/sarif-tutorials/\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Uninitialized variable.\"\n                    },\n                    \"ruleId\": \"TUT1001\",\n                    \"locations\": [\n                        {\n                            \"physicalLocation\": {\n                                \"artifactLocation\": {\n                                    \"uri\": \"collections/list.h\",\n                                    \"uriBaseId\": \"SRCROOT\"\n                                },\n                                \"region\": {\n                                    \"startLine\": 15\n                                }\n                            },\n                            \"logicalLocations\": [\n                                {\n                                    \"fullyQualifiedName\": \"collections::list::add\"\n                                }\n                            ]\n                        }\n                    ],\n                    \"stacks\": [\n                        {\n                            \"frames\": [\n                                {\n                                    \"location\": {\n                                        \"physicalLocation\": {\n                                            \"artifactLocation\": {\n                                                \"uri\": \"collections/list.h\",\n                                                \"uriBaseId\": \"SRCROOT\"\n                                            },\n                                            \"region\": {\n                                                \"startLine\": 110,\n                                                \"startColumn\": 15\n                                            }\n                                        },\n                                        \"logicalLocations\": [\n                                            {\n                                                \"fullyQualifiedName\": \"collections::list::add_core\"\n                                            }\n                                        ]\n                                    },\n                                    \"module\": \"platform\",\n                                    \"threadId\": 52,\n                                    \"parameters\": [\n                                        \"null\",\n                                        \"0\",\n                                        \"14\"\n                                    ]\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"Call stack resulting from usage of uninitialized variable.\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/stack.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\LogicalLocation;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Stack;\nuse Bartlett\\Sarif\\Definition\\StackFrame;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('SarifSamples');\n$driver-&gt;setInformationUri('https://github.com/microsoft/sarif-tutorials/');\n$driver-&gt;setVersion('1.0');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$frame = new StackFrame();\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(110);\n$region-&gt;setStartColumn(15);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add_core');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n\n$frame-&gt;setLocation($location);\n$frame-&gt;setModule('platform');\n$frame-&gt;setThreadId(52);\n$frame-&gt;addParameters(['null', '0', '14']);\n\n$message = new Message();\n$message-&gt;setText('Call stack resulting from usage of uninitialized variable.');\n\n$stack = new Stack();\n$stack-&gt;setMessage($message);\n$stack-&gt;addFrames([$frame]);\n\n$message = new Message();\n$message-&gt;setText('Uninitialized variable.');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addStacks([$stack]);\n$result-&gt;setRuleId('TUT1001');\n\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('collections/list.h');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(15);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$logicalLocation = new LogicalLocation();\n$logicalLocation-&gt;setFullyQualifiedName('collections::list::add');\n$location-&gt;addLogicalLocations([$logicalLocation]);\n$result-&gt;addLocations([$location]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/stack.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/stack.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('SarifSamples')\n                            -&gt;version('1.0')\n                            -&gt;informationUri('https://github.com/microsoft/sarif-tutorials/')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Uninitialized variable.')\n                    )\n                    -&gt;ruleId('TUT1001')\n                    -&gt;addLocation(\n                        $factory-&gt;location()\n                            -&gt;physicalLocation(\n                                $factory-&gt;physicalLocation()\n                                    -&gt;artifactLocation(\n                                        $factory-&gt;artifactLocation()\n                                            -&gt;uri('collections/list.h')\n                                            -&gt;uriBaseId('SRCROOT')\n                                    )\n                                    -&gt;region(\n                                        $factory-&gt;region()\n                                            -&gt;startLine(15)\n                                    )\n                            )\n                            -&gt;addLogicalLocation(\n                                $factory-&gt;logicalLocation()\n                                    -&gt;fullyQualifiedName('collections::list::add')\n                            )\n                    )\n                    -&gt;addStack(\n                        $factory-&gt;stack()\n                            -&gt;addFrame(\n                                $factory-&gt;stackFrame()\n                                    -&gt;location(\n                                        $factory-&gt;location()\n                                            -&gt;physicalLocation(\n                                                $factory-&gt;physicalLocation()\n                                                    -&gt;artifactLocation(\n                                                        $factory-&gt;artifactLocation()\n                                                            -&gt;uri('collections/list.h')\n                                                            -&gt;uriBaseId('SRCROOT')\n                                                    )\n                                                    -&gt;region(\n                                                        $factory-&gt;region()\n                                                            -&gt;startLine(110)\n                                                            -&gt;startColumn(15)\n                                                    )\n                                            )\n                                            -&gt;addLogicalLocation(\n                                                $factory-&gt;logicalLocation()\n                                                    -&gt;fullyQualifiedName('collections::list::add_core')\n                                            )\n                                    )\n                                    -&gt;module('platform')\n                                    -&gt;threadId(52)\n                                    -&gt;addParameter('null')\n                                    -&gt;addParameter('0')\n                                    -&gt;addParameter('14')\n                            )\n                            -&gt;message('Call stack resulting from usage of uninitialized variable.')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/suppression/","title":"Suppression","text":""},{"location":"reference/suppression/#suppression-object","title":"suppression object","text":"<p>A <code>suppression</code> object describes a request to suppress a result.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php suppression docs/assets/sarif 192</code></p> docs/assets/sarif/suppression.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"Psalm\",\n                    \"version\": \"4.x-dev\",\n                    \"informationUri\": \"https://psalm.de\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"Request to suppress a result\"\n                    },\n                    \"suppressions\": [\n                        {\n                            \"kind\": \"inSource\",\n                            \"guid\": \"11111111-1111-1111-8888-111111111111\",\n                            \"status\": \"underReview\",\n                            \"justification\": \"result outdated\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/suppression.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Suppression;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('Psalm');\n$driver-&gt;setInformationUri('https://psalm.de');\n$driver-&gt;setVersion('4.x-dev');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$suppression = new Suppression();\n$suppression-&gt;setKind('inSource');\n$suppression-&gt;setGuid('11111111-1111-1111-8888-111111111111');\n$suppression-&gt;setStatus('underReview');\n$suppression-&gt;setJustification('result outdated');\n\n$message = new Message();\n$message-&gt;setText('Request to suppress a result');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addSuppressions([$suppression]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/suppression.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/suppression.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('Psalm')\n                            -&gt;version('4.x-dev')\n                            -&gt;informationUri('https://psalm.de')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('Request to suppress a result')\n                    )\n                    -&gt;addSuppression(\n                        $factory-&gt;suppression()\n                            -&gt;kind('inSource')\n                            -&gt;guid('11111111-1111-1111-8888-111111111111')\n                            -&gt;status('underReview')\n                            -&gt;justification('result outdated')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/threadFlow/","title":"threadFlow","text":""},{"location":"reference/threadFlow/#threadflow-object","title":"threadFlow object","text":"<p>A <code>threadFlow</code> object is a sequence of code locations that specify a possible path through a single thread of execution such as an operating system thread or a fiber.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php codeFlow docs/assets/sarif 192</code></p> docs/assets/sarif/codeFlow.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(42);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('42');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('54');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('96');\n\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$message = new Message();\n$message-&gt;setText('A threadFlow object');\n\n$threadFlow = new ThreadFlow();\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage($message);\n$threadFlow-&gt;addLocations([$threadFlowLocation]);\n\n$message = new Message();\n$message-&gt;setText('A codeFlow object');\n\n$codeFlow = new CodeFlow();\n$codeFlow-&gt;setMessage($message);\n$codeFlow-&gt;addThreadFlows([$threadFlow]);\n\n$message = new Message();\n$message-&gt;setText('A result object');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/codeFlow.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A result object')\n                    )\n                    -&gt;addCodeFlow(\n                        $factory-&gt;codeFlow()\n                            -&gt;threadFlow(\n                                $factory-&gt;threadFlow()\n                                    -&gt;addLocation(\n                                        $factory-&gt;threadFlowLocation()\n                                            -&gt;location(\n                                                $factory-&gt;location()\n                                                    -&gt;physicalLocation(\n                                                        $factory-&gt;physicalLocation()\n                                                            -&gt;artifactLocation(\n                                                                $factory-&gt;artifactLocation()\n                                                                    -&gt;uri('ui/window.c')\n                                                                    -&gt;uriBaseId('SRCROOT')\n                                                            )\n                                                            -&gt;region(\n                                                                $factory-&gt;region()\n                                                                    -&gt;startLine(42)\n                                                            )\n                                                    )\n                                            )\n                                            -&gt;nestingLevel(0)\n                                            -&gt;executionOrder(2)\n                                            -&gt;addAdditionalProperty('x', '42')\n                                            -&gt;addAdditionalProperty('y', '54')\n                                            -&gt;addAdditionalProperty('x+y', '96')\n                                    )\n                                    -&gt;id('thread-123')\n                                    -&gt;message('A threadFlow object')\n                            )\n                            -&gt;message('A codeFlow object')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/threadFlowLocation/","title":"threadFlowLocation","text":""},{"location":"reference/threadFlowLocation/#threadflowlocation-object","title":"threadFlowLocation object","text":"<p>A <code>threadFlowLocation</code> object represents a location visited by an analysis tool in the course of simulating or monitoring the execution of a program.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php codeFlow docs/assets/sarif 192</code></p> docs/assets/sarif/codeFlow.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"results\": [\n                {\n                    \"message\": {\n                        \"text\": \"A result object\"\n                    },\n                    \"codeFlows\": [\n                        {\n                            \"threadFlows\": [\n                                {\n                                    \"locations\": [\n                                        {\n                                            \"location\": {\n                                                \"physicalLocation\": {\n                                                    \"artifactLocation\": {\n                                                        \"uri\": \"ui/window.c\",\n                                                        \"uriBaseId\": \"SRCROOT\"\n                                                    },\n                                                    \"region\": {\n                                                        \"startLine\": 42\n                                                    }\n                                                }\n                                            },\n                                            \"state\": {\n                                                \"x\": {\n                                                    \"text\": \"42\"\n                                                },\n                                                \"y\": {\n                                                    \"text\": \"54\"\n                                                },\n                                                \"x+y\": {\n                                                    \"text\": \"96\"\n                                                }\n                                            },\n                                            \"nestingLevel\": 0,\n                                            \"executionOrder\": 2\n                                        }\n                                    ],\n                                    \"id\": \"thread-123\",\n                                    \"message\": {\n                                        \"text\": \"A threadFlow object\"\n                                    }\n                                }\n                            ],\n                            \"message\": {\n                                \"text\": \"A codeFlow object\"\n                            }\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre> examples/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\CodeFlow;\nuse Bartlett\\Sarif\\Definition\\Location;\nuse Bartlett\\Sarif\\Definition\\Message;\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\PhysicalLocation;\nuse Bartlett\\Sarif\\Definition\\Region;\nuse Bartlett\\Sarif\\Definition\\Result;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\ThreadFlow;\nuse Bartlett\\Sarif\\Definition\\ThreadFlowLocation;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$threadFlowLocation = new ThreadFlowLocation();\n$location = new Location();\n$artifactLocation = new ArtifactLocation();\n$artifactLocation-&gt;setUri('ui/window.c');\n$artifactLocation-&gt;setUriBaseId('SRCROOT');\n$physicalLocation = new PhysicalLocation();\n$physicalLocation-&gt;setArtifactLocation($artifactLocation);\n$region = new Region();\n$region-&gt;setStartLine(42);\n$physicalLocation-&gt;setRegion($region);\n$location-&gt;setPhysicalLocation($physicalLocation);\n$threadFlowLocation-&gt;setLocation($location);\n\n$x = new MultiformatMessageString();\n$x-&gt;setText('42');\n\n$y = new MultiformatMessageString();\n$y-&gt;setText('54');\n\n$xy = new MultiformatMessageString();\n$xy-&gt;setText('96');\n\n$threadFlowLocation-&gt;addAdditionalProperties([\n    'x' =&gt; $x,\n    'y' =&gt; $y,\n    'x+y' =&gt; $xy,\n]);\n$threadFlowLocation-&gt;setNestingLevel(0);\n$threadFlowLocation-&gt;setExecutionOrder(2);\n\n$message = new Message();\n$message-&gt;setText('A threadFlow object');\n\n$threadFlow = new ThreadFlow();\n$threadFlow-&gt;setId('thread-123');\n$threadFlow-&gt;setMessage($message);\n$threadFlow-&gt;addLocations([$threadFlowLocation]);\n\n$message = new Message();\n$message-&gt;setText('A codeFlow object');\n\n$codeFlow = new CodeFlow();\n$codeFlow-&gt;setMessage($message);\n$codeFlow-&gt;addThreadFlows([$threadFlow]);\n\n$message = new Message();\n$message-&gt;setText('A result object');\n\n$result = new Result();\n$result-&gt;setMessage($message);\n$result-&gt;addCodeFlows([$codeFlow]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addResults([$result]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/codeFlow.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/codeFlow.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addResult(\n                $factory-&gt;result()\n                    -&gt;message(\n                        $factory-&gt;message()\n                            -&gt;text('A result object')\n                    )\n                    -&gt;addCodeFlow(\n                        $factory-&gt;codeFlow()\n                            -&gt;threadFlow(\n                                $factory-&gt;threadFlow()\n                                    -&gt;addLocation(\n                                        $factory-&gt;threadFlowLocation()\n                                            -&gt;location(\n                                                $factory-&gt;location()\n                                                    -&gt;physicalLocation(\n                                                        $factory-&gt;physicalLocation()\n                                                            -&gt;artifactLocation(\n                                                                $factory-&gt;artifactLocation()\n                                                                    -&gt;uri('ui/window.c')\n                                                                    -&gt;uriBaseId('SRCROOT')\n                                                            )\n                                                            -&gt;region(\n                                                                $factory-&gt;region()\n                                                                    -&gt;startLine(42)\n                                                            )\n                                                    )\n                                            )\n                                            -&gt;nestingLevel(0)\n                                            -&gt;executionOrder(2)\n                                            -&gt;addAdditionalProperty('x', '42')\n                                            -&gt;addAdditionalProperty('y', '54')\n                                            -&gt;addAdditionalProperty('x+y', '96')\n                                    )\n                                    -&gt;id('thread-123')\n                                    -&gt;message('A threadFlow object')\n                            )\n                            -&gt;message('A codeFlow object')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/tool/","title":"Tool","text":""},{"location":"reference/tool/#tool-object","title":"tool object","text":"<p>A <code>tool</code> object describes the analysis tool or converter that was run.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php tool docs/assets/sarif 192</code></p> docs/assets/sarif/tool.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"fullName\": \"CodeScanner 1.1, Developer Preview (en-US)\",\n                    \"version\": \"1.1.2b12\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                },\n                \"extensions\": [\n                    {\n                        \"name\": \"CodeScanner Security Rules\",\n                        \"version\": \"3.1\"\n                    }\n                ]\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/tool.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setFullName('CodeScanner 1.1, Developer Preview (en-US)');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setVersion('1.1.2b12');\n\n$extension = new ToolComponent();\n$extension-&gt;setName('CodeScanner Security Rules');\n$extension-&gt;setVersion('3.1');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n$tool-&gt;addExtensions([$extension]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/tool.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/tool.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;fullName('CodeScanner 1.1, Developer Preview (en-US)')\n                            -&gt;version('1.1.2b12')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n                    -&gt;addExtension(\n                        $factory-&gt;extension()\n                            -&gt;name('CodeScanner Security Rules')\n                            -&gt;version('3.1')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/toolComponentReference/","title":"toolComponentReference","text":""},{"location":"reference/toolComponentReference/#toolcomponentreference-object","title":"toolComponentReference object","text":"<p>A <code>toolComponentReference</code> object identifies a particular <code>toolComponent</code> object, either theTool.driver or an element of theTool.extensions. We refer to the identified toolComponent object as theComponent.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php reportingDescriptorRelationship docs/assets/sarif 192</code></p> docs/assets/sarif/reportingDescriptorRelationship.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"rules\": [\n                        {\n                            \"id\": \"CA1000\",\n                            \"relationships\": [\n                                {\n                                    \"target\": {\n                                        \"index\": 0,\n                                        \"id\": \"327\",\n                                        \"guid\": \"33333333-0000-1111-8888-111111111111\",\n                                        \"toolComponent\": {\n                                            \"name\": \"CWE\",\n                                            \"guid\": \"33333333-0000-1111-8888-000000000000\"\n                                        }\n                                    },\n                                    \"kinds\": [\n                                        \"superset\"\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/reportingDescriptorRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptor;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorReference;\nuse Bartlett\\Sarif\\Definition\\ReportingDescriptorRelationship;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\ToolComponentReference;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$rule = new ReportingDescriptor();\n$rule-&gt;setId('CA1000');\n\n$target = new ReportingDescriptorReference();\n$target-&gt;setIndex(0);\n$target-&gt;setId('327');\n$target-&gt;setGuid('33333333-0000-1111-8888-111111111111');\n$toolComponent = new ToolComponentReference();\n$toolComponent-&gt;setName('CWE');\n$toolComponent-&gt;setGuid('33333333-0000-1111-8888-000000000000');\n$target-&gt;setToolComponent($toolComponent);\n\n$relationship = new ReportingDescriptorRelationship();\n$relationship-&gt;setTarget($target);\n$relationship-&gt;addKinds(['superset']);\n$rule-&gt;addRelationships([$relationship]);\n$driver-&gt;addRules([$rule]);\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/reportingDescriptorRelationship.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/reportingDescriptorRelationship.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;addRule(\n                                $factory-&gt;rule()\n                                    -&gt;id('CA1000')\n                                    -&gt;addRelationship(\n                                        $factory-&gt;relationship()\n                                            -&gt;target(\n                                                $factory-&gt;descriptorReference()\n                                                    -&gt;index(0)\n                                                    -&gt;id('327')\n                                                    -&gt;guid('33333333-0000-1111-8888-111111111111')\n                                                    -&gt;toolComponent(\n                                                        $factory-&gt;toolComponent()\n                                                            -&gt;name('CWE')\n                                                            -&gt;guid('33333333-0000-1111-8888-000000000000')\n                                                    )\n                                            )\n                                            -&gt;addKind('superset')\n                                    )\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/translationMetadata/","title":"translationMetadata","text":""},{"location":"reference/translationMetadata/#translationmetadata-object","title":"translationMetadata object","text":"<p>A <code>translationMetadata</code> object defines locations of special significance to SARIF consumers.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php translationMetadata docs/assets/sarif 192</code></p> docs/assets/sarif/translationMetadata.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"(fr-FR translation)\",\n                    \"fullName\": \"(fr-FR translation of translated component\\u2019s full name)\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\",\n                    \"language\": \"fr-FR\",\n                    \"translationMetadata\": {\n                        \"name\": \"CodeScanner translation for fr-FR\",\n                        \"fullName\": \"CodeScanner translation for fr-FR by Example Corp.\",\n                        \"shortDescription\": {\n                            \"text\": \"A good translation\"\n                        },\n                        \"fullDescription\": {\n                            \"text\": \"A good translation performed by native en-US speakers.\"\n                        }\n                    }\n                }\n            },\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/translationMetadata.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\MultiformatMessageString;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\TranslationMetadata;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n$driver-&gt;setLanguage('fr-FR');\n\n$translationMetadata = new TranslationMetadata();\n$translationMetadata-&gt;setName('CodeScanner translation for fr-FR');\n$translationMetadata-&gt;setFullName('CodeScanner translation for fr-FR by Example Corp.');\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('A good translation');\n$translationMetadata-&gt;setShortDescription($desc);\n$desc = new MultiformatMessageString();\n$desc-&gt;setText('A good translation performed by native en-US speakers.');\n$translationMetadata-&gt;setFullDescription($desc);\n$driver-&gt;setTranslationMetadata($translationMetadata);\n\n$driver-&gt;setName('(fr-FR translation)');\n$driver-&gt;setFullName('(fr-FR translation of translated component\u2019s full name)');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/translationMetadata.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/translationMetadata.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('(fr-FR translation)')\n                            -&gt;fullName('(fr-FR translation of translated component\u2019s full name)')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                            -&gt;language('fr-FR')\n                            -&gt;translationMetadata(\n                                $factory-&gt;translationMetadata()\n                                    -&gt;name('CodeScanner translation for fr-FR')\n                                    -&gt;fullName('CodeScanner translation for fr-FR by Example Corp.')\n                                    -&gt;shortDescription('A good translation')\n                                    -&gt;fullDescription('A good translation performed by native en-US speakers.')\n                            )\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/versionControlDetails/","title":"versionControlDetails","text":""},{"location":"reference/versionControlDetails/#versioncontroldetails-object","title":"versionControlDetails object","text":"<p>A <code>versionControlDetails</code> object specifies the information necessary to retrieve from a version control system (VCS) the correct revision of the files that were scanned during the run.</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php versionControlDetails docs/assets/sarif 192</code></p> docs/assets/sarif/versionControlDetails.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"AndroidStudio\",\n                    \"semanticVersion\": \"1.0.0-beta.1\",\n                    \"informationUri\": \"https://android-studion.dev\"\n                }\n            },\n            \"versionControlProvenance\": [\n                {\n                    \"repositoryUri\": \"https://github.com/example-corp/package\",\n                    \"revisionId\": \"b87c4e9\",\n                    \"mappedTo\": {\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                },\n                {\n                    \"repositoryUri\": \"https://github.com/example-corp/plugin1\",\n                    \"revisionId\": \"cafdac7\",\n                    \"mappedTo\": {\n                        \"uri\": \"plugin1\",\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                },\n                {\n                    \"repositoryUri\": \"https://github.com/example-corp/plugin2\",\n                    \"revisionId\": \"d0dc2c0\",\n                    \"mappedTo\": {\n                        \"uri\": \"plugin2\",\n                        \"uriBaseId\": \"PACKAGE_ROOT\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/versionControlDetails.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\ArtifactLocation;\nuse Bartlett\\Sarif\\Definition\\Conversion;\nuse Bartlett\\Sarif\\Definition\\Invocation;\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\VersionControlDetails;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('AndroidStudio');\n$driver-&gt;setInformationUri('https://android-studion.dev');\n$driver-&gt;setSemanticVersion('1.0.0-beta.1');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$package = new VersionControlDetails();\n$package-&gt;setRepositoryUri('https://github.com/example-corp/package');\n$package-&gt;setRevisionId('b87c4e9');\n$packageMappedTo = new ArtifactLocation();\n$packageMappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$package-&gt;setMappedTo($packageMappedTo);\n\n$plugin1 = new VersionControlDetails();\n$plugin1-&gt;setRepositoryUri('https://github.com/example-corp/plugin1');\n$plugin1-&gt;setRevisionId('cafdac7');\n$plugin1MappedTo = new ArtifactLocation();\n$plugin1MappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$plugin1MappedTo-&gt;setUri('plugin1');\n$plugin1-&gt;setMappedTo($plugin1MappedTo);\n\n$plugin2 = new VersionControlDetails();\n$plugin2-&gt;setRepositoryUri('https://github.com/example-corp/plugin2');\n$plugin2-&gt;setRevisionId('d0dc2c0');\n$plugin2MappedTo = new ArtifactLocation();\n$plugin2MappedTo-&gt;setUriBaseId('PACKAGE_ROOT');\n$plugin2MappedTo-&gt;setUri('plugin2');\n$plugin2-&gt;setMappedTo($plugin2MappedTo);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addVersionControlDetails([$package, $plugin1, $plugin2]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/versionControlDetails.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/versionControlDetails.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('AndroidStudio')\n                            -&gt;semanticVersion('1.0.0-beta.1')\n                            -&gt;informationUri('https://android-studion.dev')\n                    )\n            )\n            -&gt;addVersionControlProvenance(\n                $factory-&gt;versionControlDetails()\n                    -&gt;repositoryUri('https://github.com/example-corp/package')\n                    -&gt;revisionId('b87c4e9')\n                    -&gt;mappedTo(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uriBaseId('PACKAGE_ROOT')\n                    )\n            )\n            -&gt;addVersionControlProvenance(\n                $factory-&gt;versionControlDetails()\n                    -&gt;repositoryUri('https://github.com/example-corp/plugin1')\n                    -&gt;revisionId('cafdac7')\n                    -&gt;mappedTo(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('plugin1')\n                            -&gt;uriBaseId('PACKAGE_ROOT')\n                    )\n            )\n            -&gt;addVersionControlProvenance(\n                $factory-&gt;versionControlDetails()\n                    -&gt;repositoryUri('https://github.com/example-corp/plugin2')\n                    -&gt;revisionId('d0dc2c0')\n                    -&gt;mappedTo(\n                        $factory-&gt;artifactLocation()\n                            -&gt;uri('plugin2')\n                            -&gt;uriBaseId('PACKAGE_ROOT')\n                    )\n            )\n    )\n;\n</code></pre>"},{"location":"reference/webRequest/","title":"webRequest","text":""},{"location":"reference/webRequest/#webrequest-object","title":"webRequest object","text":"<p>A <code>webRequest</code> object describes an HTTP request (RFC7230).</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php webRequest docs/assets/sarif 192</code></p> docs/assets/sarif/webRequest.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"webRequests\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"target\": \"httpbin.org/bearer\",\n                    \"method\": \"GET\",\n                    \"headers\": {\n                        \"accept\": \"application/json\",\n                        \"Authorization\": \"none\"\n                    }\n                }\n            ],\n            \"webResponses\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"statusCode\": 401,\n                    \"reasonPhrase\": \"Error: UNAUTHORIZED\",\n                    \"headers\": {\n                        \"access-control-allow-credentials\": \"true\",\n                        \"access-control-allow-origin\": \"*\",\n                        \"connection\": \"keep-alive\",\n                        \"content-length\": \"0\",\n                        \"content-type\": \"text/html; charset=utf-8\",\n                        \"date\": \"Sun, 07 Nov 2021 08:59:53 GMT\",\n                        \"server\": \"gunicorn/19.9.0\",\n                        \"www-authenticate\": \"Bearer\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/webRequest.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\WebRequest;\nuse Bartlett\\Sarif\\Definition\\WebResponse;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$webRequest = new WebRequest();\n$webRequest-&gt;setProtocol('http');\n$webRequest-&gt;setVersion('1.1');\n$webRequest-&gt;setMethod('GET');\n$webRequest-&gt;setTarget('httpbin.org/bearer');\n$webRequest-&gt;addAdditionalPropertiesHeaders([\n    'accept' =&gt; 'application/json',\n    'Authorization' =&gt; 'none',\n]);\n\n$webResponse = new WebResponse();\n$webResponse-&gt;setProtocol('http');\n$webResponse-&gt;setVersion('1.1');\n$webResponse-&gt;setStatusCode(401);\n$webResponse-&gt;setReasonPhrase('Error: UNAUTHORIZED');\n$webResponse-&gt;addAdditionalProperties([\n    'access-control-allow-credentials' =&gt; 'true',\n    'access-control-allow-origin' =&gt; '*',\n    'connection' =&gt; 'keep-alive',\n    'content-length' =&gt; '0',\n    'content-type' =&gt; 'text/html; charset=utf-8',\n    'date' =&gt; 'Sun, 07 Nov 2021 08:59:53 GMT',\n    'server' =&gt; 'gunicorn/19.9.0',\n    'www-authenticate' =&gt; 'Bearer',\n]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addWebRequests([$webRequest]);\n$run-&gt;addWebResponses([$webResponse]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/webRequest.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/webRequest.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addWebRequest(\n                $factory-&gt;webRequest()\n                    -&gt;protocol('http')\n                    -&gt;version('1.1')\n                    -&gt;method('GET')\n                    -&gt;target('httpbin.org/bearer')\n                    -&gt;addHeader('accept', 'application/json')\n                    -&gt;addHeader('Authorization', 'none')\n            )\n            -&gt;addWebResponse(\n                $factory-&gt;webResponse()\n                    -&gt;protocol('http')\n                    -&gt;version('1.1')\n                    -&gt;statusCode(401)\n                    -&gt;reasonPhrase('Error: UNAUTHORIZED')\n                    -&gt;addHeader('access-control-allow-credentials', 'true')\n                    -&gt;addHeader('access-control-allow-origin', '*')\n                    -&gt;addHeader('connection', 'keep-alive')\n                    -&gt;addHeader('content-length', '0')\n                    -&gt;addHeader('content-type', 'text/html; charset=utf-8')\n                    -&gt;addHeader('date', 'Sun, 07 Nov 2021 08:59:53 GMT')\n                    -&gt;addHeader('server', 'gunicorn/19.9.0')\n                    -&gt;addHeader('www-authenticate', 'Bearer')\n            )\n    )\n;\n</code></pre>"},{"location":"reference/webResponse/","title":"webResponse","text":""},{"location":"reference/webResponse/#webresponse-object","title":"webResponse object","text":"<p>A <code>webResponse</code> object describes the response to an HTTP request (RFC7230)</p>  Graph sarif.json Simple API Fluent Builder API <p></p> <p>Tip</p> <p>Generated with following command : <code>php ./resources/serialize.php webRequest docs/assets/sarif 192</code></p> docs/assets/sarif/webRequest.json<pre><code>{\n    \"$schema\": \"https://json.schemastore.org/sarif-2.1.0.json\",\n    \"version\": \"2.1.0\",\n    \"runs\": [\n        {\n            \"tool\": {\n                \"driver\": {\n                    \"name\": \"CodeScanner\",\n                    \"semanticVersion\": \"1.1.2-beta.12\",\n                    \"informationUri\": \"https://codeScanner.dev\"\n                }\n            },\n            \"webRequests\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"target\": \"httpbin.org/bearer\",\n                    \"method\": \"GET\",\n                    \"headers\": {\n                        \"accept\": \"application/json\",\n                        \"Authorization\": \"none\"\n                    }\n                }\n            ],\n            \"webResponses\": [\n                {\n                    \"protocol\": \"http\",\n                    \"version\": \"1.1\",\n                    \"statusCode\": 401,\n                    \"reasonPhrase\": \"Error: UNAUTHORIZED\",\n                    \"headers\": {\n                        \"access-control-allow-credentials\": \"true\",\n                        \"access-control-allow-origin\": \"*\",\n                        \"connection\": \"keep-alive\",\n                        \"content-length\": \"0\",\n                        \"content-type\": \"text/html; charset=utf-8\",\n                        \"date\": \"Sun, 07 Nov 2021 08:59:53 GMT\",\n                        \"server\": \"gunicorn/19.9.0\",\n                        \"www-authenticate\": \"Bearer\"\n                    }\n                }\n            ],\n            \"results\": []\n        }\n    ]\n}\n</code></pre> examples/webRequest.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nuse Bartlett\\Sarif\\Definition\\Run;\nuse Bartlett\\Sarif\\Definition\\Tool;\nuse Bartlett\\Sarif\\Definition\\ToolComponent;\nuse Bartlett\\Sarif\\Definition\\WebRequest;\nuse Bartlett\\Sarif\\Definition\\WebResponse;\nuse Bartlett\\Sarif\\SarifLog;\n\nrequire_once dirname(__DIR__) . '/vendor/autoload.php';\n\n$driver = new ToolComponent();\n$driver-&gt;setName('CodeScanner');\n$driver-&gt;setInformationUri('https://codeScanner.dev');\n$driver-&gt;setSemanticVersion('1.1.2-beta.12');\n\n$tool = new Tool();\n$tool-&gt;setDriver($driver);\n\n$webRequest = new WebRequest();\n$webRequest-&gt;setProtocol('http');\n$webRequest-&gt;setVersion('1.1');\n$webRequest-&gt;setMethod('GET');\n$webRequest-&gt;setTarget('httpbin.org/bearer');\n$webRequest-&gt;addAdditionalPropertiesHeaders([\n    'accept' =&gt; 'application/json',\n    'Authorization' =&gt; 'none',\n]);\n\n$webResponse = new WebResponse();\n$webResponse-&gt;setProtocol('http');\n$webResponse-&gt;setVersion('1.1');\n$webResponse-&gt;setStatusCode(401);\n$webResponse-&gt;setReasonPhrase('Error: UNAUTHORIZED');\n$webResponse-&gt;addAdditionalProperties([\n    'access-control-allow-credentials' =&gt; 'true',\n    'access-control-allow-origin' =&gt; '*',\n    'connection' =&gt; 'keep-alive',\n    'content-length' =&gt; '0',\n    'content-type' =&gt; 'text/html; charset=utf-8',\n    'date' =&gt; 'Sun, 07 Nov 2021 08:59:53 GMT',\n    'server' =&gt; 'gunicorn/19.9.0',\n    'www-authenticate' =&gt; 'Bearer',\n]);\n\n$run = new Run();\n$run-&gt;setTool($tool);\n$run-&gt;addWebRequests([$webRequest]);\n$run-&gt;addWebResponses([$webResponse]);\n\n$log = new SarifLog([$run]);\n</code></pre> <p>Note</p> <p>This alternative API is available since release 1.5.0</p> examples/builder/webRequest.php<pre><code>&lt;?php declare(strict_types=1);\n/**\n * This file is part of the Sarif-PHP-SDK package.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n *\n * @author Laurent Laville\n */\n\nrequire_once dirname(__DIR__, 2) . '/vendor/autoload.php';\n\nuse Bartlett\\Sarif\\Factory\\BuilderFactory;\n\n$factory = new BuilderFactory();\n\n// @link https://github.com/llaville/sarif-php-sdk/blob/1.1/docs/reference/webRequest.md\n$spec = $factory-&gt;specification('2.1.0')\n    -&gt;addRun(\n        $factory-&gt;run()\n            -&gt;tool(\n                $factory-&gt;tool()\n                    -&gt;driver(\n                        $factory-&gt;driver()\n                            -&gt;name('CodeScanner')\n                            -&gt;semanticVersion('1.1.2-beta.12')\n                            -&gt;informationUri('https://codeScanner.dev')\n                    )\n            )\n            -&gt;addWebRequest(\n                $factory-&gt;webRequest()\n                    -&gt;protocol('http')\n                    -&gt;version('1.1')\n                    -&gt;method('GET')\n                    -&gt;target('httpbin.org/bearer')\n                    -&gt;addHeader('accept', 'application/json')\n                    -&gt;addHeader('Authorization', 'none')\n            )\n            -&gt;addWebResponse(\n                $factory-&gt;webResponse()\n                    -&gt;protocol('http')\n                    -&gt;version('1.1')\n                    -&gt;statusCode(401)\n                    -&gt;reasonPhrase('Error: UNAUTHORIZED')\n                    -&gt;addHeader('access-control-allow-credentials', 'true')\n                    -&gt;addHeader('access-control-allow-origin', '*')\n                    -&gt;addHeader('connection', 'keep-alive')\n                    -&gt;addHeader('content-length', '0')\n                    -&gt;addHeader('content-type', 'text/html; charset=utf-8')\n                    -&gt;addHeader('date', 'Sun, 07 Nov 2021 08:59:53 GMT')\n                    -&gt;addHeader('server', 'gunicorn/19.9.0')\n                    -&gt;addHeader('www-authenticate', 'Bearer')\n            )\n    )\n;\n</code></pre>"}]}